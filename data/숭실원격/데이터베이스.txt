데이터베이스 www.smart.ac.kr 강  의  교  안 데이터베이스 1 데이터베이스 www.smart.ac.kr 데이터베이스의 기본 개념 데이터와 정보의 차이를 이해하고, 데이터베이스의 필요성을  1주차  수업목표   설명할 수 있다. 1교시  1. 데이터와 정보의 차이 세부내용  2. 데이터베이스의 필요성 1. 데이터와 정보의 차이 ▶ 데이터와 정보 v 데이터(data)란 현실 세계에서 단순히 관찰하거나 측정해 수집한 사실이나 값 v 정보(information)란 의사 결정에 유용하게 활용할 수 있도록 데이터를 처리한 결과물 ­ 데이타 ≠ 정보 ­ P(D) = I ­ 정보 처리, 자료 처리 : 정보 추출 방법 데이타(D) 처리기(P) 정보(I) « 데이터와 정보의 이해 : 원유와 가공 우유 2. 데이터베이스의 필요성 ▶ 정보 처리(information processing) ­ 데이터에서 정보를 추출하는 과정 또는 방법 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 2 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ 정보 처리의 예 정보 데이터

1) 정보 시스템(information system) ­ 조직  운영에  필요한  데이터를  수집하여  저장해두었다가  필요할  때  유용한  정보를  만들어  주는 수단 
2) 데이터베이스  ­ 정보 시스템 안에서 데이터를 저장하고 있다가 필요할 때 제공하는 역할을 담당
3) 응용 시스템(Application System) ­ 한 부서를 위한 서브 시스템 ­ 응용 프로그램(application program)으로 구성 « 정보 시스템의 역할과 구성 정보 시스템 데이터 정보 현실세계 처리 의사 결정자 ▶ 정보 시스템(Cont’d)
1) 경영 정보 시스템(MIS : Management Information System) ­ 기획(planning), 운영(operation), 통제(control) 
2) 의사 결정 지원 시스템(DSS : Decision Support System) ­ 광의의 정보 시스템 ­ 데이타 웨어하우스(Data warehouse) ⋅ Information repository, information archive ­ 데이타 마이닝(Data mining) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 3 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ⋅ Knowledge discovery for finding rules or patterns ­ 지식 관리 시스템(Knowledge management system) ▶ 일괄 처리(batch processing)
Ÿ 사전 준비 작업 필요 ­ 원시 데이타(raw data)의 수집 ­ 분류 정리하여 화일(file)에 수록
Ÿ 시스템 중심 처리방법 ­ 높은 시스템 성능 ­ 낮은 처리 비용
Ÿ 순차 접근 방법 이용 업무에 유리 ▶ 일괄 처리 시스템(batch processing system) 원시 데이타 분류 및 정리 컴퓨터 보고서 수집 화일 ▶ 온라인 처리(online processing)
Ÿ 실시간(real time) 처리
Ÿ 사용자 중심 처리방법 ­ 낮은 시스템 성능 ­ 높은 처리 비용
Ÿ 통신 제어기(communication controller)가 필요
Ÿ 보수, 유지, 회복의 오버헤드 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 4 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 온라인 처리 시스템(online processing system) 데이타 보고서 데이타 데이타/보고서 통신제어기 컴퓨터 (저장 데이타) 데이타베이스 ▶ 분산 처리(distributed processing)
Ÿ 분산 처리기(dispersed processor) 
- 컴퓨터 시스템
Ÿ 분산 데이타베이스(distributed database)
Ÿ 통신 네트워크(communication network)
Ÿ 클라이언트/서버(client/server) 시스템 운영 형태 ▶ 분산처리 시스템(distributed processing system) 컴퓨터 컴퓨터 (클라이언트/서버) (클라이언트/서버) 데이타베이스 데이타베이스 통신 네트워크 컴퓨터 (클라이언트/서버) 데이타베이스 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 5 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스 정의와 특성 1. 데이터베이스의 정의와 특성을 설명할 수 있다.  1주차  수업목표   2. 데이터베이스의 구성요소와 구조를 설명할 수 있다. 2교시  1. 데이터베이스의 정의와 특성 세부내용  2. 데이터베이스의 구성요소와 구조 ※ 학습목표  공유 데이터 실시간 접근 통합 데이터 정의 특성 계속 변화 저장 데이터 동시 공유 운영 데이터 내용 기반 참조 데이터베이스 데이터 데이터 데이터 1. 데이터베이스의 정의와 특성 ▶ 데이터베이스(DB; DataBase) ­ 특정 조직의 여러 사용자가 공유하여 사용할 수 있도록 통합해서 저장한 운영 데이터의 집 합 integrated data stored data 통합 데이터 저장 데이터 데이터베이스의  정의 shared data operational data 공유 데이터 운영 데이터 ▶ 데이터베이스의 정의

1) 공유 데이터 ­ 특정 조직의 여러 사용자가 함께 소유하고 이용할 수 있는 공용 데이터
2) 통합 데이터 ­ 최소의 중복과 통제 가능한 중복만 허용하는 데이터 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 6 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
3) 저장 데이터 ­ 컴퓨터가 접근할 수 있는 매체에 저장된 데이터
4) 운영 데이터 ­ 조직의 주요 기능을 수행하기 위해 지속적으로 꼭 필요한 데이터  ▶ 데이터베이스의 특성 real
-time accessibility continuous evolution 실시간 접근 계속 변화 데이터베이스의  특성 contents reference concurrent sharing 내용 기반 참조 동시 공유

1) 실시간 접근 ­ 사용자의 데이터 요구에 실시간으로 응답
2) 계속 변화 ­ 데이터의 계속적인 삽입, 삭제, 수정을 통해 현재의 정확한 데이터를 유지
3) 동시 공유 ­ 서로 다른 데이터의 동시 사용뿐만 아니라 같은 데이터의 동시 사용도 지원
4) 내용 기반 참조 ­ 데이터가 저장된 주소나 위치가 아닌 내용으로 참조  예) 재고량이 1,000개 이상인 제품의 이름을 검색하시오. « 데이터베이스의 이용 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 7 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 2. 데이터베이스의 구성요소와 구조 ▶ 개체(entity) 속성 학생 학번 이름 학과 개체 타입 1234 홍길동 컴퓨터 개체 집합 개체 인스턴스 1825 김철수 전자 ▶ 관계(relationship)
Ÿ 속성 관계(attribute relationship) ­ 개체 내(intra
-entity) 관계 : 특성(properties)
Ÿ 개체 관계(entity relationship) ­ 개체 간(inter
-entity) 관계 학생 지도 교수 학번 이름 학과 교수번호 이름 학과 ▶ Database의 구조

1) 논리적 구조(logical organization) ­ 사용자의 관점에서 본 데이타의 개념적 구조(conceptual structure) ­ 데이타의 논리적 배치(logical allocation) ­ 논리적 레코드(logical record)
2) 물리적 구조(physical organization) ­ 저장 관점에서 본 데이타의 물리적 배치(physical allocation) ­ 저장장치에 저장된 데이타의 실제 구조(actual structure) ­ 추가 정보를 포함  ⋅ 인덱스, 포인터 체인, 오버플로 구역 등 ­ 저장 레코드(stored record) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 8 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 논리적 구조와 물리적 구조 <논리적 구조> 레코드 A 레코드 B 논리적 사용자 레코드 C 레코드 레코드 D <물리적 구조> 저장 레코드 시스템 (저장장치) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 9 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스 관리 시스템 1. 데이터베이스 관리 시스템의 등장 배경을 설명할 수 있다.  1주차  수업목표   2. 데이터베이스 관리 시스템의 정의와 발전과정을 설명할 수  3교시  있다. 1. 데이터베이스 관리 시스템의 등장 배경 세부내용  2. 데이터베이스 관리 시스템의 정의와 발전과정 ※ 학습목표  데이터 관리  데이터베이스 관리 시스템 파일 시스템 데이터 중복성 중복의 최소화 단점 장점 발전 과정 데이터 독립성  데이터 종속성 네트워크 DBMS 증진 1세대 계층 DBMS 장점 저비용 고비용 단점 2세대 관계 DBMS 회복 기법이  객체지향 DBMS 복잡 3세대 객체관계 DBMS 1. 데이터베이스 관리 시스템의 등장 배경 ▶ 파일 시스템(file system) ­ 데이터를  파일로  관리하기  위해  파일을  생성·삭제·수정·검색하는  기능을  제공하는  소프트웨 어 ­ 응용 프로그램마다 필요한 데이터를 별도의 파일로 관리함
Ÿ 파일 시스템에서의 데이터 관리 고객 관리 주문 관리 응용 프로그램 응용 프로그램 고객 데이터 파일 주문 데이터 파일 중복 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 10 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 파일 시스템의 문제점 ­ 같은 내용의 데이터가 여러 파일에 중복 저장됨 ­ 응용 프로그램이 데이터 파일에 종속적임 ­ 데이터 파일에 대한 동시 공유, 보안, 회복 기능이 부족함 ­ 응용 프로그램 개발이 쉽지 않음 ▶ 파일 시스템의 주요 문제점 ­ 같은 내용의 데이터가 여러 파일에 중복 저장됨 ⇨ 데이터 중복성 ⋅ 저장 공간의 낭비는 물론 데이터 일관성과 데이터 무결성을 유지하기 어려움
Ÿ 파일 시스템의 데이터 중복성 문제에 대한 일차적 해결 방안 고객 관리 주문 관리 응용 프로그램 응용 프로그램 데이터 통합 ­ 응용 프로그램이 데이터 파일에 종속적임 ⇨ 데이터 종속성 ⋅ 사용하는 파일의 구조를 변경하면 응용 프로그램도 함께 변경해야 함
Ÿ 파일 구조 변경 예 변경 2. 데이터베이스 관리 시스템의 정의와 발전과정 ▶ 데이터베이스 관리 시스템 v DBMS(DataBase Management System) ­ 파일 시스템의 문제를 해결하기 위해 제시된 소프트웨어 ­ 조직에 필요한 데이터를 데이터베이스에 통합하여 저장하고 관리함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 11 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 파일 시스템과 데이터베이스 관리 시스템 ▶ 데이터베이스 관리 시스템에서의 데이터 관리 ▶ 데이터베이스 관리 시스템의 주요 기능 정의 기능 데이터베이스 구조를 정의하거나 수정할 수 있음 조작 기능 데이터를 삽입·삭제·수정·검색하는 연산을 할 수 있음 제어 기능 데이터를 항상 정확하고 안전하게유지할 수 있음 ▶ 데이터베이스 관리 시스템의 장점과 단점 장점 단점 ⋅ 데이터 중복을 통제할 수 있음 ⋅ 비용이 많이 듦 ⋅ 데이터 독립성이 확보됨 ⋅ 백업과 회복 방법이 복잡함 ⋅ 데이터를 동시 공유할 수 있음 ⋅ 중앙 집중 관리로 인한 취약점이 존재  ⋅ 데이터 보안이 향상됨 ⋅ 데이터 무결성을 유지할 수 있음  ⋅ 표준화할 수 있음 ⋅ 장애 발생 시 회복이 가능함 ⋅ 응용 프로그램 개발 비용이 줄어듦 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 12 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 데이터베이스 관리 시스템의 발전과정 

1) 1세대 : 네트워크 DBMS, 계층 DBMS ­ 네트워크 DBMS : 데이터베이스를 그래프 형태로 구성 예) IDS(Integrated Data Store) ­ 계층 DBMS : 데이터베이스를 트리 형태로 구성 예) IMS(Information Management System)
Ÿ 1세대 DBMS 구조의 예 단점 부서 주문 판매 상품 담당 부서 직원 관리 소속 직원 상품 고객 <네트워크 DBMS> 주문고객 판매상품 <계층 DBMS>

2) 2세대 : 관계 DBMS ­ 관계 DBMS : 데이터베이스를 테이블 형태로 구성 예) 오라클(Oracle), MS SQL 서버, 액세스(Access), 인포믹스(Informix), MySQL
Ÿ 관계 DBMS의 테이블 예 : 고객테이블

3) 3세대 : 객체지향 DBMS, 객체관계 DBMS ­ 객체지향 DBMS : 객체를 이용해 데이터베이스를 구성 예) 오투(O2), 온투스(ONTOS), 젬스톤(GemStone) ­ 객체관계 DBMS : 객체 DBMS + 관계 DBMS 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 13 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스 시스템의 정의 1. 데이터베이스 시스템의 정의를 설명할 수 있다.  2주차  수업목표   2. 데이터베이스의 스키마와 인스턴스를 설명할 수 있다. 1교시  1. 데이터베이스 시스템의 정의 세부내용  2. 데이터베이스의 스키마와 인스턴스 ※ 학습목표  데이터베이스 관리자 데이터 정의어 최종 사용자 사용자 데이터언어 데이터 조작어 응용프로그래머 7장의 SQL 데이터 제어어 데이터베이스 시스템 데이터베이스 데이터베이스 관리 시스템 1장의 기본 개념 3단계 구조 구성 2장의 기본 개념 외부 스키마 외부 단계 질의 처리기 개념 스키마 개념 단계 저장 데이터 관리자 내부 스키마 내부 단계 1. 데이터베이스 시스템의 정의 ▶ 데이터베이스 시스템 v DBS(DataBase  System) 
-  데이터베이스에  데이터를  저장하고,  이를  관리하여  조직에  필 요한 정보를 생성해주는 시스템 « 데이터베이스 시스템의 구성 사용자 데이터 언어 컴퓨터 데이터베이스 관리 시스템 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 14 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 2. 데이터베이스의 스키마와 인스턴스 ▶ 스키마와 인스턴스

1) 스키마(Schema) ­ 데이터베이스에 저장되는 데이터 구조와 제약조건을 정의한 것
2) 인스턴스(Instance) ­ 스키마에 따라 데이터베이스에 실제로 저장된 값 « 스키마의 예 고객 ▶ 데이터베이스의 구조
1) 3단계 데이터베이스 구조 ­ 미국 표준화 기관인 ANSI/SPARC에서 제안 ­ 데이터베이스를  쉽게  이해하고  이용할  수  있도록  하나의  데이터베이스를  관점에  따라  세  단계로 나눈 것
Ÿ 외부 단계(External level) : 개별 사용자 관점
Ÿ 개념 단계(Conceptual level) : 조직 전체의 관점
Ÿ 내부 단계(Internal level) : 물리적인 저장 장치의 관점 ­ 각 단계별로 다른 추상화(abstraction) 제공 ⋅ 내부 단계에서 외부 단계로 갈수록 추상화 레벨이 높아짐 « 3단계 데이터베이스 구조의 개념 외부 단계 (집주인 관점) 개념 단계 (관리인 관점) 내부 단계 (건설 업체 관점) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 15 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 3단계 데이터베이스 구조의 이해

2) 3단계 데이터베이스 구조 : 외부 단계 ­ 데이터베이스를 개별 사용자 관점에서 이해하고 표현하는 단계 ­ 데이터베이스 하나에 외부 스키마가 여러 개 존재할 수 있음
Ÿ 외부 스키마(External schema) ­ 외부 단계에서 사용자에게 필요한 데이터베이스를 정의한 것 ­ 각 사용자가 생각하는 데이터베이스의 모습, 즉 논리적 구조로 사용자마다 다름 ­ 서브 스키마(sub schema)라고도 함

3) 3단계 데이터베이스 구조 : 개념 단계 ­ 데이터베이스를 조직 전체의 관점에서 이해하고 표현하는 단계 ­ 데이터베이스 하나에 개념 스키마가 하나만 존재함
Ÿ 개념 스키마(Conceptual schema) ­ 개념 단계에서 데이터베이스 전체의 논리적 구조를 정의한 것 ­ 조직 전체의 관점에서 생각하는 데이터베이스의 모습 ­ 전체 데이터베이스에 어떤 데이터가 저장되는지, 데이터들 간에는 어떤 관계가 존재하고  어떤  제약조건이  존재하는지에  대한  정의뿐만  아니라,  데이터에  대한  보안  정책이나  접 근 권한에 대한 정의도 포함

4) 3단계 데이터베이스 구조 : 내부 단계 ­ 데이터베이스를 저장 장치의 관점에서 이해하고 표현하는 단계 ­ 데이터베이스 하나에 내부 스키마가 하나만 존재함
Ÿ 내부 스키마(Internal schema) ­ 전체 데이터베이스가 저장 장치에 실제로 저장되는 방법을 정의한 것 ­ 레코드 구조, 필드 크기, 레코드 접근 경로 등 물리적 저장 구조를 정의 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 16 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 3단계 데이터베이스 구조 분류 외부스키마 개념스키마 내부스키마 다른 명칭 서브스키마 스키마 저장스키마 사용자, 데이터베이스  시스템 프로그래머, 대상 응용 프로그래머의  관리자(DBA)의 관점 시스템 설계자 관점 관점 응용프로그램이  데이터베이스 자체의  물리적 저장장치의  특징 데이터베이스의  전체적인 논리적  입장에서 본 실제  일부를 보는 관점 구조 데이터베이스 구조 용도 사용자 뷰 전체적인 뷰 레코드의 물리적 구조 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 17 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스의 구조 1. 데이터베이스의 3단계 구조와 매핑을 설명할 수 있다. 2주차  수업목표   2. 데이터베이스의 사용자의 종류와 특징을 설명할 수 있다. 2교시  1. 데이터베이스의 3단계 구조와 매핑 세부내용  2. 데이터베이스의 사용자 1. 데이터베이스의 3단계 구조와 매핑 ▶ 데이터베이스의 구조 « 3단계 데이터베이스 구조 분류  외부스키마 개념스키마 내부스키마 다른 명칭 서브스키마 스키마 저장스키마 사용자, 데이터베이스  시스템 프로그래머, 대상 응용 프로그래머의  관리자(DBA)의 관점 시스템 설계자 관점 관점 응용프로그램이  데이터베이스 자체의  물리적 저장장치의  특징 데이터베이스의  전체적인 논리적  입장에서 본 실제  일부를 보는 관점 구조 데이터베이스 구조 용도 사용자 뷰 전체적인 뷰 레코드의 물리적 구조 고객 분석팀 상품 배송팀 외부 단계 (사용자 관점) 고객 분석팀의 외부 스키마 상품 배송팀의 외부 스키마 개념 스키마 개념 단계 (조직 전체 관점) 내부 스키마 레코드 길이 : 70바이트 내부 단계 (저장 장치 관점) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 18 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

1) 3단계 데이터베이스 구조의 사상 또는 매핑 ­ 스키마 사이의 대응 관계 
Ÿ 외부/개념 사상  ­ 외부 스키마와 개념 스키마의 대응 관계 ⋅ 응용 인터페이스(application interface)라고도 함
Ÿ 개념/내부 사상  ­ 개념 스키마와 내부 스키마의 대응 관계 ⋅ 저장 인터페이스(storage interface)라고도 함 ­ 미리 정의된 사상 정보를 이용하여 사용자가 원하는 데이터에 접근 ­ 데이터베이스를  3단계  구조로  나누고  단계별로  스키마를  유지하며  스키마  사이의  대응  관 계를 정의하는 궁극적인 목적 ⇨ 데이터 독립성의 실현

2) 데이터 독립성(Data independency) ­ 하위 스키마를 변경하더라도 상위 스키마가 영향을 받지 않는 특성
Ÿ 논리적 데이터 독립성 ­ 개념 스키마가 변경되어도 외부 스키마는 영향을 받지 않음 ­ 개념 스키마가 변경되면 관련된 외부/개념 사상만 정확하게 수정해주면 됨
Ÿ 물리적 데이터 독립성 ­ 내부 스키마가 변경되어도 개념 스키마는 영향을 받지 않음 ­ 내부 스키마가 변경되면 관련된 개념/내부 사상만 정확하게 수정해주면 됨 « 3단계 데이터베이스 구조에서 스키마 간의 사상 외부 단계 외부 스키마1 외부 스키마2 외부 스키마N (사용자 관점) 외부/개념 사상(논리적 데이터 독립성) 개념 단계 개념 스키마 (조직 전체 관점) 개념/내부 사상(물리적 데이터 독립성) 내부 단계 내부 스키마 (저장 장치 관점) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 19 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

3) 데이터 사전(Data dictionary) ­ 시스템 카탈로그(System catalog)라고도 함 ­ 데이터베이스에 저장되는 데이터에 관한 정보, 즉 메타 데이터를 유지하는 시스템 데이터베 이스 ※ 메타 데이터(Meta data) : 데이터에 대한 데이터 ­ 스키마, 사상 정보, 다양한 제약조건 등을 저장 ­ 데이터베이스 관리 시스템이 스스로 생성하고 유지함 ­ 일반 사용자도 접근이 가능하지만 저장 내용을 검색만 가능
4) 데이터 디렉토리(Data directory) ­ 데이터 사전에 있는 데이터에 실제로 접근하는 데 필요한 위치 정보를 저장하는 시스템 데 이터베이스 ­ 일반 사용자의 접근은 허용되지 않음
5) 사용자 데이터베이스(User database) ­ 사용자가 실제로 이용하는 데이터가 저장되어 있는 일반 데이터베이스 2. 데이터베이스의 사용자 ▶ 데이터베이스 사용자 ­ 데이터베이스를 이용하기 위해 접근하는 모든 사람 ­ 이용 목적에 따라 데이터베이스 관리자, 최종 사용자, 응용 프로그래머로 구분 데이터베이스 데이터베이스 시스템을 운영하고 관리함 관리자 사용자 최종사용자 데이터베이스에 접근하여 =일반사용자 데이터를 조작함 응용 데이터 언어를 삽입하여 응용 프로그램 작성함 프로그래머
1) 데이터베이스 관리자(DBA ; DataBase Administrator) ­ 데이터베이스 시스템을 운영·관리하는 사람 ­ 주로 데이터 정의어와 데이터 제어어를 사용
Ÿ 주요업무 ­ 데이터베이스 구성 요소 선정 ­ 데이터베이스 스키마 정의  ­ 물리적 저장 구조와 접근 방법 결정 ­ 무결성 유지를 위한 제약조건 정의 ­ 보안 및 접근 권한 정책 결정 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 20 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 백업 및 회복 기법 정의 ­ 시스템 데이터베이스 관리 ­ 시스템 성능 감시 및 성능 분석 ­ 데이터베이스 재구성

2) 최종 사용자(End user) ­ 데이터베이스에 접근하여 데이터를 조작(삽입·삭제·수정·검색)하는 사람 ­ 주로 데이터 조작어를 사용 ­ 캐주얼 사용자와 초보 사용자로 구분
3) 응용 프로그래머(Application programmer) ­ 데이터 언어를 삽입하여 응용 프로그램을 작성하는 사람 ­ 주로 데이터 조작어를 사용  « 최종 사용자와 응용 프로그래머의 예 응용 프로그래머 최종 사용자 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 21 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터 언어 1. 데이터 언어의 종류와 특징을 설명할 수 있다.  2주차  수업목표   2. 데이터베이스 관리 시스템의 구성을 설명할 수 있다. 3교시  1. 데이터 언어 세부내용  2. 데이터베이스 관리 시스템의 구성 1. 데이터 언어 ▶ 데이터 언어
1) 데이터 언어의 종류와 용도 ­ 사용자와 데이터베이스 관리 시스템 간의 통신 수단 ­ 사용 목적에 따라 데이터 정의어, 데이터 조작어, 데이터 제어어로 구분 스키마를 정의하거나, 데이터 정의어 수정 또는 삭제하기 위해서 사용함 (DDL) 데이터 데이터 삽입⦁삭제⦁수정⦁검색 등의 데이터 조작어 언어 처리를 요구하기 위해서 사용함 (DML) 데이터 제어어 내부적으로 필요한 규칙이나 기법을 (DCL) 정의하기 위해서 사용함 ▶ 정의어 v 데이터베이스를  정의(Definition),  조작(Manipulation),  제어(Control)하기  위한  시스템과 의 통신 수단
1) 데이터 정의어(DDL ; Data Definition Language) ­ 데이터베이스 구조를 정의(Definitions)하고 변경(Alteration)하는데 사용
2) 데이터 정의의 내용
Ÿ 논리적 데이터 구조의 정의 ­ 스키마, 외부 스키마 명세
Ÿ 물리적 데이터 구조의 정의 ­ 내부 스키마 명세 ­ 데이터 저장 정의어 (Data Storage Definition Language)
Ÿ 논리적 데이터 구조와 물리적 데이터 구조 간의 사상을 정의 ▶ 조작어

1) 데이터 조작어(DML ; Data Manipulation Language) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 22 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 사용자(응용 프로그램)와 DBMS 사이의 통신 수단 ­ 데이터 처리 연산(Operations)의 집합(데이터의 검색, 삽입, 삭제, 변경 연산)
2) 데이터 조작어의 종류
Ÿ 절차적(Procedural) DML ­ 저급 데이터 언어(Low
-level data language) ­ “What” 과 “How”를 명세 ­ 한번에 하나의 레코드만 처리(One record at a time) ­ 응용 프로그램 속에 삽입(Embedded)되어 사용 ­ DML 예비 컴파일러(Precompiler)에 의해 처리
Ÿ 비절차적(Non
-procedural) DML ­ 고급 데이터 언어(High
-level data language) ­ “What” 만 명세(Declarative)하고 “How”는 시스템에 위임 ­ 한번에 여러 개의 레코드를 처리(Set of records at a time) ­ 질의어(Query Language)  ⋅ 독자적이고 대화식 : Command 타입 ⋅ 프로그램의 추상적 표현
Ÿ 데이터 부속어(DSL, Data Sublanguage) ­ host program 속에 삽입되어 사용되는 DML ­ 비절차적 또는 절차적 DML
Ÿ 데이터 언어의 완전성(Completeness of data language) ­ 사용자가 원하면 어떤 객체도 추출할 수 있고, 관계도 표현할 수 있는 능력 « 절차적 데이터 조작어와 비절차적 조작어의 이해 사오는 방법까지 구체적으로 알려주는  두부 심부름 상황 : 절차적 조작어 단순히 두부를 사오라고만 지시하는 두부 심부름 상황 : 비절차적 조작어 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 23 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 제어어

1) 데이터 제어어(DCL ; Data Control Language) ­ 내부적으로 필요한 규칙이나 기법을 정의하기 위해 사용
Ÿ 사용 목적 ­ 무결성 : 정확하고 유효한 데이터만 유지 ­ 보안 : 허가 받지 않은 사용자의 데이터 접근 차단, 허가된 사용자에 권한 부여 ­ 회복 : 장애가 발생해도 데이터 일관성 유지 ­ 동시성 제어 : 동시 공유 지원 ­ DB 관리 목적으로 DBA가 사용 2. 데이터베이스 관리 시스템의 구성 ▶ 데이터베이스 관리 시스템 ­ 데이터베이스 관리와 사용자의 데이터 처리 요구 수행
Ÿ 주요 구성 요소
① 질의 처리기(Query processor) ­ 사용자의 데이터 처리 요구를 해석하여 처리 ­ DDL 컴파일러, DML 프리 컴파일러, DML 컴파일러, 런타임 데이터베이스 처리기, 트랜 잭션 관리자 등을 포함
② 저장 데이터 관리자(Stored data manager) ­ 디스크에 저장된 사용자 데이터베이스와 데이터 사전을 관리하고, 여기에 실제고 접근하 는 역할을 담당 « 데이터베이스 관리 시스템의 구성 데이터베이스 관리자 최종 사용자 응용 프로그래머 데이터 정의어 데이터 조작어 응용 프로그램 DDL 컴파일러 DML 컴파일러 DML 프리 컴파일러 런타임 데이터베이스 질의 처리기 처리기 트랜잭션 관리자 저장 데이터 관리자 데이터베이스 관리 시스템 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 24 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터 모델링과 데이터 모델의 개념 1. 데이터 모델의 개념과 특징을 설명할 수 있다.  3주차  수업목표   2. 개념적 데이터 모델과 논리적 데이터 모델을 설명할 수 있다.  1교시  1. 데이터 모델 세부내용  2. 개념적 데이터 모델과 논리적 데이터 모델 1. 데이터 모델 ▶ 데이터 모델링과 데이터 모델의 개념 « 현실 세계와 컴퓨터 세계 ▶ 데이터 모델링(data modeling) ­ 현실 세계에 존재하는 데이터를 컴퓨터 세계의 데이터베이스로 옮기는 변환 과정 ­ 데이터베이스 설계의 핵심 과정 « 코끼리의 데이터 모델링 예 추상화(abstraction) ▶ 2단계 데이터 모델링

1) 개념적 데이터 모델링(conceptual modeling) ­ 현실 세계의 중요 데이터를 추출하여 개념 세계로 옮기는 작업
2) 논리적 데이터 모델링(logical modeling) ­ 개념 세계의 데이터를 데이터베이스에 저장하는 구조로 표현하는 작업 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 25 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 코끼리의 2단계 데이터 모델링 예 현실 세계 개념 세계 컴퓨터 세계 ▶ 데이터 모델(data model) ­ 데이터 모델링의 결과물을 표현하는 도구
1) 개념적 데이터 모델 ­ 사람의  머리로  이해할  수  있도록  현실  세계를  개념적  모델링하여  데이터베이스의  개념적  구조로 표현하는 도구 예) 개체 ­ 관계 모델
2) 논리적 데이터 모델 ­ 개념적 구조를 논리적 모델링하여 데이터베이스의 논리적 구조로 표현하는 도구 예) 관계 데이터 모델 2. 개념적 데이터 모델과 논리적 데이터 모델 ▶ 개념적 데이터 모델 v 개념적 데이터 모델은 현실 세계에 대한 인간의 이해를 돕기 위해 현실 세계에 대한 인식 을 추상적 개념으로 표현하는 과정 ­ 개념적 데이터 모델은 속성들로 기술된 개체 타입과 이 개체 타입들 간의 관계를 이용하여  현실 세계를 표현 ­ 개념적  데이터  모델은  현실  세계에  존재하는  개체를  인간이  이해  할  수  있는  정보  구조로  표현하기 때문에 정보 모델이라는 이름을 가짐 ▶ 논리적 데이터 모델 v 논리적 데이터 모델은 개념적 모델링 과정에서 얻은 개념적 구조를 컴퓨터가 이해하고, 처 리 할 수 있는 컴퓨터 세계의 환경에 맞도록 변환하는 과정 ­ 논리적 데이터 모델은 필드로 기술된 데이터 타입과 이 데이터 타입들 간의 관계를 이용하 여 현실 세계를 표현 ­ 단순히 데이터 모델이라고 하면, 논리적 데이터 모델을 의미 ­ 특정 DBMS는 특정 논리적 데이터 모델 하나만 선정하여 사용 ­ 논리적  데이터  모델은  데이터  간의  관계를  어떻게  표현하느냐에  따라  관계  모델,  계층  형  모델, 네트워크 모델로 구분 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 26 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 개념적 데이터 모델과 논리적 데이터 모델 개체 개체타입 레코드 특성 속성 필드 값 값 값 현실 세계 개념 세계 컴퓨터 세계 개념적 데이터 모델링 논리적 데이터 모델링 정보 모델 데이터 모델링 ▶ 데이터 모델의 요소 « 데이터 모델의 구성 연산 (operation) 데이터 모델 데이터 구조 제약조건 (data structure) (constraint)
1) 구조(Structure) ­ 논리적으로 표현된 개체 타입들 간의 관계로서 데이터 구조 및 정적 성질을 표현
2) 연산 ­ 데이터베이스에  저장된  실제  데이터를  처리하는  작업에  대한  명세로서  데이터베이스를  조 작하는 기본 도구
3) 제약조건 ­ 데이터베이스에 저장될 수 있는 실제 데이터의 논리적인 제약 조건 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 27 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 개체 관계 모델(1) 3주차  수업목표   개체 관계 모델의 구성요소인 개체와 속성을 설명할 수 있다. 2교시  1. 개체 관계 모델의 구성요소
-개체 세부내용  2. 개체 관계 모델의 구성요소
-속성 1. 개체 관계 모델의 구성요소 
- 개체 ▶ 개체 관계 모델의 구성요소

1) 개체­관계 모델(E­R model; Entity ­ Relationship model) ­ 피터 첸(Peter Chen)이 제안한 개념적 데이터 모델 ­ 개체와 개체 간의 관계를 이용해 현실 세계를 개념적 구조로 표현 ­ 핵심 요소 : 개체, 속성, 관계
2) 개체­관계 다이어그램(E­R diagram) ­ E­R 다이어그램 ­ 개체
-관계 모델을 이용해 현실 세계를 개념적으로 모델링 한 결과물을 그림으로 표현한 것 ▶ 개체(entity) v 개체(entity)란 현실 세계에서 조직을 운영하는데 꼭 필요한 사람이나 사물과 같이 구별되 는 모든 것 ­ 저장할 가치가 있는 중요 데이터를 가지고 있는 사람이나 사물, 개념, 사건 등 ­ 다른  개체와  구별되는  이름을  가지고  있고,  각  개체만의 고유한  특성이나 상태,  즉  속성을  하나 이상 가지고 있음 예) 서점에 필요한 개체 : 고객, 책     학교에 필요한 개체 : 학과, 과목   ­ 파일 구조의 레코드(record)와 대응됨 ­ E
-R 다이어그램에서 사각형으로 표현하고 사각형 안에 이름을 표기 « 개체의 E ­R 다이어그램 표현 예 : 고객 개체 고객 ▶ 속성(attribute) ­ 개체나 관계가 가지고 있는 고유의 특성 ­ 의미 있는 데이터의 가장 작은 논리적 단위 ­ 파일 구조의 필드(field)와 대응됨 ­ E
-R 다이어그램에서 타원으로 표현하고 타원 안에 이름을 표기 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 28 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 속성의 E ­ R 다이어그램 표현 예 고객 고객아이디 고객아이디 고객명 (a) 고객아이디 속성 (b) 고객 개체의 속성 ▶ 개체의 구성요소

1) 개체 타입(entity type) ­ 개체를 고유의 이름과 속성들로 정의한 것 ­ 파일 구조의 레코드 타입(record type)에 대응됨
2) 개체 인스턴스(entity instance) ­ 개체를 구성하고 있는 속성이 실제 값을 가짐으로써 실체화된 개체 ­ 개체 어커런스(entity occurrence)라고도 함 ­ 파일 구조의 레코드 인스턴스(record instance)에 대응됨
3) 개체 집합(entity set) ­ 특정 개체 타입에 대한 개체 인스턴스들을 모아놓은 것 « 개체 타입과 개체 인스턴스의 예 : 고객 개체 타입과 고객 개체 인스턴스 개체 이름 속성 개체 타입 개체 인스턴스 개체 집합 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 29 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 2. 개체 관계 모델의 구성요소 
- 속성 ▶ 속성의 분류 단일 값 속성 속성 값의 개수 다중 값 속성 단순 속성 속성 의미의 분해 가능성 복합 속성 유도 속성 ▶ 단일 값 속성과 다중 값 속성

1) 단일 값 속성(single ­ valued attribute) ­ 값을 하나만 가질 수 있는 속성 예) 고객 개체의 이름, 적립금 속성
2) 다중 값 속성(multi ­ valued attribute) ­ 값을 여러 개 가질 수 있는 속성 예) 고객 개체의 연락처 속성     책 개체의 저자 속성   ­ E ­ R 다이어그램에서 이중 타원으로 표현 « 다중 값 속성의 E ­ R 다이어그램 표현 예 : 연락처 속성 고객 고객아이디 고객명 연락처                                                                     ▶ 단순 속성과 복합 속성
1) 단순 속성(simple attribute) ­ 의미를 더는 분해할 수 없는 속성 예) 고객 개체의 적립금 속성     책 개체의 이름, ISBN, 가격 속성  
2) 복합 속성(composite attribute) ­ 의미를 분해할 수 있는 속성 예) 고객 개체의 주소 속성 → 도, 시, 동, 우편번호 등으로 의미를 세분화할 수 있음     고객 개체의 생년월일 속성 → 연, 월, 일로 의미를 세분화할 수 있음   학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 30 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 복합 속성의 E ­ R 다이어그램 표현 예 : 생년월일 속성 고객 년 고객아이디 고객명 생년월일 월 일 ▶ 유도 속성(derived attribute) ­ 기존의 다른 속성의 값에서 유도되어 결정되는 속성 ­ 값이 별도로 저장되지 않음 예) 책 개체의 가격과 할인율 속성으로 계산되는 판매가격 속성     고객 개체의 출생연도 속성으로 계산되는 나이 속성   ­ E ­ R 다이어그램에서 점선 타원으로 표현 « 유도 속성의 E ­ R 다이어그램 표현 예 : 판매가격 속성 책 가격 할인율 판매가격 ▶ 널 속성(null attribute) ­ 널 값이 허용되는 속성
1) 널(null) 값 ­ 아직 결정되지 않거나 모르는 값 또는 존재하지 않는 값 ­ 공백이나 0과는 의미가 다름 예) 등급 속성이 널 값 → 등급이 아직 결정되지 않았음을 의미 ▶ 키 속성(key attribute) ­ 각 개체 인스턴스를 식별하는데 사용되는 속성 ­ 모든 개체 인스턴스의 키 속성 값이 다름 ­ 둘 이상의 속성들로 구성되기도 함 예) 고객 개체의 고객아이디 속성 ­ E ­ R 다이어그램에서 밑줄로 표현 « 키 속성의 E ­ R 다이어그램 표현 예 : 고객아이디 속성 고객 고객아이디 고객명 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 31 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 개체 관계 모델(2) 3주차  수업목표   개체 관계 모델의 구성요소인 관계를 설명할 수 있다. 3교시  세부내용  1. 개체 관계 모델의 구성요소
-관계 1. 개체 관계 모델의 구성요소 
- 관계 ▶ 관계(relationship) v 관계(relationship)란 개체와 개체가 맺고 있는 의미 있는 연관성이며, 개체 집합들 사이의  대응 관계, 즉 매핑(mapping)을 의미 예) 고객 개체와 책 개체 간의 구매 관계 → “고객은 책을 구매한다.” ­ E 
- R 다이어그램에서 마름모로 표현 « 관계의 E ­ R 다이어그램 표현 예 : 구매 관계 고객 구매 책 구매일자 결제방식 ▶ 관계의 유형

1) 관계의 유형 : 관계에 참여하는 개체 타입의 수 기준 ­ 이항 관계 : 개체 타입 두 개가 맺는 관계 ­ 삼항 관계 : 개체 타입 세 개가 맺는 관계 ­ 순환 관계 : 개체 타입 하나가 자기 자신과 맺는 관계
2) 관계의 유형 : 매핑 카디널리티 기준 ­ 일대일(1 : 1) 관계 ­ 일대다(1 : n) 관계 ­ 다대다(n : m) 관계
3) 매핑 카디널리티(mapping cardinality) ­ 관계를 맺는 두 개체 집합에서, 각 개체 인스턴스가 연관성을 맺고 있는 상대 개체 집합의  인스턴스 개수 ▶ 일대일(1:1) 관계 ­ 개체 A의 각 개체 인스턴스가 개체 B의 개체 인스턴스 하나와 관계를 맺을 수 있고, 개체  B의 각 개체 인스턴스도 개체 A의 개체 인스턴스 하나와 관계를 맺을 수 있음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 32 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 일대일 관계의 예 : 남편과 아내 개체의 혼인 관계 남편 개체 아내 개체 박철호  박민영 장우성  구소영  정동건  김수애 주인성  김태희 김지섭  ▶ 일대다(1:n) 관계 ­ 개체 A의 각 개체 인스턴스가 개체 B의 개체 인스턴스 여러 개와 관계를 맺을 수 있지만,  개체 B의 각 개체 인스턴스는 개체 A의 개체 인스턴스 하나와 관계를 맺을 수 있음 « 일대다 관계의 예 : 부서와 사원 개체의 소속 관계 부서 개체 사원 개체 박철호  총무부 구소영 인사부  장우성 영업부 김태희 기획부 주인성 ▶ 다대다(n:m) 관계 ­ 개체 A의 각 개체 인스턴스가 개체 B의 개체 인스턴스 여러 개와 관계를 맺을 수 있고, 개 체 B의 각 개체 인스턴스도 개체 A의 개체 인스턴스 여러 개와 관계를 맺을 수 있음 « 다대다 관계의 예 : 고객과 책 개체의 구매 관계 고객 개체 책 개체 구소영 데이터베이스개론 박철호 정보통신개론 장우성 무소유 김태희 모모 주인성 로마인이야기 ▶ 관계의 참여 특성
1) 필수적 참여(전체 참여) ­ 모든 개체 인스턴스가 관계에 반드시 참여해야 하는 것을 의미 예) 고객 개체가 책 개체와의 구매 관계에 필수적으로 참여     → 모든 고객은 책을 반드시 구매해야 함 ­ E 
- R 다이어그램에서 이중선으로 표현 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 33 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

2) 선택적 참여(부분 참여) ­ 개체 인스턴스 중 일부만 관계에 참여해도 되는 것을 의미 예) 책 개체가 고객 개체와의 구매 관계에 선택적으로 참여      → 고객이 구매하지 않은 책이 존재할 수 있음 « 필수적 참여 관계의 E ­ R 다이어그램 표현 예 : 고객 개체의 필수적 참여 관계    고객 구매 책 ▶ 관계의 종속성
Ÿ 약한 개체(weak entity) ­ 다른 개체의 존재 여부에 의존적인 개체
Ÿ 오너 개체(owner entity) ­ 다른 개체의 존재 여부를 결정하는 개체 ­ 오너  개체와 약한  개체는 일반적으로  일대다의 관계를 가지고, 약한 개체는 오너 개체와의  관계에 필수적으로 참여하는 특징이 있음 ­ 약한 개체는 오너 개체의 키를 포함하여 키를 구성하는 특징이 있음 ­ E
-R 다이어그램에서 약한 개체는 이중 사각형으로 표현하고 약한 개체가 오너 개체와 맺는  관계는 이중 마름모로 표현 예) 직원 개체와 부양가족 개체 사이의 부양 관계      → 직원 개체는 오너 개체, 부양가족 개체는 약한 개체 « 관계 종속성의 E ­ R 다이어그램 표현 예 : 약한 개체인 부양가족 개체 직원 부양 부양가족 ▶ 개체 ­ 관계 다이어그램
Ÿ 사각형 ­ 개체를 표현
Ÿ 마름모 ­ 관계를 표현
Ÿ 타원 ­ 속성을 표현
Ÿ 링크(연결선) ­ 각 요소를 연결
Ÿ 레이블 ­ 일대일, 일대다, 다대다 관계를 표기 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 34 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 개체 ­ 관계 다이어그램 예 : 고객, 책, 출판사 개체로 구성 ISBN 고객아이디 제목 ■ m 고객명 고객 구매 책 저자 ■ 적립금 가격 구매일자 결제방식 공급 출판사번호 1 이름 출판사 위치 전화번호 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 35 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 논리적 데이터 모델 4주차  수업목표   논리적 데이터 모델의 개념과 특성을 설명할 수 있다. 1교시  세부내용  1. 논리적 데이터 모델의 개념과 특성 1. 논리적 데이터 모델의 개념과 특성 ▶ 논리적 데이터 모델의 개념과 특성 v 논리적 데이터 모델   ­ E
-R  다이어그램으로  표현된  개념적  구조를  데이터베이스에  저장할  형태로  표현한  논리적  구조 ⋅ 데이터베이스의 논리적 구조 = 데이터베이스 스키마(schema) ­ 사용자가 생각하는 데이터베이스의 모습 또는 구조 v 관계 데이터 모델, 계층 데이터 모델, 네트워크 데이터 모델 등이 있음 ▶ 관계 데이터 모델 ­ 일반적으로 많이 사용되는 논리적 데이터 모델 ­ 데이터베이스의 논리적 구조가 2차원 테이블 형태임 « 릴레이션의 예 : 고객 릴레이션 열(속성, 애트리뷰트) 도메인 행 (튜플) ▶ 계층 데이터 모델(hierarchical data model) ­ 데이터베이스의 논리적 구조가 트리(tree) 형태 ­ 루트 역할을 하는 개체가 존재하고 사이클이 존재하지 않음 ­ 개체 간에 상하 관계가 성립 ⋅ 부모 개체 / 자식 개체 ⋅ 부모와 자식 개체는 일대다(1:n) 관계만 허용됨 ­ 두 개체 사이에 하나의 관계만 정의할 수 있음 ­ 다대다(n:m) 관계를 직접 표현할 수 없음 ­ 개념적 구조를 모델링하기 어려워 구조가 복잡해질 수 있음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 36 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 계층 데이터 모델의 예 출판사 부서 책 직원 고객 상품 고객 구입도서 주문고객 판매상품

1) 계층형 데이터 모델의 장단점
Ÿ 장점 ­ 구조가 간단하고, 판독이 용이 ­ 구현, 수정, 검색이, 용이 ­ 데이터의 독립성이 보장 ­ 망 데이터 모델이나 관계 데이터 모델도 실제 구현 할 때는 계층적인 기억 구조를 이용
Ÿ 단점 ­ 데이터 상호 간의 유연성이 부족 ­ 검색 경로가 한정 ­ 삽입과 삭제 연산이 매우 복잡 ­ 다 대 다 관계를 처리하기가 어려움 ▶ 네트워크 데이터 모델(network data model) ­ 데이터베이스의 논리적 구조가 네트워크, 즉 그래프 형태 ­ 개체 간에는 일대다(1:n) 관계만 허용됨 ⋅ 오너(owner) / 멤버(member)  ­ 두 개체 사이에 여러 관계를 정의할 수 있어 이름으로 구별함 ­ 다대다(n:m) 관계를 직접 표현할 수 없음 ­ 구조가 복잡하고 데이터의 삽입 · 삭제 · 수정 · 검색이 쉽지 않음 « 네트워크 데이터 모델의 예 출판사 고객 주문 판매 담당 상품 부서 도메인 고객 책 구매 관리 소속 직원 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 37 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 관계데이터 모델의 개념 1. 관계데이터 모델의 개념과 기본 용어를 설명할 수 있다.  4주차  수업목표   2. 릴레이션의 구성과 특성을 설명할 수 있다. 2교시  1. 관계데이터 모델의 개념과 기본 용어 세부내용  2. 릴레이션 1. 관계 데이터 모델의 개념과 기본 용어 ▶ 관계 데이터 모델의 기본 개념 ­ 개념적 구조를 논리적 구조로 표현하는 논리적 데이터 모델 ­ 하나의 개체에 대한 데이터를 하나의 릴레이션(테이블 형태)에 저장 « 릴레이션의 예 : 고객 릴레이션 열(속성, 애트리뷰트) 도메인 행 (튜플) ▶ 관계 데이터 모델의 기본 용어

1) 릴레이션(relation) ­ 하나의 개체에 관한 데이터를 2차원 테이블의 구조로 저장한 것 ­ 파일 관리 시스템 관점에서 파일(file)에 대응
2) 속성(attribute) ­ 릴레이션의 열, 애트리뷰트 ­ 파일 관리 시스템 관점에서 필드(field)에 대응
3) 투플(tuple) ­ 릴레이션의 행 ­ 파일 관리 시스템 관점에서 레코드(record)에 대응
4) 도메인(domain) ­ 하나의 속성이 가질 수 있는 모든 값의 집합 ­ 속성 값을 입력 및 수정할 때 적합성의 판단 기준이 됨  ­ 일반적으로 속성의 특성을 고려한 데이터 타입으로 정의
5) 널(null) ­ 속성 값을 아직 모르거나 해당되는 값이 없음을 표현
6) 차수(degree) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 38 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 하나의 릴레이션에서 속성의 전체 개수
7) 카디널리티(cardicality) ­ 하나의 릴레이션에서 투플의 전체 개수 « 릴레이션의 예 : 고객 릴레이션 열(속성, 애트리뷰트) 도메인 행 (튜플) ­ 고객 릴레이션의 차수는 6, 카디널리티는 4 2. 릴레이션 ▶ 릴레이션의 구성
1) 릴레이션 스키마(relation schema) ­ 릴레이션의 논리적 구조 ­ 릴레이션의 이름과 릴레이션에 포함된 모든 속성 이름으로 정의 예) 고객(고객아이디, 고객이름, 나이, 등급, 직업, 적립금) ­ 릴레이션 내포(relation intension)라고도 함 ­ 정적인 특징이 있음
2) 릴레이션 인스턴스(relation instance) ­ 어느 한 시점에 릴레이션에 존재하는 투플들의 집합 ­ 릴레이션 외연(relation extension)이라고도 함 ­ 동적인 특징이 있음 « 릴레이션 구성의 예 : 고객 릴레이션 릴레이션 스키마 릴레이션 인스턴스 ▶ 데이터베이스의 구성
1) 데이터베이스 스키마(database schema) ­ 데이터베이스의 전체 구조 ­ 데이터베이스를 구성하는 릴레이션 스키마의 모음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 39 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
2) 데이터베이스 인스턴스(database instance) ­ 데이터베이스를 구성하는 릴레이션 인스턴스의 모음 « 데이터베이스 구성의 예 : 쇼핑몰 데이터베이스 고객 릴레이션 상품 릴레이션 주문 릴레이션 릴레이션 스키마 릴레이션 스키마 릴레이션 스키마 데이터베이스 스키마  릴레이션 인스턴스 릴레이션 인스턴스 릴레이션 인스턴스 데이터베이스 인스턴스  ▶ 릴레이션의 특성
Ÿ 투플의 유일성 ­ 하나의 릴레이션에는 동일한 투플이 존재할 수 없다.
Ÿ 투플의 무순서 ­ 하나의 릴레이션에서 투플 사이의 순서는 무의미하다.
Ÿ 속성의 무순서 ­ 하나의 릴레이션에서 속성 사이의 순서는 무의미하다.
Ÿ 속성의 원자성 ­ 속성 값으로 원자 값만 사용할 수 있다. « 다중 값 속성을 포함하는 릴레이션의 예 : 고객 릴레이션 학생 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 40 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 관계데이터 모델의 키와 제약조건 4주차  수업목표   관계데이터 모델의 키와 제약조건을 설명할 수 있다. 3교시  1. 관계 데이터 모델의 키 세부내용  2. 관계데이터 모델의 제약조건 1. 관계 데이터 모델의 키 ▶ 키(key) v 키(key)란 릴레이션에서 투플들을 유일하게 구별하는 속성 또는 속성들의 집합 « 키의 종류 primary key 기본키 candidate key 후보키 대체키 alternate key 키 super key 수퍼키 외래키 foreign key ▶ 키의 특성

1) 유일성(uniqueness) ­ 하나의 릴레이션에서 모든 투플은 서로 다른 키 값을 가져야 함
2) 최소성(minimality) ­ 꼭 필요한 최소한의 속성들로만 키를 구성 ▶ 키의 종류
1) 슈퍼키(super key) ­ 유일성을 만족하는 속성 또는 속성들의 집합 예) 고객 릴레이션의 슈퍼키 : 고객아이디, (고객아이디, 고객이름), (고객이름, 주소) 등
2) 후보키(candidate key) ­ 유일성과 최소성을 만족하는 속성 또는 속성들의 집합 예) 고객 릴레이션의 후보키 : 고객아이디, (고객이름, 주소) 등
3) 기본키(primary key) ­ 후보키 중에서 기본적으로 사용하기 위해 선택한 키 예) 고객 릴레이션의 기본키 : 고객아이디
4) 대체키(alternate key) ­ 기본키로 선택되지 못한 후보키 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 41 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 예) 고객 릴레이션의 대체키 : (고객이름, 주소) « 주소 속성이 추가된 릴레이션의 예 : 고객 릴레이션 기본키 « 키의 관계 슈퍼키(유일성) 후보키(최소성) 기본키 대체키
5) 외래키(foreign key) ­ 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합 ­ 릴레이션들 간의 관계를 표현 ⋅ 참조하는 릴레이션 : 외래키를 가진 릴레이션 ⋅ 참조되는 릴레이션 : 외래키가 참조하는 기본키를 가진 릴레이션 « 고객 릴레이션과 주문 릴레이션의 스키마 고객 릴레이션 주문 릴레이션 « 외래키의 예 : 고객 릴레이션과 주문 릴레이션  고객 릴레이션 고객 릴레이션의 기본키 주문 릴레이션 주문 릴레이션의 기본키 주문 릴레이션의  외래키  속성과  그것이  참조하는  기본키  속성의  외래키 이름은 달라도 되지만 도메인은 같아야 한다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 42 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 학생 상담 데이터베이스 스키마 학생 릴레이션 상담 릴레이션 교사 릴레이션 하나의  릴레이션에는  외래키가  여러  개  존재할  수도  있고  외래키를 기본키로 사용할 수도 있다. « 기본키와 외래키의 관계가 함께 정의된 고객 릴레이션 고객  릴레이션의 기본키 고객  릴레이션의 같은 릴레이션의 기본키를 참조하는 외래키도  외래키 정의할 수 있다. 그리고 외래키 속성은 널 값을 가질 수도 있다. ▶ 키의 특성과 종류
1) 정리 ⋅ 유일성 : 한 릴레이션에서 모든 투플은 서로 다른 키 값을 가져야 함 특성 ⋅ 최소성 : 꼭 필요한 최소한의 속성들로만 키를 구성 ⋅ 수퍼키 : 유일성을 만족하는 속성 또는 속성들의 집합 ⋅ 후보키 : 유일성과 최소성을 만족하는 속성 또는 속성들의 집합 종류 ⋅ 기본키 : 후보키 중에서 기본적으로 사용하기 위해 선택한 키 ⋅ 대체키 : 기본키로 선택되지 못한 후보키 ⋅ 외래키 : 다른 릴레이션의 기본키를 참조하는 속성 또는 속성들의 집합 2. 관계 데이터 모델의 제약조건 ▶ 개체 무결성 제약조건(entity integrity constraint) ­ 기본키를 구성하는 모든 속성은 널 값을 가질 수 없는 규칙 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 43 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 개체 무결성 제약조건을 위반한 릴레이션의 예 : 고객 릴레이션 ▶ 참조 무결성 제약조건(referential integrity constraint) ­ 외래키는 참조할 수 없는 값을 가질 수 없는 규칙 « 참조 무결성 제약조건을 위반한 릴레이션의 예 : 주문 릴레이션 고객 릴레이션 고객  릴레이션의 기본키 주문 릴레이션 주문  릴레이션의 기본키 주문 릴레이션의 외래키 « 외래키가 널 값인 릴레이션의 예 : 주문 릴레이션 고객 릴레이션 고객  릴레이션의 기본키 주문 릴레이션 주문  릴레이션의 기본키 주문 릴레이션의 외래키  외래키  속성이  널  값을  가진다고  해서  참조  무결성 제약조건을 위반한 것은 아니다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 44 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 관계 데이터 연산의 개념과 관계대수 관계 데이터 연산의 개념과 관계대수 중의 일반 집합 연산자를  5주차  수업목표   설명할 수 있다. 1교시  1. 관계 데이터 연산의 개념 세부내용  2. 일반 집합 연산자 1. 관계 데이터 연산의 개념 ▶ 데이터 모델 = 데이터 구조 + 연산 + 제약조건 « 데이터 모델의 구성 연산 (operation) 데이터 모델 데이터구조 제약조건 (data structure) (constraint) ▶ 관계 데이터 연산(relational data operation) ­ 관계 데이터 모델의 연산 ­ 원하는 데이터를 얻기 위해 릴레이션에 필요한 처리 요구를 수행하는 것 ­ 관계 대수와 관계 해석이 있음  ⋅ 기능과 표현력 측면에서 능력이 동등함 « 관계 데이터 연산의 종류 관계 대수 원하는 결과를 얻기 위해 데이터의 처리 과정을 순서대로 기술 관계 데이터 연산 관계 해석 원하는 결과를 얻기 위해 데이터가 무엇인지만 기술 ▶ 관계 대수와 관계 해석의 역할 ­ 데이터 언어의 유용성을 검증하는 기준 ­ 관계 대수나 관계 해석으로 기술할 수 있는 모든 질의를 기술할 수 있는 데이터 언어를 관 계적으로 완전(relationally complete)하다고 판단함 ⋅ 질의(query) : 데이터에 대한 처리 요구 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 45 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 관계 대수(relational algebra)의 개념 ­ 원하는 결과를 얻기 위해 릴레이션의 처리 과정을 순서대로 기술하는 언어 ⇨ 절차 언어(procedural language) ­ 릴레이션을 처리하는 연산자들의 모임 ⋅ 대표 연산자 8개 ⋅ 일반 집합 연산자와 순수 관계 연산자로 분류됨 ­ 폐쇄 특성(closure property)이 존재함 ⋅ 피연산자도 릴레이션이고 연산의 결과도 릴레이션임 « 데이터 모델의 구성 합집합 ∪ 교집합 ∩ 일반 집합 연산자 차집합 — 카티션 프로덕트 X 관계 대수 연산자 셀렉트  프로젝트  순수 관계 연산자 조인 ⋈ 디비전 ÷ 2. 일반 집합 연산자 ▶ 일반 집합 연산자(set operation) ­ 릴레이션이 투플의 집합이라는 개념을 이용하는 연산자 « 일반 집합 연산자의 종류 연산자 기호 표현 의미 합집합 ∪ R ∪ S 릴레이션 R과 S의 합집합을 반환 교집합 ∩ R ∩ S 릴레이션 R과 S의 교집합을 반환 차집합 — R — S 릴레이션 R과 S의 차집합을 반환 릴레이션 R의 각 투플과 릴레이션  카티션 프로덕트 X R X S S의 각 투플을 모두 연결하여 만들어진 새로운 투플을 반환 ▶ 일반 집합 연산자의 기능 합집합 교집합 차집합 카티션 프로덕트 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 46 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 일반 집합 연산자의 특성 ­ 피연산자가 두 개 필요함 ⋅ 두 개의 릴레이션을 대상으로 연산을 수행 ­ 합집합, 교집합, 차집합은 피연산자인 두 릴레이션이 합병이 가능해야 함
Ÿ 합병 가능(union
-compatible) 조건 ­ 두 릴레이션의 차수가 같아야 함 ­ 두 릴레이션에서 서로 대응되는 속성의 도메인이 같아야 함 « 합병이 불가능한 예 고객 릴레이션 직원 릴레이션 ­ « 합병이 가능한 예 고객 릴레이션 직원 릴레이션 ▶ 일반 집합 연산자 ­ 합집합(union) ­ 합병 가능한 두 릴레이션 R과 S의 합집합 : R ∪ S ⋅ 릴레이션 R에 속하거나 릴레이션 S에 속하는 모든 투플로 결과 릴레이션 구성
Ÿ 결과 릴레이션의 특성 ­ 차수는 릴레이션 R과 S의 차수와 같음 ­ 카디널리티는 릴레이션 R과 S의 카디널리티를 더한 것과 같거나 적어짐 ­ 교환적 특징이 있음 ⋅ R ∪ S = S ∪ R  ­ 결합적 특징이 있음 ⋅ ( R ∪ S ) ∪ T = R ∪ ( S ∪ T ) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 47 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 합집합 연산의 예 R S 합집합 연산 R ∪ S ▶ 일반 집합 연산자 ­ 교집합(intersection) ­ 합병 가능한 두 릴레이션 R과 S의 교집합 : R ∩ S ⋅ 릴레이션 R과 릴레이션 S에 속하는 모든 투플로 결과 릴레이션 구성
Ÿ 결과 릴레이션의 특성 ­ 차수는 릴레이션 R과 S의 차수와 같음 ­ 카디널리티는 릴레이션 R과 S의 어떤 카디널리티보다 크지 않음 ­ 교환적 특징이 있음 ⋅ R ∩ S = S ∩ R  ­ 결합적 특징이 있음 ⋅ ( R ∩ S ) ∩ T = R ∩ ( S ∩ T ) « 교집합 연산의 예 R S 교집합 연산 R ∩ S ▶ 일반 집합 연산자 ­ 차집합(difference) ­ 합병 가능한 두 릴레이션 R과 S의 차집합 : R ­ S ⋅ 릴레이션 R에는 존재하고 릴레이션 S에는 존재하지 않는 투플로 결과 릴레이션 구성 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 48 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ 결과 릴레이션의 특성 ­ 차수는 릴레이션 R과 S의 차수와 같음 ­ R­S의 카디널리티는 릴레이션 R의 카디널리티와 같거나 적음 ­ S­R의 카디널리티는 릴레이션 S의 카디널리티와 같거나 적음 ­ 교환적, 결합적 특징이 없음 « 차집합 연산의 예 R S 차집합 연산 R ­ S S ­ R ▶ 일반 집합 연산자 ­ 카티션 프로덕트(cartesian product) ­ 두 릴레이션 R과 S의 카티션 프로덕트 : R X S ⋅ 릴레이션  R에  속한  각  투플과  릴레이션  S에  속한  각  투플을  모두  연결하여  만들어진  새로운 투플로 결과 릴레이션을 구성
Ÿ 결과 릴레이션의 특성 ­ 차수는 릴레이션 R과 S의 차수를 더한 것과 같음 ­ 카디널리티는 릴레이션 R과 S의 카디널리티를 곱한 것과 같음 ­ 교환적 특징이 있음 ⋅ R X S = S X R  ­ 결합적 특징이 있음 ⋅ ( R X S ) X T = R X ( S X T ) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 49 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 카티션 프로덕트 연산의 예 R S 카티션 프로덕트 연산 R X S 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 50 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 관계대수(1) 5주차  수업목표   관계대수의 순수 관계 연산자를 설명할 수 있다. 2교시  세부내용  1. 순수 관계 연산자 1. 순수 관계 연산자 ▶ 순수 관계 연산자(relational operation) ­ 릴레이션의 구조와 특성을 이용하는 연산자 « 순수 관계 연산자의 종류 연산자 기호 표현 의미 릴레이션 R에서 조건을 만족하는 셀렉트   R 투플들을 반환 릴레이션 R에서 주어진 속성들이 프로젝트    R 값으로만 구성된 투플들을 반환 공통 속성을 이용해 릴레이션  조인 ⋈ R ⋈ S R과 S의 투플들을 연결하여  만들어진 투플들을 반환 릴레이션 S의 모든 투플과 관련이 디비전 ÷ R ÷ S 있는 릴레이션 R의 투플들을 반환 « 순수 관계 연산자의 기능 셀렉트 프로젝트 디비전 조인 ▶ 순수 관계 연산자 ­ 셀렉트(select) ­ 릴레이션에서 조건을 만족하는 투플만 선택하여 결과 릴레이션을 구성 ­ 하나의 릴레이션을 대상으로 연산을 수행 ­ 수학적 표현법 :  (릴레이션) 조건식 ­ 데이터 언어적 표현법 : 릴레이션 where 조건식
Ÿ 조건식 ­ 비교식, 프레디킷(predicate)이라고도 함 ­ 속성과 상수의 비교나 속성들 간의 비교로 표현 ­ 비교 연산자(>, ≥, <, ≤, =, ≠)와 논리 연산자(∧, ∨, ¬)를 이용해 작성 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 51 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 셀렉트 연산을 적용할 릴레이션 예 : 고객 릴레이션 ◼ 예제 6
-1 ­ 고객 릴레이션에서 등급이 gold인 투플을 검색하시오.  (고객) 또는 고객 where 등급=‘gold’ 등급′gold′ 결과 릴레이션 ◼ 예제 6
-2 ­ 고객 릴레이션에서 등급이 gold이고, 적립금이 2000이상인 투플을 검색하시오.  (고객) 또는 고객 where 등급=‘gold’ and 적립금 ≥2000 등급′gold′∧적립금≥ 결과 릴레이션 « 셀렉트 연산의 수행 과정 : 고객 릴레이션 등급=‘gold’ 셀렉트 연산 결과  릴레이션은  연산  대상  릴레이션의  수평적 부분 집합 ­ 교환적 특징이 있음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 52 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 순수 관계 연산자 ­ 프로젝트(project) ­ 릴레이션에서 선택한 속성의 값으로 결과 릴레이션을 구성 ­ 하나의 릴레이션을 대상으로 연산을 수행 ­ 수학적 표현법 :  (릴레이션) 속성리스트 ­ 데이터 언어적 표현법 : 릴레이션[속성리스트] « 프로젝트 연산을 적용할 릴레이션 예 : 고객 릴레이션 ◼ 예제 6
-3 ­ 고객 릴레이션에서 고객이름, 등급, 적립금을 검색하시오.  (고객) 또는 고객[고객이름, 등급, 적립금] 고객이름등급적립금 결과 릴레이션 ◼ 예제 6
-4 ­ 고객 릴레이션에서 등급을 검색하시오.  (고객) 또는 고객[등급] 등급 결과 릴레이션 « 프로젝트 연산의 수행 과정 예 : 고객 릴레이션  (고객)  고객이름등급적립금 프로젝트 연산 결과 릴레이션은  연산 대상 릴레이션의  수직적 부분 집합 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 53 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 순수 관계 연산자 ­ 조인(join) ­ 조인 속성을 이용해 두 릴레이션을 조합하여 결과 릴레이션을 구성 ⋅ 조인 속성의 값이 같은 투플만 연결하여 생성된 투플을 결과 릴레이션에 포함 ⋅ 조인 속성 : 두 릴레이션이 공통으로 가지고 있는 속성 ­ 표현법 : 릴레이션1⋈릴레이션2 ­ 자연 조인(natural join)이라고도 함 → 표현법 : 릴레이션1⋈N 릴레이션2 « 조인 연산을 적용할 릴레이션 예들의 관계 고객 릴레이션 조인 속성 : 고객 릴레이션의 고객아이디, 주문 릴레이션 주문 릴레이션의  주문고객 주문 릴레이션의 외래키 « 조인 연산의 수행 과정 예 : 고객과 주문 릴레이션 고객 릴레이션 주문 릴레이션 조인 연산 고객⋈주문 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 54 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 두 개의 속성으로 이루어진 조인 속성을 이용하는 조인 연산의 예 : R과 S릴레이션 조인 속성 R S 조인 연산 R⋈S ▶ 세타 조인(theta join, 
-join) ­ 자연 조인에 비해 더 일반화된 조인 ­ 주어진  조인  조건을  만족하는  두  릴레이션의  모든  투플을  연결하여  생성된  새로운  투플로  결과 릴레이션을 구성 ­ 결과 릴레이션의 차수는 두 릴레이션의 차수를 더한 것과 같음 ­ 표현법 : 릴레이션1⋈AB릴레이션2 ⋅ 는 비교 연산자(>, ≥, <, ≤, =, ≠)를 의미 ▶ 동일 조인(equi
-join) ­  연산자가 “=”인 세타 조인을 의미 « 동일 조인 연산의 예 : 고객과 주문 릴레이션 고객 릴레이션 주문 릴레이션 동일 조인 연산 고객⋈ 주문  고객아이디주문고객 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 55 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 관계대수(2) 1. 관계대수의 순수 관계 연산자를 설명할 수 있다.  5주차  수업목표   2. 관계 해석에 대해 설명할 수 있다. 3교시  1. 순수 관계 연산자 세부내용  2. 관계 해석  1. 순수 관계 연산자 ▶ 순수 관계 연산자 ­ 디비전(division) ­ 표현법 : 릴레이션1 ÷ 릴레이션2 ­ 릴레이션2의 모든 투플과 관련이 있는 릴레이션1의 투플로 결과 릴레이션을 구성 ⋅ 단, 릴레이션1이 릴레이션2의 모든 속성을 포함하고 있어야 연산이 가능함 « 디비전 연산의 예1 : 고객과 우수등급 릴레이션 고객 릴레이션 우수등급 릴레이션 디비전 연산 고객 ÷ 우수등급 « 디비전 연산의 예2 : 주문내역, 제품1, 제품2 릴레이션 주문내역 릴레이션 제품1 릴레이션 제품2 릴레이션 디비전 연산 주문내역 ÷ 제품1 주문내역 ÷ 제품2 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 56 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 관계 대수를 이용한 질의 표현 예 « 질의 표현에 사용할 예제 릴레이션들 고객 릴레이션 주문 릴레이션 주문 릴레이션의 외래키 ◼ 예제 6
-5 ­ 등급이 gold인 고객의 이름과 나이를 검색하시오.   ( (고객)) 고객이름나이 등급′gold′ 결과 릴레이션 ◼ 예제 6
-6 ­ 고객이름이  원유선인  고객의  등급과  원유선  고객이  주문한  주문제품,  수량을  검색하시 오.   ( (고객⋈주문)) 등급주문제품수량 고객이름′원유선′ 결과 릴레이션 ◼ 예제 6
-7 ­ 주문수량이 10개 미만인 주문 내역을 삭제하시오.  주문
-( (주문)) 주문수량 결과 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 57 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 확장된 관계 대수 연산자 ­ 세미 조인(semi
-join) ­ 조인 속성으로 프로젝트 연산을 수행한 릴레이션을 이용하는 조인 ­ 표현법 : 릴레이션1 ⋉ 릴레이션2 ­ 릴레이션2를 조인 속성으로 프로젝트 연산한 후 릴레이션1에 자연 조인하여 결과 릴레이션 을 구성 ­ 불필요한 속성을 미리 제거하여 조인 연산 비용을 줄이는 장점이 있음 ­ 교환적 특징이 없음 ⋅ R ⋉ S ≠ S ⋉ R ▶ 확장된 관계 대수 연산자 ­ 외부 조인(outer
-join) ­ 자연 조인 연산에서 제외되는 모든 투플을 결과 릴레이션에 포함시키는 조인 ­ 표현법  :  릴레이션1    릴레이션2 « 세미 조인과 외부 조인 연산을 적용할 릴레이션 예 고객 릴레이션 주문 릴레이션 조인 속성 « 고객과 주문 릴레이션의 자연 조인 연산 고객 릴레이션 주문 릴레이션 자연 조인 연산 고객⋈주문 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 58 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 확장된 관계 대수 연산자 ­ 세미 조인 « 고객과 주문 릴레이션의 세미 조인 연산  고객 릴레이션 주문 릴레이션 주문고객(주문) 자연 조인 연산 고객⋉주문 ▶ 확장된 관계 대수 연산자 ­ 외부 조인 « 고객과 주문 릴레이션의 외부 조인 연산 고객 릴레이션 주문 릴레이션 외부 조인 연산 고객 주문 2. 관계 해석 ▶ 관계 해석(relational calculus) ­ 처리를 원하는 데이터가 무엇인지만 기술하는 언어 ⇨ 비절차 언어(nonprocedural language) ­ 수학의 프레디킷 해석(predicate calculus)에 기반을 두고 있음
Ÿ 분류 ­ 투플 관계 해석(tuple relational calculus) ­ 도메인 관계 해석(domain relational calculus) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 59 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 정의(1) 1. SQL의 개념을 설명할 수 있다.  6주차  수업목표   2. SQL을 이용하여 테이블을 생성할 수 있다. 1교시  1. SQL의 개념 세부내용  2. 테이블 생성 1. SQL의 개념 ▶ SQL(Structured Query Langauge)

1) 의미 ­ 관계 데이터베이스를 위한 표준 질의어 ­ 비절차적 데이터 언어
2) 발전 역사 ­ SEQUEL(Structured English QUEry Language)에서 유래 ⋅ SEQUEL : 연구용 관계 데이터베이스 관리 시스템인 SYSTEM R을 위한 언어 ­ 미국 표준 연구소인 ANSI와 국제 표준화 기구인 ISO에서 표준화 작업을 진행 ⋅ 1999년 SQL ­ 99(SQL3)까지 표준화 작업이 완료된 후 계속 수정 및 보완되고 있음
3) 사용 방식
Ÿ 대화식 SQL ­ 직접 데이터베이스 관리 시스템에 접근해 질의를 작성하여 실행
Ÿ 삽입 SQL ­ 프로그래밍 언어로 작성된 응용 프로그램에 삽입 « SQL의 분류 Data Manipulation Language 데이터 조작어 (DML) SQL의 분류 데이터 정의어 데이터 제어어 (DDL) (DCL) Data Definition Language Data Control Language 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 60 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ SQL의 분류

1) 데이터 정의어(DDL) ­ 테이블을 생성하고 변경 · 제거하는 기능을 제공
2) 데이터 조작어(DML) ­ 테이블에 새 데이터를 삽입하거나, 테이블에 저장된 데이터를 수정 · 삭제 · 검색하는 기능 을 제공
3) 데이터 제어어(DCL) ­ 보안을  위해  데이터에  대한  접근  및  사용  권한을  사용자별로  부여하거나  취소하는  기능을  제공 ▶ 질의에 사용할 판매 데이터베이스 : 고객 릴레이션 « 고객 릴레이션 ▶ 질의에 사용할 판매 데이터베이스 : 제품 릴레이션 « 제품 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 61 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 질의에 사용할 판매 데이터베이스 : 주문 릴레이션 « 주문 릴레이션 2. 테이블 생성 ▶ SQL의 데이터 정의 기능 ­ 테이블을 생성, 변경, 제거 « SQL의 데이터 정의 기능 테이블 생성 CREATE TABLE 테이블 변경 ALTER TABLE 테이블 제거 DROP TABLE ▶ 테이블 생성 : CREATE TABLE 문 CREATE TABLE 테이블_이름 (
① 속성_이름  데이터_타입  [NOT NULL]  [DEex)AULT 기본_값]
② [PRIMARY KEY (속성_리스트)]
③ [UNIQUE (속성_리스트)]
④ [ex)OREIGN KEY (속성_리스트)  REex)ERENCES  테이블_이름(속성_리스트)]    [ON DELETE 옵션]  [ON UPDATE 옵션]
⑤ [CONSTRAINT 이름]  [CHECK(조건)] );   ­ [ ]의 내용은 생략이 가능 ­ SQL 질의문은 세미콜론(;)으로 문장의 끝을 표시 ­ SQL 질의문은 대소문자를 구분하지 않음 ­
① 테이블을 구성하는 각 속성의 이름, 데이터 타입, 기본 제약 사항 정의 ­
② 기본키 정의 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 62 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­
③ 대체키 정의 ­
④ 외래키 정의 ­
⑤ 데이터 무결성을 위한 제약조건 정의 

1) 속성의 정의  ­ 테이블을 구성하는 각 속성의 데이터 타입을 선택한 다음 널 값 허용 여부와 기본 값 필요  여부를 결정
Ÿ NOT NULL ­ 속성이 널 값을 허용하지 않음을 의미하는 키워드 문자열이나  날짜  데이터는  예) 고객아이디  VARCHAR(20)  NOT NULL 작은  따옴표로  묶어서  표현 
Ÿ DEex)AULT (작은 따옴표로 묶여진 문자 ­ 속성의 기본 값을 지정하는 키워드 열은 대소문자를 구분함) 예) 적립금  INT  DEex)AULT  0     담당자 VARCHAR(10)  DEex)AULT ‘방경아’   « 속성의 데이터 타입 데이터 타입 의미  INT 또는 INTEGER 정수 SAMLLINT INT보다 작은 정수 CHAR(n) 또는 CHARACTER(n) 길이 n이 고정 길이의 문자열 VARCHAR(n) 또는 최대 길이가 n인 가변 길이의 문자열 CHARACTER VARYING(n) NUMERIC(p, s) 또는 고정 소수점 실수 / p는 소수점을 제외한 전체  DECIMAL(p, s) 숫자의 길이고, s는 소수점 이하 숫자의 길이 ex)LOAT(n) 길이가 n인 부동 소수점 실수 REAL 부동 소수점 실수 DATETIME 또는 DATE 년, 월, 일로 표현되는 날짜 TIME 시, 분, 초로 표현되는 시간

2) 키의 정의
Ÿ PRIMARY KEY ­ 기본키를 지정하는 키워드 예) PRIMARY KEY(고객아이디)     PRIMARY KEY(주문고객, 주문제품)  
Ÿ UNIQUE ­ 대체키를 지정하는 키워드 ­ 대체키로 지정되는 속성의 값은 유일성을 가지며 기본키와 달리 널 값이 허용됨 예) UNIQUE(고객이름)
Ÿ ex)OREIGN KEY ­ 외래키를 지정하는 키워드 ­ 외래키가 어떤 테이블의 무슨 속성을 참조하는지 REex)ERENCES 키워드 다음에 제시 ­ 참조 무결성 제약조건 유지를 위해 참조되는 테이블에서 투플 삭제 시 처리 방법을 지정 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 63 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 하는 옵션 ⋅ ON DELETE NO ACTION : 투플을 삭제하지 못하게 함 ⋅ ON DELETE CASCADE : 관련 투플을 함께 삭제함 ⋅ ON DELETE SET NULL : 관련 투플의 외래키 값을 NULL로 변경함 ⋅ ON  DELETE  SET  DEex)AULT  :  관련  투플의  외래키  값을  미리  지정한  기본  값으로  변경함 ­ 참조 무결성 제약조건 유지를 위해 참조되는 테이블에서 투플 변경 시 처리 방법을 지정 하는 옵션  ⋅ ON UPDATE NO ACTION : 투플을 변경하지 못하게 함 ⋅ ON UPDATE CASCADE : 관련 투플에서 외래키 값을 함께 변경함 ⋅ ON UPDATE SET NULL : 관련 투플의 외래키 값을 NULL로 변경함 ⋅ ON  UPDATE  SET  DEex)AULT  :  관련  투플의  외래키  값을  미리  지정한  기본  값으로  변경함 ⋅ 예) ex)OREIGN KEY(소속부서) REex)ERENCES 부서(부서번호) ⋅ 예) ex)OREIGN KEY(소속부서) REex)ERENCES 부서(부서번호) ON DELETE CASCADE ON UPDATE CASCADE

3) 참조 무결성 제약조건 유지를 위한 투플 삭제 예
Ÿ 외래키를 통해 관계를 맺고 있는 두 개의 테이블 부서 테이블 사원 테이블 외래키 ⋅ ON DELETE NO ACTION : 부서 테이블의 투플을 삭제하지 못하게 함 ⋅ ON  DELETE  CASCADE  :  사원  테이블에서  홍보부에  근무하는  정소화  사원  투플도  함 께 삭제 ⋅ ON DELETE SET NULL : 사원 테이블에서 정소화 사원의 소속부서 속성 값을 NULL로  변경 ⋅ ON  DELETE  SET  DEex)AULT  :  사원  테이블에서  정소화  사원의  소속부서  속성  값을  기 본 값으로 변경

4) 데이터 무결성 제약조건의 정의 
Ÿ CHECK ­ 테이블에 정확하고 유효한 데이터를 유지하기 위해 특정 속성에 대한 제약조건을 지정 ­ CONSTRAINT 키워드와 함께 고유의 이름을 부여할 수도 있음 예) CHECK(재고량 >= 0 AND 재고량 <= 10000) CONSTRAINT CHK_CPY  CHECK(제조업체 = ‘한빛제과’) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 64 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 정의(2) 6주차  수업목표   SQL을 이용하여 테이블의 변경과 제거를 할 수 있다. 2교시  1. 테이블 변경 세부내용  2. 테이블 제거  1. 테이블 변경 ▶ 고객 테이블 생성을 위한 CREATE TABLE 문 작성 예 ◼ 예제 7
-1 ­ 고객 테이블은 고객아이디, 고객이름, 나이, 등급, 직업, 적립금 속성으로 구성되고, 고객 아이디  속성이  기본키다.  고객이름과  등급  속성은  값을  반드시  입력해야  하고,  적립금  속성은 값을 입력하지 않으면 0이 기본으로 입력되도록 고객 테이블을 생성해보자. CREATE TABLE 고객 ( 고객아이디 VARCHAR(20)   NOT NULL, 고객이름   VARCHAR(10)   NOT NULL, 나이       INT, 등급       VARCHAR(10)   NOT NULL, 직업       VARCHAR(20), 적립급     INT  DEex)AULT 0, PRIMARY KEY(고객아이디) ); ⇨ 기본키로  지정한  속성은  굳이  NOT  NULL을  표기하지  않아도  자동으로  NOT  NULL  특성 을  갖지만,  기본키로  사용할  속성은  널  값을  가질  수  없다는  제약조건을  더  명확히  표현 하기 위해 NOT NULL을 표기했다. ▶ 질의에 사용할 판매 데이터베이스 : 고객 릴레이션 « 고객 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 65 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 제품 테이블 생성을 위한 CREATE TABLE 문 작성 예 ◼ 예제 7
-2 ­ 제품  테이블은  제품번호,  제품명,  재고량,  단가,  제조업체  속성으로  구성되고,  제품번호  속성이 기본키다. 재고량이 항상 0개 이상 10,000개 이하를 유지하도록 제품 테이블을  생성해보자. CREATE TABLE 제품 ( 제품번호  CHAR(3)   NOT NULL, 제품명    VARCHAR(20), 재고량    INT, 단가      INT, 제조업체  VARCHAR(20), PRIMARY KEY(제품번호), CHECK (재고량 >= 0 AND 재고량 <= 10000) ): ▶ 질의에 사용할 판매 데이터 베이스 : 제품 릴레이션 « 제품 릴레이션 ▶ 주문 테이블 생성을 위한 CREATE TABLE 문 작성 예 ◼ 예제 7
-3 ­ 주문  테이블은  주문번호,  주문고객,  주문제품,  수량,  배송지,  주문일자  속성으로  구성되 고, 주문번호 속성이 기본키다. 주문고객 속성이 고객 테이블의 고객아이디 속성을 참조 하는  외래키이고,  주문제품  속성이  제품  테이블의  제품번호  속성을  참조하는  외래키가  되도록 주문 테이블을 생성해보자. CREATE TABLE 주문 ( 주문번호  CHAR(3)   NOT NULL, 주문고객  VARCHAR(20), 주문제품  CHAR(3), 수량      INT, 배송지    VARCHAR(30), 주문일자  DATETIME, 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 66 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr PRIMARY KEY(주문번호), ex)OREIGN KEY(주문고객)   REex)ERENCES 고객(고객아이디) ex)OREIGN KEY(주문제품)   REex)ERENCES 제품(제품번호) ): ⇨ 오라클에서는 주문일자 속성의 데이터 타입을 DATE로 저장한다. ▶ 질의에 사용할 판매 데이터 베이스 : 주문 릴레이션 « 주문 릴레이션 ▶ 테이블 변경 : ALTER TABLE 문

1) 새로운 속성 추가 ALTER TABLE 테이블_이름    ADD  속성_이름  데이터_타입  [NOT NULL]  [DEex)AULT 기본_값]; ◼ 예제 7
-4 ­ [예제 7
-1]에서 생성한 고객 테이블에 가입날짜 속성을 추가해보자. ALTER TABLE  고객  ADD  가입날짜  DATETIME;

2) 기존 속성 삭제 ALTER TABLE  테이블_이름  DROP  속성_이름  CASCADE╎RESTRICT;
Ÿ CASCADE ­ 삭제할 속성과 관련된 제약조건이나 참조하는 다른 속성을 함께 삭제 
Ÿ RESTRICT ­ 삭제할 속성과 관련된 제약조건이나 참조하는 다른 속성이 존재하면 삭제 거부 ◼ 예제 7
-5 ­ [예제 7
-1]에서 생성한 고객 테이블의 등급 속성을 삭제하면서 관련된 제약조건이나 등 급 속성을 참조하는 다른 속성도 함께 삭제해보자. ALTER TABLE  고객  DROP  등급  CASCADE;

3) 새로운 제약조건의 추가 ALTER TABLE  테이블_이름  ADD  CONSTRAINT  제약조건_이름  제약조건_내용; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 67 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-6 ­ 고객 테이블에 20세 이상의 고객만 가입할 수 있다는 데이터 무결성 제약조건을 추가해 보자. ALTER TABLE  고객  ADD  CONSTRAINT CHK_AGE  CHECK(나이>=20);

4) 기존 제약조건의 삭제 ALTER TABLE  테이블_이름  DROP  CONSTRAINT  제약조건_이름; ◼ 예제 7
-7 ­ [예제  7
-6]에서  추가한,  고객  테이블에  20세  이상의  고객만  가입할  수  있다는  데이터  무결성 제약조건을 삭제해보자. ALTER TABLE  고객  DROP  CONSTRAINT CHK_AGE; 2. 테이블 제거 ▶ 테이블 제거 : DROP TABLE 문 DROP TABLE  테이블_이름  CASCADE╎RESTRICT;
Ÿ CASCADE ­ 제거할 테이블을 참조하는 다른 테이블도 함께 제거
Ÿ RESTRICT ­ 제거할 테이블을 참조하는 다른 테이블이 존재하면 제거 거부 ◼ 예제 7
-8 ­ 고객  테이블을  삭제하되,  고객  테이블을  참조하는  다른  테이블이  존재하면  삭제가  수행 되지 않도록 해보자. DROP TABLE  고객  RESTRICT; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 68 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 정의(3) 6주차  수업목표   SQL을 이용하여 테이블의 생성, 변경, 제거를 실습한다. 3교시  세부내용  1. SQL을 이용한 데이터 정의의 실습 1. SQL을 이용한 데이터 정의의 실습 ▶ SQL을 이용한 데이터 정의의 실습 ­ 테이블을 구성하고, 속성과 속성에 관한 제약을 정의하며, 기본키 및 외래키를 정의하는 명 령 ­ PRIMARY KEY는 기본키를 정할 때 사용하고 ex)OREIGN KEY는 외래키를 지정할 때 사용 ­ ON UPDATE와 ON DELETE는 외래키 속성의 수정과 투플 삭제 시 동작을 나타냄 ­ CREATE 문의 기본 문법 CREATE TABLE 테이블이름 ({속성이름 데이터타입 [NOT NULL] [UNIQUE] [DEex)AULT 기본값] [CHECK 체크조건]  } [PRIMARY KEY 속성이름(들)] {[ex)OREIGN KEY 속성이름 REex)ERENCES 테이블이름(속성이름)] [ON UPDATE [NO ACTION┃CASCADE┃SET NULL┃SET DEex)AULT]] [ON DELETE [NO ACTION┃CASCADE┃SET NULL┃SET DEex)AULT]]  } ) ◼ 질의 3
-34 ­ 다음과 같은 속성을 가진 NewBook 테이블을 생성하시오, 정수형은 INT를 사용하며 문 자형은 가변형 문자타입인 VARCHAR을 사용한다. ⋅ bookid(도서번호) ­ INT ⋅ bookname(도서이름) 
- VARCHAR(20) ⋅ publisher(출판사) 
- VARCHAR(20) ⋅ price(가격) ­ INT CREATE TABLE NewBook (  bookid INT,  bookname  VARCHAR(20), 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 69 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr  publisher   VARCHAR(20),  price  INT); ­ 기본키를 지정하고 싶다면 다음과 같이 생성 CREATE TABLE NewBook ( CREATE TABLE NewBook (  bookid INT,  booki INT PRIMARY KEY,  bookname  VARCHAR(20),  booknam VARCHAR(20), =  publisher   VARCHAR(20),  publisher VARCHAR(20),  price  INT  price  INT);  PRIMARY KEY (bookid)); ­ bookid 속성이 없어서 두 개의 속성 bookname, publisher가 기본키가 된다면 괄호를 사 용하여 복합키를 지정 CREATE TABLE NewBook (  bookname  VARCHAR(20),  publisher   VARCHAR(20),  price  INT  PRIMARY KEY (bookname, publisher)); ­ NewBook 테이블의 CREATE 문에 좀 더 복잡한 제약사항을 추가 ⋅ bookname은 NULL 값을 가질 수 없고, publisher는 같은 값이 있으면 안됨  ⋅ price에  값이  입력되지 않을 경우 기본 값  10000을 저장하며,  또 가격은  최소 1,000 원 이상으로 함 CREATE TABLE NewBook (  bookname  VARCHAR(20), NOT NULL,  publisher   VARCHAR(20), UNIQUE,  price  INT DEex)AULT 10000 CHECK(price > 1000),  PRIMARY KEY (bookname, publisher)); ◼ 질의 3
-35 ­ 다음과 같은 속성을 가진 NewCustomer 테이블을 생성하시오. ⋅ custid(고객번호) 
- INT, 기본키 ⋅ name(이름) 
- VARCHAR(40) ⋅ address(주소) 
- VARCHAR(40) ⋅ phone(전화번호) 
- VARCHAR(30) CREATE TABLE NewCustomer (  custid  INT  PRIMARY KEY,  name    VARCHAR(40),  address VARCHAR(40),  phone VARCHAR(30), ); ◼ 질의 3
-36 ­ 다음과 같은 속성을 가진 NewOrders 테이블을 생성하시오. ⋅ orderid(주문번호) 
- INT, 기본키 ⋅ custid(고객번호) 
- INT, NOT NULL 제약조건, 외래키(NewCustomer.custid, 연쇄삭 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 70 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 제) ⋅ bookid(도서번호) 
- INT, NOT NULL 제약조건 ⋅ saleprice(판매가격) ­ INT ⋅ orderdate(판매일자) ­ DATE CREATE TABLE NewOrders (  orderid   INT,   custid   INT  NOT NULL,  bookid INT  NOT NULL,  saleprice  INT,   orderdate  DATE,  PRIMARY KEY (orderid), ex)OREIGN KEY (custid) REex)ERENCES NewCustomer(custid) ON DELETE CASCADE);   ­ 외래키  제약조건을  명시할  때는  반드시  참조되는  테이블(부모  릴레이션)이  존재해야  하며  참조되는 테이블의 기본키여야 함 ­ 외래키 지정 시 ON DELETE 또는 ON UPDATE 옵션은 참조되는 테이블의 튜플이 삭제되 거나 수정될 때 취할 수 있는 동작을 지정 ­ NO  ACTION은  어떠한  동작되  취하지  않고,  SET  NULL은  NULL  값으로  바꾸며,  SET  DEex)AULT는 정해진 값으로 바꿈 « 속성의 데이터 타입 종류 데이터 타입 설명 비슷한 타입 INT 정수형, 크기는 ± 2 BIGINT, SMALLINT NUMERIC(p, s) 실수형 p자리 정수, s자리 소수 DECIMAL(p, s) CHAR(n) 문자형 고정길이 VARCHAR(n) 문자형 가변길이 DATE 날짜형, 기본형은 YYYY
-MM
-DD DATETIME, TIME ­ 생성된 테이블의 속성과 속성에 관한 제약을 변경하며, 기본키 및 외래키를 변경 ­ ADD, DROP은 속성을 추가하거나 제거할 때 사용 ­ DEex)AULT는 속성의 기본값을 설정하거나 삭제할 때 사용 ­ ADD <제약이름>, DROP <제약이름>은 제약사항을 추가하거나 삭제할 때 사용 ­ ALTER 문의 기본 문법 ALTER TABLE 테이블이름 [ADD 속성이름 데이터타입] [DROP COLUMN 속성이름] [ALTER COLUMN 속성이름 데이터타입] [ALTER COLUMN 속성이름 [NULL┃NOT NULL]] [ADD PRIMARY KEY(속성이름)] [[ADD┃DROP] 제약이름] ◼ 질의 3
-37 ­ NewBook 테이블에 VARCHAR(13)의 자료형을 가진 isbn 속성을 추가하시오. ALTER TABLE NewBook ADD isbn VARCHAR(13); 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 71 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 질의 3
-38 ­ NewBook 테이블의 isbn 속성의 데이터 타입을 INT형으로 변경하시오. ALTER TABLE NewBook ALTER COLUMN isbn INT; ◼ 질의 3
-39 ­ NewBook 테이블의 isbn 속성을 삭제하시오. ALTER TABLE NewBook DROP COLUMN isbn; ◼ 질의 3
-40 ­ NewBook 테이블의 bookid 속성에 NOT NULL 제약조건을 적용하시오. ALTER TABLE NewBook ALTER COLUMN bookid INT NOT NULL; ◼ 질의 3
-41 ­ NewBook 테이블의 bookid 속성을 기본키로 변경하시오. ALTER TABLE NewBook ADD PRIMARY KEY(bookid); ­ 테이블을 삭제하는 명령 ­ 테이블의 구조와 데이터를 모두 삭제(데이터만 삭제하려면 DELETE 문을 사용) ­ DROP문의 기본 문법 DROP TABLE 테이블이름 ◼ 질의 3
-42 ­ NewBook 테이블을 삭제하시오. DROP TABLE NewBook; ◼ 질의 3
-43 ­ NewCustomer  테이블을  삭제하시오.  만약  삭제가  거절된다면  원인을  파악하고  관련된  테이블을 같이 삭제하시오. DROP TABLE NewCustomer; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 72 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 조작(1) 7주차  수업목표   SQL을 이용하여 기본검색과 산술식을 이용한 검색을 할 수 있다. 1교시  1. 기본검색 세부내용  2. 산술식을 이용한 검색 ※ 7주차를 들어가기 전에 테이블 생성 CREATE TABLE 테이블 변경 ALTER TABLE 데이터 정의 테이블 제거 DROP TABLE 뷰 생성 CREATE VIEW SQL 뷰 삭제 DROP VIEW 데이터 검색 SELECT 데이터 조작 데이터 삽입 INSERT 데이터 수정 UPDATE 데이터 삭제 DELETE 데이터 제어 삽입 SQL 1. 기본검색 ▶ SQL의 데이터 조작 기능 ­ 데이터 검색, 새로운 데이터 삽입, 데이터 수정, 데이터 삭제 « SQL의 데이터 조작 기능 데이터 검색 SELECT 데이터 삽입 INSERT 데이터 수정 UPDATE 데이터 삭제 DELETE 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 73 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 질의 예제에서 사용할 판매 데이터베이스 : 고객 릴레이션 고객 릴레이션 ▶ 질의 예제에서 사용할 판매 데이터베이스 : 제품 릴레이션 제품 릴레이션 ▶ 질의 예제에서 사용할 판매 데이터베이스 : 주문 릴레이션 주문 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 74 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 데이터 검색 : SELECT 문

1) 기본 검색 ­ SELECT 키워드와 함께 검색하고 싶은 속성의 이름 나열 ­ ex)ROM 키워드와 함께 검색하고 싶은 속성이 있는 테이블의 이름 나열 ­ 검색 결과는 테이블 형태로 반환됨 SELECT  [ALL╎DISTINCT] 속성_리스트 ex)ROM   테이블_리스트 ; 
Ÿ ALL ­ 결과 테이블이 투플의 중복을 허용하도록 지정, 생략 가능
Ÿ DISTINCT ­ 결과 테이블이 투플의 중복을 허용하지 않도록 지정 ◼ 예제 7
-9 ­ 고객 테이블에서 고객아이디, 고객이름, 등급 속성을 검색해보자. SELECT  고객아이디, 고객이름, 등급 ex)ROM   고객 ; 결과 테이블 ◼ 예제 7
-10 널 값은 MS SQL 서버에서는 NULL로  ­ 고객 테이블에 존재하는 모든 속성을 검색해보자. 오라클에서는 공백(빈칸)으로 출력됨 SELECT  고객아이디, 고객이름, 나이, 등급, 직업, 적립금 ex)ROM   고객 ; 결과 테이블 ◼ 예제 7
-11 모든  속성을  검색할  때는  모든  속성의  ­ 고객 테이블에 존재하는 모든 속성을 검색해보자. 이름을 나열하지 않고 * 사용 가능 SELECT  * ex)ROM   고객 ; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 75 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 결과 테이블 ◼ 예제 7
-12 ­ 제품 테이블에서 제조업체를 검색해보자. SELECT  제조업체 ex)ROM   제품 ; 결과 테이블에서 제조업체가 중복됨 결과 테이블 ◼ 예제 7
-13 ­ 제품 테이블에서 제조업체를 검색하되, ALL키워드를 사용해보자. SELECT  제조업체 ex)ROM   제품 ; 결과 테이블에서 제조업체가 중복됨 결과 테이블 ◼ 예제 7
-14 ­ 제품 테이블에서 제조업체 속성을 중복 없이 검색해보자. SELECT  DISTINCT  제조업체 ex)ROM   제품 ; 결과 테이블에서 제조업체가  결과 테이블 한 번씩만 나타남 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 76 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ AS 키워드를 이용해 결과 테이블에서 속성의 이름을 바꾸어 출력 가능 ⋅ 새로운 이름에 공백이 포함되어 있으면 작은 따옴표나 큰 따옴표로 묶어주어야 함 → MS SQL 서버에서는 작은 따옴표, 오라클에서는 큰 따옴표 사용 ⋅ AS 키워드는 생략 가능 ◼ 예제 7
-15 ­ 제품  테이블에서  제품명과  단가를  검색하되,  단가를  가격이라는  새  이름으로  출력해보 자. SELECT  제품명, 단가 AS 가격 ex)ROM   제품 ; 결과 테이블 2. 산술식을 이용한 검색 ▶ 데이터 검색 : SELECT 문

1) 산술식을 이용한 검색 ­ SELECT 키워드와 함께 산술식 제시 ⋅ 산술식 : 속성의 이름과 +, 
-, *, / 등의 산술 연산자와 상수로 구성 ­ 속성의 값이 실제로 변경되는 것은 아니고 결과 테이블에서만 계산된 결과 값이 출력됨 ◼ 예제 7
-16 ­ 제품  테이블에서  제품명과  단가  속성을  검색하되,  단가에  500원을  더해  조정단가라는  새 이름으로 출력해보자. SELECT  제품명, 단가 + 500 AS 조정단가 ex)ROM   제품 ; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 77 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 조작(2) 7주차  수업목표   SQL을 이용하여 조건검색과 정렬검색을 할 수 있다. 2교시  1. 조건검색 세부내용  2. 정렬검색 1. 조건검색 ▶ 데이터 검색 : SELECT 문

1) 조건 검색 ­ 조건을 만족하는 데이터만 검색 SELECT  [ALL╎DISTINCT] 속성_리스트 ex)ROM   테이블_리스트  [WHERE  조건] ;   ­ WHERE 키워드와 함께 비교 연산자와 논리 연산자를 이용한 검색 조건 제시 ⋅ 숫자뿐만 아니라 문자나 날짜 값을 비교하는 것도 가능 예) ‘A’ < ‘C’ 예) ‘2013
-12
-01’ < ‘2013
-12
-02’ ⋅ 조건에서 문자나 날짜 값은 작은 따옴표로 묶어서 표현
Ÿ 비교 연산자 연산자 의미 = 같다 <> 다르다 < 작다
> 크다 <= 작거나 같다
>= 크거나 같다 Ÿ 논리 연산자 연산자 의미 AND 모든 조건을 만족해야 검색한다. OR 여러 조건 중 한 가지만 만족해도 검색한다. NOT 조건을 만족하지 않는 것만 검색한다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 78 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-17 ­ 제품 테이블에서 한빛제과가 제조한 제품의 제품명, 재고량, 단가를 검색해보자. SELECT 제품명, 재고량, 단가 ex)ROM   제품 WHERE  제조업체 = ‘한빛제과’ ; 결과 테이블   ◼ 예제 7
-18 ­ 주문 테이블에서 apple 고객이 15개 이상 주문한 주문제품, 수량, 주문일자를 검색해보 자. SELECT 주문제품, 수량, 주문일자 ex)ROM   주문 WHERE  주문고객 = ‘apple’  AND  수량 >=15 ; 결과 테이블 ◼ 예제 7
-19 ­ 주문  테이블에서  apple  고객이  주문했거나  15개  이상  주문된  제품의  주문제품,  수량,  주문일자, 주문고객을 검색해보자. SELECT 주문제품, 수량, 주문일자, 주문고객 ex)ROM   주문 WHERE  주문고객 = ‘apple’  OR  수량 >=15 ; 결과 테이블 ◼ 예제 7
-20 ­ 제품 테이블에서 단가가 2000원 이상이면서 3000원 이하인 제품의 제품명, 단가, 제조 업체를 검색해보자. SELECT 제품명, 단가, 제조업체 ex)ROM   제품 WHERE  단가 >= 2000  AND  단가 <=3000 ; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 79 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

2) LIKE를 이용한 검색 ­ LIKE 키워드를 이용해 부분적으로 일치하는 데이터를 검색 ­ 문자열을 이용하는 조건에만 LIKE 키워드 사용 가능
Ÿ LINK 키워드와 함께 사용할 수 있는 기호 기호 설명 % 0개 이상의 문자(문자의 내용과 개수는 상관 없음) _ 한 개의 문자(문자의 내용은 상관 없음)
Ÿ LINK 키워드의 사용 예 기호 설명 데이터로 시작하는 문자열 LIKE '데이터%' (데이터로 시작하기만 하면 길이는 상관 없음) 데이터로 끝나는 문자열 LIKE '%데이터'  (데이터로 끝나기만 하면 길이는 상관 없음) LIKE '%데이터%'  데이터가 포함된 문자열 LIKE '데이터 _ _ _'  데이터로 시작하는 6자 길이의 문자열  LIKE '_ _ 한%'  세 번째 글자가 ‘한’인 문자열 ◼ 예제 7
-21 ­ 고객 테이블에서 성이 김씨인 고객의 고객이름, 나이, 등급, 적립금을 검색해보자. SELECT 고객이름, 나이, 등급, 적립금 ex)ROM   고객 WHERE  고객이름 LIKE  ‘김%’ ; 결과 테이블 ◼ 예제 7
-22 ­ 고객 테이블에서 고객아이디가 5자인 고객의 고객아이디, 고객이름, 등급을 검색해보자. SELECT 고객아이디, 고객이름, 적립금 ex)ROM   고객 WHERE  고객아이디 LIKE  ‘_ _ _ _ _’ ; 결과 테이블

3) NULL을 이용한 검색 ­ IS NULL 키워드를 이용해 검색 조건에서 특정 속성의 값이 널 값인지를 비교 ­ IS NOT NULL 키워드를 이용하면 특정 속성의 값이 널 값이 아닌지를 비교 ­ 검색 조건에서 널 값은 다른 값과 크기를 비교하면 결과가 모두 거짓이 됨 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 80 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-23 ­ 고객 테이블에서 나이가 아직 입력되지 않은 고객의 고객이름을 검색해보자. SELECT 고객이름 ex)ROM   고객 WHERE  나이  IS  NULL ; 결과 테이블 ◼ 예제 7
-24 ­ 고객 테이블에서 나이가 이미 입력된 고객의 고객이름을 검색해보자. SELECT 고객이름 ex)ROM   고객 WHERE  나이  IS  NOT  NULL ; 결과 테이블 2. 정렬검색 ▶ 데이터 검색 : SELECT 문

1) 정렬 검색 ­ ORDER BY 키워드를 이용해 결과 테이블 내용을 사용자가 원하는 순서로 출력 ­ ORDER BY 키워드와 함께 정렬 기준이 되는 속성과 정렬 방식을 지정 ⋅ 오름차순(기본) : ASC / 내림차순 : DESC ⋅ 널 값은 오름차순에서는 맨 마지막에 출력되고 내림차순에서는 맨 먼저 출력됨 ⋅ 여러 기준에 따라 정렬하려면 정렬 기준이 되는 속성을 차례대로 제시 SELECT  [ALL╎DISTINCT] 속성_리스트 ex)ROM   테이블_리스트  [WHERE  조건] ;   [ORDER  BY  속성_리스트 [ASC╎DESC] ] ;  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 81 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-25 ­ 고객  테이블에서  고객이름,  등급,  나이를  검색하되, 나이를  기준으로 내림차순  정렬해보 자. SELECT 고객이름, 등급, 나이 ex)ROM   고객 WHERE  나이  DESC ;   결과 테이블 ◼ 예제 7
-26 ­ 주문  테이블에서  수량이  10개  이상인  주문의  주문고객,  주문제품,  수량,  주문일자를  검 색해보자. 단, 주문제품을 기준으로 오름차순 정렬하고, 동일 제품은 수량을 기준으로 내 림차순 정렬해보자. SELECT 주문고객, 주문제품, 수량, 주문일자 ex)ROM   주문 WHERE  수량 >=10 ORDER  BY  주문제품 ASC, 수량 DESC ;  결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 82 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 조작(3) SQL을 이용하여 집계함수를 이용한 검색과 조인검색을 할 수  7주차  수업목표   있다. 3교시  1. 집계함수를 이용한 검색 세부내용  2. 조인검색 1. 집계함수를 이용한 검색 ▶ 데이터 검색 : SELECT 문

1) 집계 함수를 이용한 검색 ­ 특정 속성 값을 통계적으로 계산한 결과를 검색하기 위해 집계 함수를 이용 ※ 집계 함수(aggregate function)    
- 열 함수(column function)라고도 함    
- 개수, 합계, 평균, 최댓값, 최솟값의 계산 기능을 제공
Ÿ 집계 함수 사용 시 주의 사항 ­ 집계 함수는 널인 속성 값은 제외하고 계산함 ­ 집계 함수는 WHERE 절에서는 사용할 수 없고 SELECT 절이나 HAVING 절에서만 사용  가능 집계 함수 함수 의미 사용 가능한 속성의 타입 COUNT 속성 값의 개수 MAX 속성 값의 최대값 모든 데이터 MIN 속성 값의 최솟값 SUM 속성 값의 합계 숫자 데이터 AVG 속성 값의 평균 ◼ 예제 7
-27 ­ 제품 테이블에서 모든 제품의 단가 평균을 검색해보자. SELECT AVG (단가) ex)ROM   제품; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 83 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ 모든 제품의 평균 단가를 계산하는 과정 : 제품 릴레이션 2764 ◼ 예제 7
-28 ­ 한빛제과에서 제조한 제품의 재고량 합계를 제품 테이블에서 검색해보자. SELECT SUM(재고량) AS ‘재고량 합계’ ex)ROM   제품; WHERE 제조업체 = ‘한빛제과’; 결과 테이블 ◼ 예제 7
-29 ­ 고객 테이블에 고객이 몇 명 등록되어 있는지 검색해보자.
① 고객아이디 속성을 이용해 계산하는 경우 SELECT COUNT(고객아이디) AS 고객수 ex)ROM   고객; 결과 테이블
② 나이 속성을 이용해 계산하는 경우 SELECT COUNT(나이) AS 고객수 ex)ROM   고객; 결과 테이블
③ *를 이용해 계산하는 경우 SELECT COUNT(*) AS 고객수 ex)ROM   고객; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 84 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ 고객의 수를 계산하는 과정 : 고객 릴레이션 널인 속성 값은 제외하고 개수 계산 7 6
Ÿ COUNT(*)로 개수를 계산하는 과정 : 고객 릴레이션 정확한 개수를 계산하기 위해서는  보통 기본키 속성이나 *를 주로 이용 ◼ 예제 7
-30 ­ 제품 테이블에서 제조업체의 수를 검색해보자. SELECT COUNT(DISTINCT 제조업체) AS ‘제조업체 수’ ex)ROM   제품; 결과 테이블 DISTINCT 키워드를 이용해 중복을 없애고  서로 다른 제조업체의 개수만 계산

2) 그룹별 검색 SELECT   [ALL╎DISTINCT]  속성_리스트 ex)ROM    테이블_리스트 [WHERE   조건] [GROUP BY  속성_리스트  [HAVING 조건] ] [ORDER BY  속성_리스트  [ASC DESC] ]; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 85 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ GROUP  BY  키워드를  이용해  특정  속성의  값이  같은  투플을  모아  그룹을  만들고,  그룹별 로 검색 ⋅ GROUP BY 키워드와 함께 그룹을 나누는 기준이 되는 속성을 지정 ­ HAVING 키워드를 함께 이용해 그룹에 대한 조건을 작성 ­ 그룹을 나누는 기준이 되는 속성을 SELECT 절에도 작성하는 것이 좋음 ◼ 예제 7
-31 ­ 주문 테이블에서 주문제품별 수량의 합계를 검색해보자. SELECT 주문제품, SUM(수량) AS 총주문수량 ex)ROM   주문 GROUP BY 주문제품; 결과 테이블 ◼ 예제 7
-32 ­ 제품 테이블에서 제조업체별로 제조한 제품의 개수와 제품 중 가장 비싼 단가를 검색하 되,  제품의  개수는  제품수라는  이름으로  출력하고  가장  비싼  단가는  최고가라는  이름으 로 출력해보자. SELECT 제조업체, COUNT(*) AS 제품수, MAX(단가) AS 최고가 ex)ROM   제품 GROUP BY 제조업체; 결과 테이블
Ÿ 주문제품별 수량의 합계를 계산하는 과정 동일 제품을 주문한 투플을 모아 그룹으로  만들고, 그룹별로 수량의 합계를 계산 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 86 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-33 ­ 제품 테이블에서 제품을 3개 이상 제조한 제조업체별로 제품의 개수와 제품 중 가장 비 싼 단가를 검색해보자. SELECT 제조업체, COUNT(*) AS 제품수, MAX(단가) AS 최고가 ex)ROM   제품 GROUP BY 제조업체 HAVING COUNT(*)>=3; 결과 테이블 집계 함수를 이용한 조건은 WHERE 절에는  작성할 수 없고 HAVING 절에서 작성 ◼ 예제 7
-34 ­ 고객  테이블에서  적립금  평균이  1000원  이상인  등급에  대해  등급별  고객  수와  적립금  평균을 검색해보자. SELECT 등급, COUNT(*) AS 고객수, ANG(적립금) AS 평균적립금 ex)ROM   고객 GROUP BY 등급 HAVING AVG(적립금) >= 1000; 결과 테이블 ◼ 예제 7
-35 ­ 주문 테이블에서 각 주문고객이 주문한 제품의 총주문수량을 주문제품별로 검색해보자. SELECT 주문제품, 주문고객, SUM(수량) AS 총주문 수량 ex)ROM   주문 GROUP BY 주문제품, 주문고객; 집계 함수나 GROUP BY 절에  명시된 속성 외의 속성은  결과 테이블 SELECT 절에 작성 불가 하나의 그룹 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 87 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 2. 조인검색 ▶ 데이터 검색 : SELECT 문

1) 여러 테이블에 대한 조인 검색
Ÿ 조인 검색 ­ 여러 개의 테이블을 연결하여 데이터를 검색하는 것
Ÿ 조인 속성 ­ 조인 검색을 위해 테이블을 연결해주는 속성 ⋅ 연결하려는 테이블 간에 조인 속성의 이름은 달라도 되지만 도메인은 같아야 함 ⋅ 일반적으로 외래키가 조인 속성으로 이용됨 ­ ex)ROM 절에 검색에 필요한 모든 테이블을 나열 ­ WHERE 절에 조인 속성의 값이 같아야 함을 의미하는 조인 조건을 제시 ­ 같은 이름의 속성이 서로 다른 테이블에 존재할 수 있기 때문에 속성 이름 앞에 해당 속성 이 소속된 테이블의 이름을 표시 예) 주문.주문고객
Ÿ 두 개의 테이블을 이용한 조인 검색 예 : 주문과 제품 테이블 외래키 주문 테이블 제품 테이블 조인 속성 ◼ 예제 7
-36 ­ 판매 데이터베이스에서 banana 고객이 주문한 제품의 이름을 검색해보자. SELECT 제품.제품명 ex)ROM   제품, 주문 WHERE 주문.주문고객 = ‘banana’ AND 제품.제품번호 = 주문.주문제품; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 88 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-37 ­ 판매 데이터베이스에서 나이가 30세 이상의 고객이 주문한 제품의 주문제품과 주문일자 를 검색해보자. SELECT 주문.주문제품, 주문.주문일자 ex)ROM   고객, 주문 WHERE 고객. 나이 >= 30 AND 고객.고객아이디 = 주문.주문고객; 결과 테이블 SELECT    주문제품, 주문일자 ex)ROM     고객  AS  c, 주문  AS  o WHERE   c.나이  >= 30  AND  o.주문고객 = c.고객아이디; AS 키워드를 이용해 테이블의 이름을 대신하는  단순한 별명을 제시하여 질의문을 작성하는 것도 좋음 ◼ 예제 7
-38 ­ 판매 데이터베이스에서 고명석 고객이 주문한 제품의 제품명을 검색해보자. SELECT 제품.제품명 ex)ROM   고객, 제품, 주문 WHERE 고객.고객이름 = ‘고명석’ AND 고객.고객아이디 = 주문.주문고객 AND 제품.제품번호 = 주문.주문제품; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 89 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr SQL을 이용한 데이터 조작(4) 9주차  수업목표   SQL을 이용하여 데이터의 삽입과 수정, 삭제를 할 수 있다. 1교시  1. 데이터 삽입과 수정 세부내용  2. 데이터 삭제 1. 데이터 삽입과 수정 ▶ 데이터 삽입 : INSERT 문

1) 데이터 직접 삽입 INSERT INTO      테이블_이름[(속성_리스트)] VALUES   (속성값_리스트); ­ INTO 키워드와 함께 투플을 삽입할 테이블의 이름과 속성의 이름을 나열 ⋅ 속성 리스트를 생략하면 테이블을 정의할 때 지정한 속성의 순서대로 값이 삽입됨 ­ VALUES 키워드와 함께 삽입할 속성 값들을 나열 ­ INTO 절의 속성 이름과 VALUES 절의 속성 값은 순서대로 일대일 대응되어야 함 ◼ 예제 7
-46 ­ 판매 데이터베이스의 고객 테이블에 고객아이디가 strawberry, 고객이름이 최유경, 나이 가  30세,  등급이  vip,  직업이  공무원,  적립금이  100원인  새로운  고객의  정보를  삽입해 보자. 그런다음 고객 테이블에 있는 모든 내용을 검색하여 삽입된 새로운 투플을 확인해 보자. INSERT INTO  고객(고객아이디, 고객이름, 나이, 등급, 직업, 적립금) VALUES (‘strawberry’, ‘최유경’, 3ⵙ, ‘vip’, ‘공무원’, 1ⵙⵙ);   SELECT *  ex)ROM   고객; 결과 테이블 고객아이디, 고객이름, 나이, 등급, 직업, 적립금, ‘strawberry’ ‘최유경’ 30 ‘vip’ ‘공무원’ 100 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 90 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr INSERT INTO  고객(고객아이디, 고객이름, 나이, 등급, 직업, 적립금) VALUES (‘strawberry’, ‘최유경’, 3ⵙ, ‘vip’, ‘공무원’, 1ⵙⵙ);  INSERT INTO  고객 VALUES (‘strawberry’, ‘최유경’, 3ⵙ, ‘vip’, ‘공무원’, 1ⵙⵙ);  ◼ 예 제 7
-47 ­ 판매  데이터베이스의  고객  테이블에  고객아이디가  tomato,  고객이름이  정은심,  나이가  36세, 등급이 gold, 적립금은 4000원, 직업은 아직 모르는 새로운 고객의 정보를 삽입 해보자. 그런 다음 고객 테이블에 있는 모든 내용을 검색하여 삽입된 정은심 고객의 직 업 널 값인지 확인해보자. INSERT INTO  고객(고객아이디, 고객이름, 나이, 등급, 적립금) VALUES (‘tomato’, ‘정은심’, 36, ‘gold’, 4ⵙⵙⵙ);  SELECT *  ex)ROM   고객; 직업 속성에 결과 테이블 널 값을 삽입 INSERT INTO  고객(고객아이디, 고객이름, 나이, 등급, 적립금) VALUES (‘tomato’, ‘정은심’, 36, ‘gold’, 4ⵙⵙⵙ);  INSERT INTO  고객 VALUES (‘tomato’, ‘정은심’, 36, ‘gold’, NULL 4ⵙⵙⵙ); 

2) 부속 질의문을 이용한 데이터 삽입 ­ SELECT 문을 이용해 다른 테이블에서 검색한 데이터를 삽입 INSERT INTO      테이블_이름[(속성_리스트)] VALUES   문; 예)   INSERT INTO  한빛제품(제품명, 재고량, 단가) SELECT 제품명, 재고량, 단가 ex)ROM 제품 한빛제과에서 제조한 제품의  WHERE 제조업체 = ‘한빛제과’; 제품명, 재고량, 단가를 제품  테이블에서 검색하여 한빛제품  테이블에 삽입 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 91 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 데이터 수정 : UPDATE 문
1) 테이블에 저장된 투플에서 특정 속성의 값을 수정 UPDATE    테이블_이름 SET        속성_이름1 = 값1, 속성_이름2 = 값2, ㆍㆍㆍ             [WHERE   조건]; ­ SET 키워드 다음에 속성 값을 어떻게 수정할 것인지를 지정 ­ WHERE 절에 제시된 조건을 만족하는 투플에 대해서만 속성 값을 수정 ⋅ WHERE 절을 생략하면 테이블에 존재하는 모든 투플을 대상으로 수정 ◼ 예제 7
-48 ­ 제품 테이블에서 제품번호가 p03인 제품의 제품명을 통큰파이로 수정해보자. 그런 다음  제품 테이블의 모든 내용을 검색하여 수정 내용을 확인해보자. UPDATE 제품 SET 제품명 = ‘통큰파이’ WHERE  제품번호 = ‘pⵙ3’; SELECT *  ex)ROM   제품; 결과 테이블 ◼ 예제 7
-49 ­ 제품 테이블에 있는 모든 제품의 단가를 10% 인상해보자. 그런 다음 제품 테이블의 모 든 내용을 검색하여 인상 내용을 확인해보자. UPDATE 제품 SET 단가 = 단가 * 1.1; SELECT *  ex)ROM   제품; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 92 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-50 ­ 판매  데이터베이스에서  정소화  고객이 주문한  제품의  주문수량을  5개로  수정해보자.  그 런 다음 주문 테이블의 모든 내용을 검색하여 수정 내용을 확인해보자. UPDATE 주문 SET 수량 = 5 WHERE 주문고객 IN (SELECT    고객아이디             ex)ROM  고객             WHERE 고객이름 = ‘정소화’); SELECT *  ex)ROM   제품; 부속 질의문을  이용한 UPDATE 문 결과 테이블 2. 데이터 삭제 ▶ 데이터 삭제 : DELETE 문

1) 테이블에 저장된 데이터를 삭제 DELETE ex)ROM     테이블_이름 [WHERE   조건]; ­ WHERE 절에 제시한 조건을 만족하는 투플만 삭제 ⋅ WHERE 절을 생략하면 테이블에 존재하는 모든 투플을 삭제해 빈 테이블이 됨 ◼ 예제 7
-51 ­ 주문 테이블에서 주문일자가 2013년 5월 22일인 주문내역을 삭제해보자. 그런 다음 주 문 테이블의 모든 내용을 검색하여 삭제 여부를 확인해보자. DELETE ex)ROM 주문 결과 테이블 WHERE 주문일자 = ‘2013
-05
-22’;   SELECT *  ex)ROM   주문; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 93 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-52 ­ 판매  데이터베이스의  주문  테이블에  존재하는  모든  투플을  삭제해보자.  그런  다음  주문  테이블의 모든 내용을 검색하여 삭제 여부를 확인해보자. DELETE 빈 테이블이 남음,  ex)ROM 주문; DROP TABLE과는 다름 SELECT *  ex)ROM   주문; 결과 테이블 ◼ 예제 7
-53 ­ 판매 데이터베이스에서 정소화 고객이 주문한 내역을 주문 테이블에서 삭제해보자. 그런  다음 주문 테이블의 모든 내용을 검색하여 삭제 여부를 확인해보자. DELETE ex)ROM 주문 WHERE 주문고객 IN (SELECT    고객아이디             ex)ROM  고객 부속 질의문을              WHERE 고객이름 = ‘정소화’); 이용한 DELETE 문 SELECT *  ex)ROM   제품; 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 94 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 가상테이블 뷰 1. 가상테이블 뷰의 개념을 설명할 수 있다.  9주차  수업목표   2. SQL을 뷰의 생성, 활용, 삭제를 할 수 있다. 2교시  1. 뷰의 개념 세부내용  2. 뷰의 활용 1. 뷰의 개념 ▶ 뷰(View) ­ 다른 테이블을 기반으로 만들어진 가상 테이블 ­ 데이터를  실제로  저장하지  않고  논리적으로만  존재하는  테이블이지만  일반  테이블과  동일 한 방법으로 사용함  ­ 다른 뷰를 기반으로 새로운 뷰를 만드는 것도 가능함 ­ 뷰를 통해 기본 테이블의 내용을 쉽게 검색할 수는 있지만 기본 테이블의 내용을 변화시키 는 작업은 제한적으로 이루어짐 ⋅ 기본 테이블 : 뷰를 만드는데 기반이 되는 물리적인 테이블 ▶ 뷰는 기본 테이블을 들여다 볼 수 있는 창의 역할을 담당 « 뷰의 창 역할 뷰 2. 뷰의 활용 ▶ 뷰 생성 : CREATE VIEW 문 CREATE VIEW   뷰_이름[(속성_리스트)] AS SELECT 문 [WITH CHECK OPTION]; ­ CREATE VIEW 키워드와 함께 생성할 뷰의 이름과 뷰를 구성하는 속성의 이름을 나열 ⋅ 속성 리스트를 생략하면 SELECT 절에 나열된 속성의 이름을 그대로 사용 ­ AS 키워드와 함께 기본 테이블에 대한 SELECT 문 작성 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 95 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ⋅ SELECT 문은 생성하려는 뷰의 정의를 표현하며 ORDER BY는 사용 불가 ­ WITH CHECK OPTION  ⋅ 뷰에  삽입이나  수정  연산을  할  때  SELECT  문에서  제시한  뷰의  정의  조건을  위반하면  수행되지 않도록 하는 제약조건을 지정 ◼ 예제 7
-54 ­ 고객  테이블에서  등급이  vip인  고객의  고객아이디,  고객이름,  나이로  구성된  뷰를  우수 고객이라는 이름으로 생성해보자. 그런 다음 우수고객 뷰의 모든 내용을 검색해보자. CREATE VIEW  우수고객(고객아이디, 고객이름, 나이)  AS SELECT 고객아이디, 고객이름, 나이 뷰가 생성된 후에 우수고객  ex)ROM 고객 뷰에 vip 등급이 아닌 고객  WHERE 등급 = ‘vip’ 데이터를 삽입하거나 뷰의  WITH CHECK OPTION; 정의 조건을 위반하는 수정 및  SELECT *  ex)ROM   우수고객; 삭제 연산을 시도하면 실행을  거부함(WITH CHECK  결과 테이블 OPTION 때문) CREATE VIEW  우수고객(고객아이디, 고객이름, 나이)  AS SELECT   고객아이디, 고객이름, 나이 ex)ROM 고객  WHERE 등급 = ‘vip’ WITH CHECK OPTION; CREATE VIEW  우수고객 AS SELECT   고객아이디, 고객이름, 나이 ex)ROM 고객  WHERE 등급 = ‘vip’ WITH CHECK OPTION; ◼ 예제 7
-55 ­ 제품 테이블에서 제조업체별 제품수로 구성된 뷰를 업체별제품수라는 이름으로 생성해보 자. 그런 다음 업체별제품수 뷰의 모든 내용을 검색해보자. CREATE VIEW   업체별제품수(제조업체, 제품수)    AS SELECT 제조업체, COUNT(*) 제품수 속성은 기본  ex)ROM 제품 테이블인 제품 테이블에  GROUP BY 제조업체 원래 있던 속성이 아니라  WITH CHECK OPTION; 집계 함수를 통해 새로  SELECT *  ex)ROM   업체별제품수; 계산된 것이므로 속성의  이름을 명확히 제시해야 함 결과 테이블 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 96 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 뷰 활용 : SELECT 문 ­ 뷰는 일반 테이블과 같은 방법으로 원하는 데이터를 검색할 수 있음 ⋅ 뷰에  대한  SELECT  문이  내부적으로는  기본  테이블에  대한  SELECT  문으로  변환되어  수행  ­ 검색 연산은 모든 뷰에 수행 가능 ◼ 예제 7
-56 ­ 우수고객 뷰에서 나이가 25세 이상인 고객에 대한 모든 내용을 검색해보자. SELECT  *  ex)ROM  우수고객  WHERE   나이 >= 25; 결과 테이블 ▶ 뷰 활용 : INSERT, UPDATE, DELETE 문 ­ 뷰에 대한 삽입ㆍ수정ㆍ삭제 연산은 실제로 기본 테이블에 수행되므로 결과적으로 기본 테 이블의 변경됨 ­ 뷰에 대한 삽입ㆍ수정ㆍ삭제 연산은 제한적으로 수행됨 ⋅ 변경 가능한 뷰 vs. 변경 불가능한 뷰 
Ÿ 변경 불가능한 뷰의 특징 ­ 기본 테이블의 기본키를 구성하는 속성이 포함되어 있지 않은 뷰 ­ 기본 테이블에 있던 내용이 아닌 집계 함수로 새로 계산된 내용을 포함하는 뷰 ­ DISTICNT 키워드를 포함하여 정의한 뷰 ­ GROUP BY 절을 포함하여 정의한 뷰 ­ 여러 개의 테이블을 조인하여 정의한 뷰는 변경이 불가능한 경우가 많음 « 제품1 뷰는 변경 가능한 뷰인가? CREATE VIEW   제품1  AS SELECT 제품번호, 재고량, 제조업체  ex)ROM 제품 WITH CHECK OPTION; SELECT  *  ex)ROM   제품 1; « 제품2 뷰는 변경 가능한 뷰인가? CREATE VIEW   제품2  AS SELECT 제품명, 재고량, 제조업체  ex)ROM 제품 WITH CHECK OPTION; SELECT  *  ex)ROM   제품 2; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 97 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ◼ 예제 7
-57 ­ 제품번호가  p08,  재고량이  1000,  제조업체가  신선식품인  새로운  제품의  정보를  제품1  뷰에 삽입해보자. 그런 다음 제품1 뷰에 있는 모든 내용을 검색해보자. INSERT  INTO  제품1  VALUES  (‘pⵙ8’, 1ⵙⵙⵙ, ‘신선식품’); SELECT   *   ex)ROM   제품1; 결과 테이블 SELECT   *   ex)ROM   제품; 결과 테이블 제품1 뷰에 대한 삽입 연산은 실제로  기본 테이블인 제품 테이블에  수행된다. 즉, 새로운 제품의 정보는  제품 테이블에 삽입된다. INSERT  INTO  제품2  VALUES  (‘시원냉면’, 1ⵙⵙⵙ, ‘신선식품’); 제품2 뷰에 대한 삽입 연산은 실패함(오류 발생) ⇨ 제품2 뷰는 제품 테이블의 기본키인 제품번호 속성을 포함하고  있지 않기 때문에 제품2 뷰를 통해 새로운 투플을 삽입하려고  하면 제품번호 속성이 널 값이 되어 삽입 연산에 실패하게 됨 ▶ 뷰의 장점

1) 질의문을 좀 더 쉽게 작성할 수 있다. ­ GROUP BY, 집계 함수, 조인 등을 이용해 뷰를 미리 만들어 놓으면, 복잡한 SQL 문을 작 성하지 않아도 SELECT 절과 ex)ROM 절만으로도 원하는 데이터의 검색이 가능 
2) 데이터의 보안 유지에 도움이 된다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 98 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 자신에게 제공된 뷰를 통해서만 데이터에 접근하도록 권한 설정이 가능
3) 데이터를 좀 더 편리하게 관리할 수 있다. ­ 제공된 뷰와 관련이 없는 다른 내용에 대해 사용자가 신경 쓸 필요가 없음  ▶ 뷰 삭제 : DROP VIEW 문 ­ 뷰를 삭제해도 기본 테이블은 영향을 받지 않음 DROP  VIEW  뷰_이름  CASCADE ╎ RESTRICT;
Ÿ RESTRICT ­ 삭제할 뷰와 관련된 다른 뷰가 존재하면 삭제를 수행하지 않도록 지정
Ÿ CASCADE ­ 삭제할 뷰와 관련된 다른 뷰를 모두 함께 삭제하도록 지정 ◼ 예제 7
-58 ­ 우수고객  뷰를  삭제하되,  우수고객  뷰를  이용하는  다른  뷰가  존재하면  삭제가  수행되지  않도록 해보자. DROP  VIEW  우수고객  RESTRICT; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 99 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 삽입 SQL 9주차  수업목표   삽입 SQL의 개념을 설명할 수 있다. 3교시  세부내용  1. 삽입 SQL의 개념과 특징 1. 삽입 SQL의 개념과 특징 ▶ 삽입 SQL의 개념과 특징

1) 삽입 SQL(ESQL; Embedded SQL) ­ 프로그래밍 언어로 작성된 응용 프로그램 안에 삽입하여 사용하는 SQL 문
2) 주요 특징 ­ 프로그램 안에서 일반 명령문이 위치할 수 있는 곳이면 어디든 삽입 가능 ­ 일반 명령문과 구별하기 위해 삽입 SQL 문 앞에 EXEC SQL을 붙임 ­ 프로그램에 선언된 일반 변수를 삽입 SQL 문에서 사용할 때는 이름 앞에 콜론(:)을 붙여서  구분함
3) 커서(cursor) ­ 수행 결과로 반환된 여러 행을 한 번에 하나씩 가리키는 포인터 ­ 결과로 여러 개의 행을 반환하는 SELECT 문을 프로그램에서 사용할 때 필요함
4) 삽입 SQL 문에서 사용할 변수 선언 방법 ­ BEGIN DECLARE SECTION과 END DECLARE SECTION 사이에 선언
5) 커서가 필요 없는 삽입 SQL ­ CREATE TABLE 문, INSERT 문, DELETE 문, UPDATE 문 ­ 결과로 행 하나만 반환하는 SELECT 문 « 입력된 제품번호에 해당되는 제품명과 단가를 검색하는 프로그램 int  main ( )  { EXEC   SQL    BEGIN    DECLARE    SECTION; char     p_no[ 4 ],     p_name[ 21 ];  ❶ int       price; EXEC   SQL    END    DECLARE    SECTION; printf ( “제품번호를 입력하세요   :   ” ); ❷ scanf ( “%s”,   p_no ); EXEC   SQL    SELECT    제품명,   단가   INTO   :p_name,   :price ❸ ex)ROM     제품  WHERE    제품번호 = :p_no; printf (“∖ n  제품명 = %s”,   p_name); ❹ printf (“∖ n  단가 = %d”,   price); 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 100 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr return  0; } ▶ 커서가 필요 없는 삽입 SQL
① 삽입 SQL 문에서 사용할 변수 선언 ­ 테이블 내에 대응되는 속성과 같은 타입으로 변수의 데이터 타입을 선언 ­ 문자열의 끝을 표시하는 널 문자(‘∖0’)을 포함할 수 있도록 변수 선언 시 대응되는 속성 의 문자열 길이 보다 한 개 더 길게 선언 
② 검색하고자 하는 제품의 제품번호를 사용자로부터 입력 받는 부분
③ 제품 테이블에서 사용자가  입력한 제품번호에 해당하는 제품명과 단가를 검색하여 대응되 는 각각의 변수에 저장하는 삽입 SQL 문 ▶ 변수는 INTO 키워드 다음에 차례대로 나열
④ 검색된 제품명과 단가를 화면에 출력 ▶ 커서가 필요한 삽입 SQL

1) 커서를 선언하는 삽입 SQL 문 EXEC  SQL  DECLARE  커서_이름  CURSOR  ex)OR  SELECT  문; 예) EXEC  SQL  DECLARE  product_cursor  CURSOR  ex)OR SELECT  제품명, 단가  ex)ROM  제품; 
2) 커서에 연결된 SELECT 문을 실행하는 삽입 SQL 문 EXEC  SQL  OPEN  커서_이름;  예) EXEC  SQL  OPEN  product_cursor;
3) 커서를 이동시키는 삽입 SQL 문 ­ 커서를  이동하여  처리할  다음  행을  가리키도록  하고  커서가  가리키는  행으로부터  속성  값 을 가져와 변수에 저장시킴 ­ 결과 테이블에는 여러 행이 존재하므로 ex)ETCH 문은 여러 번 수행해야 함 ⋅ for, while 문과 같은 반복문과 함께 사용 EXEC  SQL  ex)ETCH  커서_이름  INTO  변수_리스트;  예) EXEC  SQL  ex)ETCH  product_cursor  INTO  :p_name,  :price;
4) 커서의 사용을 종료하는 삽입 SQL 문 EXEC  SQL  CLOSE  커서_이름;  예) EXEC  SQL  CLOSE  procuct_cursor; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 101 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스의 설계단계와 개념적 설계 10주차  수업목표   데이터베이스의 설계단계와 개념적 설계를 설명할 수 있다. 1교시  1. 요구 사항 분석 세부내용  2. 개념적 설계 1. 요구 사항 분석 ▶ 요구 사항 분석
1) 데이터베이스 설계 ­ 사용자의 다양한 요구 사항을 고려하여 데이터베이스를 생성하는 과정
2) 관계 데이터베이스의 대표적인 설계 방법  ­ E
-R 모델과 변환 규칙을 이용한 설계 ­ 정규화를 이용한 설계 : 9장 ▶ E
-R 모델과 릴레이션 변환 규칙을 이용한 설계의 과정 « 데이터베이스 설계의 과정 1단계 요구 사항 분석 설계 과정 중에 오류가  발견되어 변경이 필요하면  2단계 개념적 설계 이전 단계로 되돌아가 설계  내용을 변경 가능 3단계 논리적 설계 4단계 물리적 설계 5단계 구현 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 102 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 데이터베이스 설계의 과정의 각 단계별 주요 작업과 결과물 ⋅ 데이터베이스의 용도 파악  1단계 요구 사항 분석 ⋅ 결과물 : 요구 사항 명세서 핵심 ⋅ DBMS에 독립적인 개념적 구조 설계 2단계 개념적 설계 단계 ⋅ 결과물 : 개념적 스키마(E
-R 다이어그램) ⋅ DBMS에 적합한 논리적 구조 설계 3단계 논리적 설계 ⋅ 결과물 : 논리적 스키마(릴레이션 스키마) ⋅ DBMS로 구현 가능한 물리적 구조 설계 4단계 물리적 설계 ⋅ 결과물 : 물리적 스키마 ⋅ SQL 문을 작성한 후 이를 DBMS에서 5단계 구현 ⋅ 실행하여 데이터베이스 생성 ▶ 설계 1단계 : 요구 사항 분석

1) 목적 ­ 사용자의 요구 사항을 수집하고 분석하여 개발할 데이터베이스의 용도를 파악 ⋅ 업무에 필요한 데이터가 무엇인지, 그 데이터에 어떤 처리가 필요한지 등을 고려
2) 결과물 ­ 요구 사항 명세서
3) 주요 작업 ­ 데이터베이스를 실제로 사용할 주요 사용자의 범위를 결정 ­ 사용자가 조직에서 수행하는 업무를 분석 ­ 면담, 설문 조사, 업무 관련 문서 분석 등의 방법을 이용해 요구 사항 수집 ­ 수집된 요구 사항에 대한 분석 결과를 요구 사항 명세서로 작성 ▶ 요구 사항 분석 예 ­ [한빛 마트 데이터베이스] ­ 인터넷으로 회원들에게 상품을 판매하는 한빛 마트의 데이터베이스 개발 « 한빛 마트의 데이터베이스를 위한 요구 사항 명세서
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다.
④ 상품에 대한 상품번호, 상품명, 재고량, 단가 정보를 유지해야 한다.
⑤ 상품은 상품번호로 식별한다.
⑥ 회원은 여러 상품을 주문할 수 있고, 하나의 상품을 여러 회원이 주문할 수 있다.
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 103 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
⑧ 각 상품은 한 제조업체가 공급하고, 제조업체 하나는 여러 상품을 공급할 수 있다.
⑨ 제조업체가 상품을 공급하면 공급일자와 공급량 정보를 유지해야 한다.  
⑩ 제조업체에 대한 제조업체명, 전화번호, 위치, 담당자 정보를 유지해야 한다.
⑪ 제조업체는 제조업체명으로 식별한다.
⑫ 회원은 게시글을 여러 개 작성할 수 있고, 게시글 하나는 한 명의 회원만 작성할 수 있다.
⑬ 게시글에 대한 글번호, 글제목, 글내용, 작성일자 정보를 유지해야 한다.
⑭ 게시글은 글번호로 식별한다. ▶ 요구 사항 분석 « 데이터베이스 설계 : 요구 사항 분석 단계 ⋅ 데이터베이스의 용도 파악  1단계 요구 사항 분석 ⋅ 결과물 : 요구 사항 명세서 2단계 개념적 설계 3단계 논리적 설계 4단계 물리적 설계 5단계 구현 2. 개념적 설계 ▶ 설계 2단계 : 개념적 설계

1) 목적 ­ DBMS에 독립적인 개념적 스키마 설계 ­ 요구 사항 분석 결과물을 개념적 데이터 모델을 이용해 개념적 구조로 표현  ⇨ 개념적 모델링 ⋅ 일반적으로 E
-R 모델을 많이 이용

2) 결과물 ­ 개념적 스키마 : E
-R 다이어그램

3) 주요 작업 ­ 요구  사항  분석  결과를  기반으로  중요한  개체를 추출하고 개체  간의  관계를  결정하여  E
-R  다이어그램으로 표현 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 104 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

4) 작업 과정 STEP 1 ⋅ 개체 추출, 각 개체의 주요 속성과 키 속성 선별 STEP 2 ⋅ 개체 간의 관계 설정 STEP 3 ⋅ E
-R 다이어그램으로 표현 « 개념적 모델링 과정 개체와 속성 추출 관계 추출 E
-R 다이어그램 작성 ▶ 개념적 설계 ­ (STEP 1) 개체와 속성 추출
Ÿ 개체 ­ 저장할만한 가치가 있는 중요 데이터를 가진 사람이나 사물 등 예) 병원 데이터베이스 개발에 필요한 개체 ­ 병원 운영에 필요한 사람 : 환자, 의사, 간호사 등 ­ 병원 운영에 필요한 사물 : 병실, 수술실, 의료 장비 등 

1) 개체 추출 방법 ­ 요구 사항 문장에서 업무와 관련이 깊은 의미 있는 명사를 찾아라! ⋅ 업무와 관련이 적은 일반적이고 광범위한 의미의 명사는 제외 ⋅ 의미가 같은 명사가 여러 개일 경우는 대표 명사 하나만 선택 ­ 찾아낸 명사를 개체와 속성으로 분류하라! ▶ 개념적 설계 ­ (STEP 1) 개체와 속성 추출 예 ­ 8페이지 ‘한빛 마트의 데이버베이스를 위한 요구 사항 명세서’에서 개체와 속성을 추출하는  과정 « 요구 사항 문장에서 명사를 선별한 예(A)
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다. ⋅ “한빛 마트”는 일반적이고 광범위한 의미의 명사이므로 제외 ⋅ “회원아이디”,  “비밀번호”,  “이름”,  “나이”,  “직업”,  “등급”,  “적립금”은  회원의 속성으로 분류 ⋅ “회원아이디”는 키 속성으로 분류 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 105 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 요구 사항 문장에서 개체와 속성을 추출한 예(A)
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다.
Ÿ 추출 결과 ­ 개체 : 회원 ­ “회원” 개체의 속성 : 회원아이디, 비밀번호, 이름, 나이, 직업, 등급, 적립금 ­ “회원” 개체의 키 속성 : 회원아이디  « 요구 사항 문장에서 개체와 속성을 추출한 예(B)
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다.
Ÿ 추출 결과 ­ 개체 : 회원, 상품 ­ 속성 : 주문번호, 주문수량, 배송지, 주문일자 ⋅ 회원이 상품을 주문을 해야 생기는 중요한 정보이기 때문에 회원이나 상품 개체의 속 성으로 보기는 어렵고 이후 추출할  특정 관계의 속성일 가능성이 높음 « 한빛 마트 요구 사항 명세서에서 명사를 선별한 결과
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다. 
④ 상품에 대한 상품번호, 상품명, 재고량, 단가 정보를 유지해야 한다.
⑤ 상품은 상품번호로 식별한다.
⑥ 회원은 여러 상품을 주문할 수 있고, 하나의 상품을 여러 회원이 주문할 수 있다.
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다.
⑧  각 상품은 한 제조업체가 공급하고, 제조업체 하나는 여러 상품을 공급할 수 있다.
⑨  제조업체가 상품을 공급하면 공급일자와 공급량 정보를 유지해야 한다.  
⑩  제조업체에 대한 제조업체명, 전화번호, 위치, 담당자 정보를 유지해야 한다.
⑪  제조업체는 제조업체명으로 식별한다.
⑫  회원은  게시글을  여러  개  작성할  수  있고,  게시글  하나는  한  명의  회원만  작성할  수  있 다.
⑬  게시글에 대한 글번호, 글제목, 글내용, 작성일자 정보를 유지해야 한다.
⑭  게시글은 글번호로 식별한다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 106 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 8페이지  ‘한빛  마트의  데이버베이스를  위한  요구  사항  명세서’에서  개체와  속성을  추출한  결과 « 한빛 마트 요구 사항 명세서에서 개체와 개체의 속성을 추출한 최종 결과 개체 속성 회원 회원아이디, 비밀번호, 이름, 나이, 직업, 등급, 적립금 상품 상품번호, 상품명, 재고량, 단가 제조업체 제조업체명, 전화번호, 위치, 담당자 게시글 글번호, 글제목, 글내용, 작성일자 « 회원 개체의 E
-R 다이어그램 회원 회원아이디 비밀번호 이름 나이 직업 등급 적립금 « 상품 개체의 E
-R 다이어그램 상품 상품번호 상품명 재고량 단가 « 제조업체 개체의 E
-R 다이어그램 제조업체 제조업체명 전화번호 위치 담당자 « 게시글 개체의 E
-R 다이어그램 게시글 글번호 글제목 글내용 작성일자 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 107 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스의 논리적 설계 10주차  수업목표   데이터베이스의 논리적 설계를 설명할 수 있다. 2교시  세부내용  1. 논리적 설계 1. 논리적 설계 ▶ 설계 3단계 : 논리적 설계

1) 목적 ­ DBMS에 적합한 논리적 스키마 설계 ­ 개념적 스키마를 논리적 데이터 모델을 이용해 논리적 구조로 표현 ⇨ 논리적 모델링(데이 터 모델링) ⋅ 일반적으로 관계 데이터 모델을 많이 이용
2) 결과물 ­ 논리적 스키마 : 릴레이션 스키마
3) 주요 작업 ­ 개념적 설계 단계의 결과물인 E
-R 다이어그램을 릴레이션 스키마로 변환 ­ 릴레이션  스키마  변환  후  속성의  데이터  타입,  길이,  널  값  허용  여부,  기본  값,  제약조건  등을 세부적으로 결정하고 결과를 문서화시킴 

4) E
-R 다이어그램을 릴레이션 스키마로 변환하는 규칙
Ÿ 규칙 1 : 모든 개체는 릴레이션으로 변환한다.
Ÿ 규칙 2 : 다대다(n:m) 관계는 릴레이션으로 변환한다.
Ÿ 규칙 3 : 일대다(1:n) 관계는 외래키로 표현한다.
Ÿ 규칙 4 : 일대일(1:1) 관계는 외래키로 표현한다.
Ÿ 규칙 5 : 다중 값 속성은 릴레이션으로 변환한다. ­ 변환 규칙을 순서대로 적용하되, 해당되지 않는 규칙은 제외함 ▶ 논리적 설계 ­ [규칙 1] 모든 개체는 릴레이션으로 변환한다

1) E
-R 다이어그램의 각 개체를 하나의 릴레이션으로 변환 개체의 이름 ⋅ 릴레이션 이름 개체의 속성 ⋅ 릴레이션의 속성 개체의 키 속성 ⋅ 릴레이션의 기본키 ­ 개체의  속성이  복합  속성인  경우에는  복합  속성을  구성하고  있는  단순  속성만  릴레이션의  속성으로 변환 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 108 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 개체를 릴레이션으로 변환하는 규칙을 적용한 예 상품  릴레이션 릴레이션 스키마 상품(상품번호, 상품명,  재고량, 단가) « 복합 속성을 가지는 개체를 릴레이션으로 변환하는 예 고객  릴레이션 ▶ 논리적 설계 ­ [규칙 2] 다대다 관계는 릴레이션으로 변환한다

1) E
-R 다이어그램의 다대다 관계를 하나의 릴레이션으로 변환 관계의 이름 ⋅ 릴레이션 이름 관계의 속성 ⋅ 릴레이션의 속성 ­ 관계에  참여하는  개체를  규칙  1에  따라  릴레이션으로  변환한  후  이  릴레이션의  기본키를  관계  릴레이션에  포함시켜  외래키로  지정하고  외래키들을  조합하여  관계  릴레이션의  기본 키로 지정 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 109 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 다대다 관계를 릴레이션으로 변환하는 규칙을 적용한 예 외래키 외래키 기본키 외래키 기본키 ▶ 논리적 설계 ­ [규칙 3] 일대다 관계는 외래키로 표현한다

1) E
-R 다이어그램의 일대다 관계는 외래키로만 표현
Ÿ 규칙 3
-1 : 일반적인 일대다 관계는 외래키로 표현한다.
Ÿ 규칙 3
-2 : 약한 개체가 참여하는 일대다 관계는 외래키를 포함해서 기본키로 지정한다. v [규칙 3
-1] 일반적인 일대다 관계는 외래키로 표현한다. ­ 일대다(1:n) 관계에서 1측 개체 릴레이션의 기본키를 n측 개체 릴레이션에 포함시켜 외 래키로 지정 ­ 관계의 속성들도 n측 개체 릴레이션에 포함시킴 « 일반적인 개체가 참여하는 일대다 관계를 외래키로 표현하는 규칙을 적용한 예 외래키 v [규칙 3
-2] 약한 개체가 참여하는 일대다 관계는 외래키를 포함해서 기본키를 지정한다. ­ 일대다(1:n) 관계에서 1측 개체 릴레이션의 기본키를 n측 개체 릴레이션에 포함시켜 외 래키로 지정  ­ 관계의 속성들도 n측 개체 릴레이션에 포함시킴 ­ n측 개체 릴레이션은 외래키를 포함하여 기본키를 지정함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 110 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ⋅ 약한 개체는 오너 개체에 따라 존재 여부가 결정되므로 오너 개체의 기본키를 이용해  식별해야 함 « 약한 개체가 참여하는 일대다 관계를 외래키로 표현하는 규칙을 적용한 예 외래키 기본키 ▶ 논리적 설계 ­ [규칙 4] 일대일 관계는 외래키로 표현한다

1) E
-R 다이어그램의 일대일 관계는 외래키로만 표현
Ÿ 규칙 4
-1 : 일반적인 일대일 관계는 외래키를 서로 주고 받는다.
Ÿ 규칙 4
-2 : 일대일 관계에 필수적으로 참여하는 개체의 릴레이션만 외래키를 받는다.
Ÿ 규칙 4
-3 : 모든 개체가 일대일 관계에 필수적으로 참여하면 릴레이션을 하나로 합친다. v [규칙 4
-1] 일반적인 일대일 관계는 외래키를 서로 주고 받는다. ­ 관계에 참여하는 개체 릴레이션들이 서로의 기본키를 주고 받아 외래키로 지정 ­ 관계의 속성들도 모든 개체 릴레이션에 포함시킴 ­ 불필요한 데이터 중복이 발생할 수 있음 « 일반적인 일대일 관계를 외래키로 표현하는 규칙을 적용한 예 외래키 외래키 v [규칙 4
-2] 필수적으로 참여하는 개체 릴레이션만 외래키를 받는다. ­ 관계에 필수적으로 참여하는 개체 릴레이션에만 외래키를 포함시킴 ­ 관계의 속성들은 관계에 필수적으로 참여하는 개체 릴레이션에 포함시킴 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 111 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 일대일 관계에 필수적으로 참여하는 개체의 릴레이션이 외래키를 가지는 예 외래키 v [규칙 4
-3] 모든 개체가 필수적으로 참여하면 릴레이션을 하나로 합친다. ­ 관계에 참여하는 개체 릴레이션들을 하나의 릴레이션으로 합쳐서 표현 ­ 관계의  이름을  릴레이션  이름으로  사용하고  관계에  참여하는  두  개체의  속성들을  관계  릴레이션에 모두 포함시킴 ­ 두 개체 릴레이션의 키 속성을 조합하여 관계 릴레이션의 기본키로 지정 « 일대일 관계에 모든 개체가 필수적으로 참여하면 릴레이션을 통합하는 예 외래키  외래키  기본키  ▶ 논리적 설계 ­ [규칙 5] 다중 값 속성은 릴레이션으로 변환한다

1) E
-R 다이어그램의 다중 값 속성은 독립적인 릴레이션으로 변환 ­ 다중  값  속성과  함께  그  속성을  가지고  있던  개체  릴레이션의  기본키를  외래키로  가져와  새로운 릴레이션에 포함시킴 ­ 새로운 릴레이션의 기본키는 다중 값 속성과 외래키를 조합하여 지정 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 112 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 다중 값 속성을 릴레이션으로 변환하는 규칙을 적용한 예 외래키 기본키 « 다중 값 속성인 부하직원 속성을 그대로 포함하는 사원 릴레이션 다중 값을 가지는 속성 사원 릴레이션은 속성에 다중 값을  저장할 수 없는 릴레이션 특성을 위반함 « 릴레이션 특성에 맞게 부하직원 속성을 포함하는 사원 릴레이션  사원 릴레이션은 릴레이션 특성을 위반하지는 않지만 사원번호,  사원명, 직위 속성의 값이 불필요하게 중복 저장되는 문제가 발생함 « 규칙 5를 적용한 후의 사원 릴레이션과 사원
-부하직원 릴레이션 사원
-부하직원 릴레이션 사원 릴레이션 [규칙 5]에 따라 다중 값 속성을 독립적인 릴레이션으로 변환하면  불필요한 중복을 제거하면서도 릴레이션의 특성을 만족시킬 수 있다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 113 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스의 물리적 설계 10주차  수업목표   데이터베이스의 물리적 설계를 설명할 수 있다. 3교시  1. 물리적 설계 세부내용  2. 개념적 설계 3. 논리적 설계 1. 물리적 설계 ▶ 물리적 설계와 구현

1) 설계 4단계 : 물리적 설계 ­ 하드웨어나  운영체제의  특성을  고려하여  필요한  인덱스  구조나  내부  저장  구조  등에  대한  물리적 구조를 설계
2) 설계 5단계 : 구현 ­ SQL로 작성한 명령문을 DBMS에서 실행하여 데이터베이스를 실제로 생성 ▶ 테이블 명세서에 따라 SQL 문을 작성한 예  « 회원 릴레이션의 구현을 위한 SQL 문 예 CREATE  TABLE  회원  ( 회원아이디   VARCHAR( 2ⵙ )   NOT   NULL, 비밀번호     VARCHAR( 2ⵙ )   NOT   NULL, 이름         VARCHAR( 1ⵙ )   NOT   NULL, 나이         INT,  직업         VARCHAR( 2ⵙ ),   등급         VARCHAR( 1ⵙ )   NOT   NULL    DEex)AULT   ‘silver’, 적립금       INT                NOT   NULL    DEex)AULT    ⵙ, PRIMARY   KEY   (회원아이디), CHECK   (나이   >=   ⵙ), CHECK   (등급   in    (‘silver’,  ‘gold’,  ‘vip’)  ) ; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 114 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 물리적 설계와 구현  « 데이터베이스 설계 : 물리적 설계와 구현 ⋅ 데이터베이스의 용도 파악  1단계 요구 사항 분석  ⋅ 결과물 : 요구 사항 명세서 ⋅ DBMS에 독립적인 개념적 구조 설계 2단계 개념적 설계 ⋅ 결과물 : 개념적 스키마(E
-R 다이어그램) ⋅ DBMS에 적합한 논리적 구조 설계 3단계 논리적 설계 ⋅ 결과물 : 논리적 스키마(릴레이션 스키마) ⋅ DBMS로 구현 가능한 물리적 구조 설계 하드웨어나 4단계 물리적 설계 ⋅ 결과물 : 물리적 스키마 운영체제의  특성 고려 ⋅ SQL  문을  작성한  후  이를  DBMS에서  5단계 구현 실행하여 데이터베이스 생성 2. 개념적 설계 ▶ 개념적 설계 ­ (STEP 2) 관계 추출
Ÿ 관계 : 개체 간의 의미 있는 연관성

1) 관계 추출 방법 ­ 요구 사항 문장에서 개체 간의 연관성을 의미 있게 표현한 동사를 찾아라! ⋅ 의미가 같은 동사가 여러 개일 경우는 대표 명사 하나만 선택 ­ 찾아낸 관계에 대해 매핑 카디널리티와 참여 특성을 결정하라! ⋅ 매핑 카디널리티 : 일대일(1:1), 일대다(1:n), 다대다(n:m) ⋅ 참여 특성 : 필수적 참여 / 선택적 참여 ▶ 개념적 설계 ­ (STEP 2) 관계 추출 예 ­ 10주차 1교시 ‘한빛 마트의 데이버베이스를 위한 요구 사항 명세서’ « 한빛 마트의 데이터베이스를 위한 요구 사항 명세서
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다.
④ 상품에 대한 상품번호, 상품명, 재고량, 단가 정보를 유지해야 한다.
⑤ 상품은 상품번호로 식별한다.
⑥ 회원은 여러 상품을 주문할 수 있고, 하나의 상품을 여러 회원이 주문할 수 있다.
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다. 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 115 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
⑧ 각 상품은 한 제조업체가 공급하고, 제조업체 하나는 여러 상품을 공급할 수 있다.
⑨ 제조업체가 상품을 공급하면 공급일자와 공급량 정보를 유지해야 한다.  
⑩ 제조업체에 대한 제조업체명, 전화번호, 위치, 담당자 정보를 유지해야 한다.
⑪ 제조업체는 제조업체명으로 식별한다.
⑫ 회원은 게시글을 여러 개 작성할 수 있고, 게시글 하나는 한 명의 회원만 작성할 수 있다.
⑬ 게시글에 대한 글번호, 글제목, 글내용, 작성일자 정보를 유지해야 한다.
⑭ 게시글은 글번호로 식별한다. ­ 10주차  1교시  ‘한빛  마트의  데이버베이스를  위한  요구  사항  명세서’에서  관계를  추출하는  과정 « 요구 사항 문장에서 동사를 선별한 예(A)
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다. ⋅ “입력해야  한다”는  개체와  개체의  관계를  표현하는  동사로  볼 수 없으므로 제외 ⋅ “부여된다”는 개체와 개체의 관계를 표현하는 동사로 볼 수  없으므로 제외 ⋅ “식별한다”는 개체와 개체의 관계를 표현하는 동사로 볼 수  없으므로 제외 « 요구 사항 문장에서 동사를 선별한 예(B)
⑥ 회원은 여러 상품을 주문할 수 있고, 하나의 상품을 여러 회원이 주문할 수 있다.
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다.
Ÿ 추출 결과 ­ 관계 : 주문 ⋅ “회원” 개체와 “상품” 개체가 맺는 관계, 다대다(n:m) 관계 ⋅ “회원” 개체는 관계에 선택적으로 참여 / “상품” 개체는 관계에 선택적으로 참여 ­ “주문” 관계의 속성 : 주문번호, 주문수량, 배송지, 주문일자 « 요구 사항 문장에서 동사를 선별한 예(C)
⑧ 각 상품은 한 제조업체가 공급하고, 제조업체 하나는 여러 상품을 공급할 수 있다.
⑨ 제조업체가 상품을 공급하면 공급일자와 공급량 정보를 유지해야 한다. 
Ÿ 추출 결과 ­ 관계 : 공급 ⋅ “상품” 개체와 “제조업체” 개체가 맺는 관계, 일대다(1:n) 관계 ⋅ “상품” 개체는 관계에 필수적으로 참여 / “제조업체” 개체는 관계에 선택적으로 참여 ­ “공급” 관계의 속성 : 공급일자, 공급량 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 116 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 요구 사항 문장에서 동사를 선별한 예(D)
⑫ 회원은 게시글을 여러 개 작성할 수 있고, 게시글 하나는 한 명의 회원만 작성할 수 있다.
Ÿ 추출 결과 ­ 관계 : 작성 ⋅ “회원” 개체와 “게시글” 개체가 맺는 관계, 일대다(1:n) 관계 ⋅ “회원” 개체는 관계에 선택적으로 참여 / “게시글” 개체는 관계에 필수적으로 참여 « 한빛 마트 요구 사항 명세서에서 동사를 선별한 결과
① 한빛  마트에  회원으로  가입하려면  회원아이디,  비밀번호,  이름,  나이,  직업을  입력해야  한 다.
② 가입한 회원에게는 등급과 적립금이 부여된다.
③ 회원은 회원아이디로 식별한다.
④ 상품에 대한 상품번호, 상품명, 재고량, 단가 정보를 유지해야 한다.
⑤ 상품은 상품번호로 식별한다.
⑥ 회원은 여러 상품을 주문할 수 있고, 하나의 상품을 여러 회원이 주문할 수 있다.
⑦ 회원이  상품을  주문하면  주문에  대한  주문번호,  주문수량,  배송지,  주문일자  정보를  유지 해야 한다.
⑧ 각 상품은 한 제조업체가 공급하고, 제조업체 하나는 여러 상품을 공급할 수 있다.
⑨ 제조업체가 상품을 공급하면 공급일자와 공급량 정보를 유지해야 한다.  
⑩ 제조업체에 대한 제조업체명, 전화번호, 위치, 담당자 정보를 유지해야 한다.
⑪ 제조업체는 제조업체명으로 식별한다.
⑫ 회원은 게시글을 여러 개 작성할 수 있고, 게시글 하나는 한 명의 회원만 작성할 수 있다. 
⑬ 게시글에 대한 글번호, 글제목, 글내용, 작성일자 정보를 유지해야 한다.
⑭ 게시글은 글번호로 식별한다. ­ 10주차 1교시 ‘한빛 마트의 데이버베이스를 위한 요구 사항 명세서’에서 관계를  추출한 결 과 « 한빛 마트 요구 사항 명세서에서 관계와 관계의 속성을 추출한 최종 결과 관계 관계에 참여하는 개체 관계 유형 속성 회원(선택) 주문번호, 주문수량, 주문 다대다 상품(선택) 배송지, 주문일자 상품(필수) 공급 일대다 공급일자, 공급량 제조업체(선택) 회원(선택) 작성 일대다 게시글(필수) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 117 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 주문 한빛 마트 요구 사항 명세서의 E
-R 다이어그램 회원아이디 비밀번호 상품번호 이름 ■ m 상품명 회원 주문 상품 나이 재고량 직업 단가 주문번호 주문수량 배송지 주문일자 등급 적립금 « 공급 관계의 E
-R 다이어그램 상품번호 제조업체명 상품명 ■ 1 전화번호 상품 공급 제조업체 재고량 위치 단가 담당자 공급일자 공급량 « 작성 관계의 E
-R 다이어그램 회원아이디 비밀번호 글번호 이름 1 ■ 글제목 회원 작성 게시글 나이 글내용  직업 작성일자  등급 적립금 ▶ 개념적 설계 ­ (STEP 3) E
-R 다이어그램 작성 ­ 10주차 1교시 ‘한빛 마트의 데이버베이스를 위한 요구 사항 명세서’를 개념적 스키마로 작 성한 결과 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 118 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 한빛 마트 요구 사항 명세서의 E
-R 다이어그램   « 데이터베이스 설계 : 개념적 설계 단계   ⋅ 데이터베이스의 용도 파악  1단계 요구 사항 분석 ⋅ 결과물 : 요구 사항 명세서 ⋅ DBMS에 독립적인 개념적 구조 설계 2단계 개념적 설계 ⋅ 결과물 : 개념적 스키마(E
-R 다이어그램) 3단계 논리적 설계 4단계 물리적 설계 5단계 구현 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 119 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 3. 논리적 설계 ▶ 릴레이션 스키마 변환 규칙을 이용한 논리적 설계 예 ­ 19페이지 ‘한빛 마트 요구 사항 명세서의 E
-R 다이어그램’을 릴레이션으로 변환하는 과정
Ÿ STEP 1 : 규칙 1 적용 : 모든 개체는 릴레이션으로 변환한다. « 릴레이션 스키마로 변환할 한빛 마트 E
-R 다이어그램 v [규칙 1] 적용 결과 : 모든 개체는 릴레이션으로 변환한다. « 규칙 1을 적용한 결과 회원 릴레이션 상품 릴레이션 제조업체 릴레이션 게시글 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 120 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ STEP 2 : 규칙 2 적용 : 다대다(n:m) 관계는 릴레이션으로 변환한다. « 한빛 마트의 E
-R 다이어그램에 표현된 다대다 관계   v [규칙 2] 적용 결과 : 다대다(n:m) 관계는 릴레이션으로 변환한다. « 규칙 2를 적용한 결과 회원 릴레이션 상품 릴레이션 제조업체 릴레이션 게시글 릴레이션 주문 릴레이션 외래키 외래키 기본키 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 121 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ STEP 3 : 규칙 3 적용 : 일대다(1:n) 관계는 외래키로 표현한다. « 한빛 마트의 E
-R 다이어그램에 표현된 일대다 관계   v [규칙 3] 적용 결과 : 일대다(1:n) 관계는 외래키로 표현한다. « 규칙 3을 적용한 결과 회원 릴레이션 상품 릴레이션 제조업체 릴레이션 외래키 게시글 릴레이션 외래키 주문 릴레이션
Ÿ STEP 4 : 규칙 4 적용 ­ 일대일 관계가 없으므로 규칙 4는 적용할 필요가 없음
Ÿ STEP 5 : 규칙 5 적용 ­ 다중 값 속성이 없으므로 규칙 5는 적용할 필요가 없음 ­ 19페이지 ‘한빛 마트 요구 사항 명세서의 E
-R 다이어그램’을 릴레이션으로 변환한 결과  회원 릴레이션 상품 릴레이션 제조업체 릴레이션 외래키 게시글 릴레이션 외래키 주문 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 122 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 논리적 설계 
- 테이블 명세서 작성
Ÿ 테이블 명세서 : 릴레이션 스키마에 대한 설계 정보를 기술한 문서 ­ 릴레이션 스키마 변환 후 속성의 데이터 타입, 길이, 널 값 허용 여부, 기본 값, 제약조 건 등을 세부적으로 결정하고 결과를 문서화시킴  « 회원 릴레이션 스키마의 테이블 명세서 MS SQL 서버를 DBMS로 사용하는 경우 테이블 이름 회원 속성이름 데이터 타입 널 허용 여부 기본값 기본키 외래키 제약조건 회원아이디 VARCHAR(20) N PK 비밀번호 VARCHAR(20) N 이름 VARCHAR(10) N 나이 INT Y 0 이상 직업 VARCHAR(20) Y silver, gold, 등급 VARCHAR(10) N silver vip만 허용 적립금 INT N 0 ▶ 논리적 설계  « 데이터베이스 설계 : 논리적 설계 단계  ⋅ 데이터베이스의 용도 파악  1단계 요구 사항 분석 ⋅ 결과물 : 요구 사항 명세서 ⋅ DBMS에 독립적인 개념적 구조 설계  2단계 개념적 설계 ⋅ 결과물 : 개념적 스키마(E
-R 다이어그램) 사용할 ⋅ DBMS에 적합한 논리적 구조 설계 3단계 논리적 설계 DBMS의  ⋅ 결과물 : 논리적 스키마(릴레이션 스키마) 특성 고려  4단계 물리적 설계 5단계 구현 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 123 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 정규화의 개념과 이상현상 11주차  수업목표   정규화의 개념과 이상현상을 설명할 수 있다. 1교시  1. 이상현상 세부내용  2. 정규화 ※ 학습목표  정규화 제1정규형 삽입 이상 필요성 제2정규형 갱신 이상 이상 현상 제3정규형 삭제 이상 정규형 보이스/코드 정규형 X → Y 표기법 함수 종속 제4정규형 함수 종속 다이어그램 제5정규형 1. 이상 현상 ▶ 이상 현상

1) 이상(anomaly) 현상 ­ 불필요한  데이터  중복으로  인해  릴레이션에  대한  데이터  삽입·수정·삭제  연산을  수행할  때  발생할 수 있는 부작용
2) 정규화 ­ 이상 현상을 제거하면서 데이터베이스를 올바르게 설계해 나가는 과정 ▶ 이상 현상의 종류 « 이상 현상의 종류 ⋅ 새  데이터를  삽입하기  위해  불필요한  데이터도  삽입 이상 함께 삽입해야 하는 문제 ⋅ 중복  투플  중  일부만  변경하여  데이터가  불일 갱신 이상 치하게 되는 모순의 문제 ⋅ 투플을  삭제하면  꼭  필요한  데이터까지  함께  삭제 이상 삭제되는 데이터 손실의 문제 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 124 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 이상 현상 « 이상 현상 설명을 위한 릴레이션의 예 : 이벤트참여 릴레이션 ▶ 삽입 이상(insertion anomaly) ­ 릴레이션에 새 데이터를 삽입하려면 불필요한 데이터도 함께 삽입해야 하는 문제
Ÿ 삽입 이상이 발생하는 예 ­ 5페이지  ‘이상  현상  설명을  위한  릴레이션의  예’의  이벤트참여  릴레이션은  삽입  이상이  발생함 ⋅ 아직  이벤트에  참여하지  않은  아이디가  “melon”  이고,  이름이  “성원용”,  등급이  “gold”인 신규 고객의 데이터는 이벤트참여 릴레이션에 삽입할 수 없음 ⋅ 삽입하려면 실제로 참여하지 않은 임시 이벤트번호를 삽입해야 함  ▶ 이벤트참여 릴레이션의 삽입 이상 삽입 불가 ▶ 갱신 이상(update anomaly) ­ 릴레이션의 중복된 투플들 중 일부만 수정하여 데이터가 불일치하게 되는 모순이 발생하는  문제
Ÿ 갱신 이상이 발생하는 예 ­ 5페이지  ‘이상  현상  설명을  위한  릴레이션의  예’의  이벤트참여  릴레이션은  갱신  이상이  발생함 ⋅ 아이디가 “apple”인 고객의 등급이 “gold”에서 “vip”로 변경되었는데, 일부 투플에 대 해서만 등급이 수정된다면 “apple” 고객이 서로 다른 등급을 가지는 모순이 발생 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 125 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 이벤트참여 릴레이션의 갱신 이상 데이터 불일치 발생 ▶ 삭제 이상(deletion anomaly) ­ 릴레이션에서 투플을 삭제하면 꼭 필요한 데이터까지 손실되는 연쇄 삭제 현상이 발생하는  문제
Ÿ 삭제 이상이 발생하는 예 ­ 5페이지  ‘이상  현상  설명을  위한  릴레이션의  예’의  이벤트참여  릴레이션은  삭제  이상이  발생함 ⋅ 아이디가 “orange”인 고객이 이벤트 참여를 취소해 관련 투플을 삭제하게 되면 이벤 트 참여와 관련이 없는 고객아이디, 고객이름, 등급 데이터까지 손실됨 ▶ 이벤트참여 릴레이션의 삭제 이상 « 이벤트참여 릴레이션의 삭제 이상 데이터 손실 발생 2. 정규화 ▶ 정규화

1) 정규화 ­ 이상 현상이 발생하지 않도록, 릴레이션을 관련 있는 속성들로만 구성하기 위해 릴레이션을 분해(decomposition)하는 과정 ­ 함수적 종속성을 판단하여 정규화를 수행함
2) 함수적 종속성(ex)D; ex)unctional Dependency) ­ 속성들 간의 관련성 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 126 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 함수  종속성을  이용하여,  릴레이션을  연관성이  있는  속성들로만  구성되도록  분해하여  이상  현상이 발생하지 않는 바람직한 릴레이션으로 만들어 나가는 과정 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 127 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 함수 종속과 기본 정규형 11주차  수업목표   함수 종속과 기본 정규형을 설명할 수 있다. 2교시  1. 함수 종속 세부내용  2. 기본 정규형 1. 함수 종속 ▶ 함수 종속 ­ “X가 Y를 함수적으로 결정한다” ⋅ 릴레이션 내의 모든 투플을 대상으로 하나의 X 값에 대한 Y 값이 항상 하나임 ⋅ X와 Y는 하나의 릴레이션을 구성하는 속성들의 부분 집합 ⋅ “Y가 X에 함수적으로 종속되어 있다”와 같은 의미 ⋅ X → Y로 표현(X는 결정자, Y는 종속자) « 함수 종속성의 표현 결정자 종속자 ⋅ X가 Y를 함수적으로 결정한다. ⋅ Y가 X에 함수적으로 종속되어 있다. ▶ 함수 종속 관계 판단 예 (1) « 함수 종속 관계 설명을 위한 릴레이션의 예 : 고객 릴레이션 각 고객아이디 속성 값에  대응되는 고객이름 속성과  등급 속성 값이 단 하나임 « 고객 릴레이션에 존재하는 함수 종속 관계 고객아이디 → 고객이름 또는 고객아이디 → (고객이름, 등급) 고객아이디 → 등급 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 128 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 함수 종속 다이어그램 : 함수 종속 관계를 도식화하여 표현한 것 « 고객 릴레이션에 존재하는 함수 종속 관계 고객아이디 → 고객이름 또는 고객아이디 → (고객이름, 등급) 고객아이디 → 등급 « 고객 릴레이션의 함수 종속 다이어그램 고객이름 고객아이디 등급 ▶ 함수 종속 관계 판단 시 유의 사항 ­ 속성 자체의 특성과 의미를 기반으로 함수 종속성을 판단해야 함 ⋅ 속성값은 계속 변할 수 있으므로 현재 릴레이션에 포함된 속성값만으로 판단하면 안됨  ­ 일반적으로 기본키와 후보키는 릴레이션의 다른 모든 속성들을 함수적으로 결정함 ­ 기본키나  후보키가  아니어도  다른  속성  값을  유일하게  결정하는  속성은  함수  종속  관계에 서 결정자가 될 수 있음 ▶ 함수 종속 관계 판단 예 (2) « 함수 종속 관계 설명을 위한 릴레이션의 예 : 이벤트참여 릴레이션 « 이벤트참여 릴레이션에 존재하는 함수 종속 관계 고객아이디 → 고객이름 {고객아이디, 이벤트번호} → 당첨여부 {고객아이디, 이벤트번호} → 고객이름 고객이름은  {고객아이디,  이벤트번호}의  일부분인 고객아이디에 종속되어 있음 ⇨ 고객이름은 {고객아이디,이벤트번호}에  부분 함수 종속됨 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 129 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 이벤트참여 릴레이션의 함수 종속 다이어그램 고객이름 고객아이디 당첨여부 이벤트번호   ▶ 함수 종속 
1) 완전 함수 종속(ex)ex)D; ex)ull ex)unctional Dependency) ­ 릴레이션에서  속성  집합  Y가  속성  집합  X에  함수적으로  종속되어  있지만,  속성  집합  X의  전체가 아닌 일부분에는 종속되지 않음을 의미 ­ 일반적으로 함수 종속은 완전 함수 종속을 의미함 예) 당첨여부는 {고객아이디, 이벤트번호}에 완전 함수 종속됨
2) 부분 함수 종속(Pex)D; Partial ex)unctional Dependency) ­ 릴레이션에서 속성 집합 Y가 속성 집합 X의 전체가 아닌 일부분에도 함수적으로 종속됨을  의미 예) 고객이름은 {고객아이디, 이벤트번호}에 부분 함수 종속됨 ▶ 고려할 필요가 없는 함수 종속 관계 ­ 결정자와  종속자가  같거나,  결정자가  종속자를  포함하는  것처럼  당연한  함수  종속  관계는  고려하지 않음 « 고려할 필요가 없는 함수 종속 관계의 예 고객아이디 → 고객아이디 {고객아이디, 이벤트번호} → 이벤트번호 2. 기본 정규형 ▶ 정규화(normalization) ­ 함수 종속성을 이용해 릴레이션을 연관성이 있는 속성들로만 구성되도록 분해해서 이상 현 상이 발생하지 않는 바람직한 릴레이션으로 만들어 가는 과정 ­ 정규화를 통해 릴레이션은 무손실 분해(nonloss decomposition)되어야 함 ⋅ 릴레이션은 의미적으로 동등한 릴레이션들로 분해되어야 하고 분해로 인한 정보의 손실 이 발생하지 않아야 함 ⋅ 분해된 릴레이션들을 자연 조인하면 분해 전의 릴레이션으로 복원 가능해야 함 ▶ 정규형(Nex); Normal ex)orm) ­ 릴레이션이 정규화된 정도 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 130 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 각 정규형마다 제약조건이 존재 ⋅ 정규형의 차수가 높아질수록 요구되는 제약조건이 많아지고 엄격해짐  ­ 릴레이션의 특성을 고려하여 적합한 정규형을 선택 ▶ 기본 정규형 « 정규형의 종류 제1정규형 제2정규형 기본 정규형 제3정규형 보이스/코드 정규형 정규형 제4정규형 고급 정규형 제5정규형 « 정규형들의 관계 비정규형 릴레이션 제1정규형 릴레이션 제2정규형 릴레이션 제3정규형 릴레이션 BCNex)형 릴레이션 제4정규형 릴레이션 제5정규형 릴레이션 ▶ 제 1 정규형(1Nex); ex)irst Normal ex)orm) ­ 릴레이션의 모든 속성이 더는 분해되지 않는 원자 값(atomic value)만 가지면 제 1 정규형 을 만족함 ­ 제 1 정규형을 만족해야 관계 데이터베이스의 릴레이션이 될 자격이 있음 
Ÿ 제 1 정규형(1Nex)) ­ 릴레이션에  속한  모든  속성의  도메인이  원자  값(atomic  value)으로만  구성되어  있으면  제 1정규형에 속함 « 다중값 속성을 포함하는 이벤트참여 릴레이션 제 1 정규형을 만족하지 않는 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 131 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 제 1 정규형에 속하는 이벤트참여 릴레이션 제 1정규형을 만족하는 릴레이션  ▶ 제 1 정규형은 만족하지만 이상 현상이 발생하는 릴레이션 예 « 제 1 정규형에 속하는 이벤트참여 릴레이션 제 1 정규형을 만족하지만 데이터의 중복으로 인한 이상 현상이 발생함 « 이벤트참여 릴레이션에 존재하는 함수 종속 관계 고객아이디 → 등급 고객아이디 → 할인율 등급 → 할인율 {고객아이디, 이벤트번호} → 당첨여부 « 이벤트참여 릴레이션의 함수 종속 다이어그램 등급 고객아이디 당첨여부 할인율 이벤트번호 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 132 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 이벤트참여 릴레이션의 삽입ㆍ갱신ㆍ삭제 이상 이상 현상의 발생 이유는? 기본키에 완전 함수 종속되지 못한 등급과 할인율 때문 데이터 불일치로 인한 갱신 이상 데이터 손실로 인한 삭제 이상 삽입 불가로 인한 삽입 이상
Ÿ 이상 현상의 발생 이유 ­ 기본키인 {고객아이디, 이벤트번호}에 완전 함수 종속되지 못하고 일부분인 고객아이디에  종속되는 등급과 할인율 속성이 존재하기 때문
Ÿ 문제 해결 방법 ­ 부분 함수 종속이 제거되도록 이벤트참여 릴레이션을 분해  ⇨ 분해된 릴레이션은 제 2 정규형에 속하게 됨 ▶ 제 2 정규형(2Nex); Second Normal ex)orm) ­ 릴레이션이 제 1 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속되 면 제 2 정규형을 만족함
Ÿ 제 2 정규형(2Nex)) ­ 릴레이션이 제 1 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속 되면 제 2 정규형에 속함 « 제 1 정규형에 속하는 이벤트참여 릴레이션 제 1 정규형을 만족하지만 제 2 정규형은 만족하지 않는 릴레이션 (기본키에 완전 함수 종속되지 않은 등급과 할인율 속성 때문) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 133 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 제 2 정규형을 만족하도록 분해된 두 개의 릴레이션 분해 전의 이벤트참여 릴레이션 고객 릴레이션과 이벤트참여 릴레이션은  모두 제 2 정규형에 속함 고객 릴레이션 이벤트참여 릴레이션 « 고객 릴레이션과 이벤트참여 릴레이션의 함수 종속 다이어그램 분해 전의 이벤트참여 릴레이션 고객 릴레이션 이벤트참여 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 134 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 이벤트참여 릴레이션의 분해 결과 분해 전의 이벤트참여 릴레이션 고객 릴레이션 이벤트참여 릴레이션 함수 종속성을 여러 개 포함하여 이상 현상이 발생할 수 있음 함수 종속성을 하나만 포함하여 이상 현상이 발생하지 않음 부분 함수 종속 해소  ▶ 제 2 정규형은 만족하지만 이상 현상이 발생하는 릴레이션 예 제 2 정규형을 만족하지만 이상 현상이 발생함 고객 릴레이션 « 고객 릴레이션의 삽입ㆍ갱신ㆍ삭제 이상 이상 현상의 발생 이유는? 이행적 함수 종속이 존재하기 때문 데이터 불일치로 인한 갱신 이상 데이터 손실로 인한 삭제 이상 삽입 불가로 인한 삽입 이상
Ÿ 이상 현상 발생 이유 ­ 이행적 함수 종속이 존재하기 때문
Ÿ 문제 해결 방법 ­ 이행적 함수 종속이 제거되도록 고객 릴레이션을 분해  ⇨ 분해된 릴레이션은 제 3 정규형에 속하게 됨 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 135 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 정규화 과정 11주차  수업목표   이행적 함수종속과 정규화 과정을 설명할 수 있다. 3교시  1. 이행적 함수종속 세부내용  2. 정규화 과정 1. 이행적 함수종속 ▶ 이행적 함수 종속(transitive ex)D) ­ 릴레이션을  구성하는  세  개의  속성  집합  X,  Y,  Z에  대해  함수  종속  관계  X→Y와  Y→Z가  존재하면  논리적으로  X→Z가  성립되는데,  이것을  Z가  X에  이행적으로  함수  종속되었다고  함  « 이행적 함수 종속 X Y 이행적 함수 종속 Z 2. 정규화 과정 ▶ 제 3 정규형(3Nex); Third Normal ex)orm) ­ 릴레이션이 제 2 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 이행적 함수 종속 되지 않으면 제 3 정규형을 만족함
Ÿ 제 3 정규형(3Nex)) ­ 릴레이션이 제 2 정규형에 속하고, 기본키가 아닌 모든 속성이 기본키에 이행적 함수 종 속되지 않으면 제 3 정규형에 속함 제 2 정규형을 만족하지만 제 3 정규형은 만족하지 않는 릴레이션 (고객아이디가 등급을 통해 할인율을 결정하는 이행적 함수 종속  관계가 존재하기 때문) 고객 릴레이션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 136 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 제 3 정규형을 만족하도록 분해된 두 개의 릴레이션 분해 전의 고객 릴레이션 고객 릴레이션과 고객등급 릴레이션은  모두 제 3 정규형에 속함 고객 릴레이션 고객등급 릴레이션 « 고객 릴레이션과 고객등급 릴레이션의 함수 종속 다이어그램 고객 릴레이션 고객 릴레이션 고객등급 릴레이션 ▶ 보이스/코드 정규형(BCNex); Boyce/Codd Normal ex)orm)

1) 필요성 ­ 하나의 릴레이션에 여러 개의 후보키가 존재하는 경우, 제 3 정규형까지 모두 만족해도 이 상 현상이 발생할 수 있음
2) 의미 ­ 강한 제 3 정규형(strong 3Nex)) ⋅ 후보키를 여러 개 가지고 있는 릴레이션에 발생할 수 있는 이상 현상을 해결하기 위해  제 3 정규형보다 좀 더 엄격한 제약조건을 제시 ⋅ 보이스/코드  정규형에  속하는  모든  릴레이션은  제  3  정규형에  속하지만,  제  3  정규형 에 속하는 모든 릴레이션이 보이스/코드 정규형에 속하는 것은 아님
Ÿ 보이스/코드 정규형(BCNex))  ­ 릴레이션의 함수 종속 관계에서 모든 결정자가 후보키이면 보이스/코드 정규형에 속함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 137 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 보이스/코드 정규형을 만족하지 않는 릴레이션 예 « 보이스/코드 정규형 설명을 위한 릴레이션의 예 : 강좌신청 릴레이션 제 3 정규형을 만족하지만 보이스/코드 정규형은 만족하지 않는 릴레이션 (함수 종속 관계에서 모든 결정자가 후보키가 아니기 때문) [강좌신청 릴레이션의 후보키] {고객아이디, 인터넷강좌} : 기본키 {고객아아디, 담당강사번호} « 강좌신청 릴레이션의 함수 종속 다이어그램 고객아이디 담당강사번호 인터넷강좌 « 강좌신청 릴레이션의 삽입ㆍ갱신ㆍ삭제 이상 이상 현상의 발생 이유는?  담당강사번호가 후보키가 아님에도 인터넷강좌 속성을 결정하기 때문  데이터 손실로 인한 삭제 이상 데이터 불일치로 인한 갱신 이상 삽입 불가로 인한 삽입 이상 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 138 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 보이스/코드 정규형(BCNex); Boyce/Codd Normal ex)orm) « BCNex)를 만족하도록 분해된 두 개의 릴레이션 강좌신청 릴레이션 고객담당강사 릴레이션과  강좌담당 릴레이션은 모두  BCNex)에속함 고객담당강사 릴레이션 강좌담당 릴레이션 « 고객담당강사 릴레이션과 강좌담당 릴레이션의 함수 종속 다이어그램 강좌신청 릴레이션 고객담당강사 릴레이션 강좌담당 릴레이션 ▶ 정규화 과정

1) 제 4 정규형 ­ 릴레이션이  보이스/코드  정규형을  만족하면서,  함수  종속이  아닌  다치  종속(MVD;  MultiValued Dependency)를 제거하면 제 4 정규형에 속함
2) 제 5 정규형 ­ 릴레이션이  제  4  정규형을  만족하면서,  후보키를  통하지  않는  조인  종속(JD;  Join  Dependency)을 제거하면 제 5 정규형에 속함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 139 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
3) 정규화 시 주의 사항 ­ 모든 릴레이션이 제 5 정규형에 속해야만 바람직한 것은 아님 ­ 일반적으로  제  3  정규형이나  보이스/코드  정규형에  속하도록  릴레이션을  분해하여  데이터  중복을 줄이고 이상 현상을 해결하는 경우가 많음 비정규형 릴레이션 속성의 도메인이 원자 값으로만 구성되도록 분해 제 1정규형 릴레이션 (모든 속성의 도메인이 원자 값으로만 구성)  부분 함수 종속 제거 제 2정규형 릴레이션 (모든 속성이 기본키에 완전 함수 종속)  이행적 함수 종속 제거 제 3정규형 릴레이션 (모든 속성이 기본키에 이행적 함수 종속이 아님)  후보키가 아닌 결정자 제거 보이스/코드 정규형 릴레이션 (모든 결정자가 후보키)  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 140 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 트랜잭션 12주차  수업목표   트랜잭션의 개념과 특성을 설명할 수 있다. 1교시  1. 트랜잭션의 개념 세부내용  2. 트랜잭션의 특성 ※ 학습목표 필요성 기법 2단계 로깅 규약 목표 트랜잭션 병행 수행 병행 수행의 문제점 redo 재실행  갱신 분실 모순성  연쇄 복귀 연산 undo 취소  즉시 갱신 회복 로그 회복 기법 지연 갱신 회복 병행 제어 회복 기법 검사 시점 회복 기법 원자성  미디어 회복 기법 commit 일관성  작업 단위 연산 특징 rollback 격리성  지속성  트랜잭션 활동 부분완료 직렬 스케줄  상태 완료 비직렬 스케줄  스케줄 실패 직렬 가능 스케줄  철회 1. 트랜잭션의 개념 ▶ 트랜잭션(transaction)의 개념 ­ 하나의 작업을 수행하기 위해 필요한 데이터베이스 연산들을 모아놓은 것 ­ 작업 수행에 필요한 SQL 문들의 모임 ⋅ 특히, 데이터베이스를 변경하는 INSERT, DELETE, UPDATE 문의 실행을 관리 ­ 논리적인 작업의 단위 ­ 장애 발생 시 복구 작업이나 병행 제어 작업을 위한 중요한 단위로 사용됨 ­ 데이터베이스의 무결성과 일관성을 보장하기 위해 작업 수행에 필요한 연산들을 하나의 트 랜잭션으로 제대로 정의하고 관리해야 함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 141 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 트랜잭션의 예 (1) « 트랜잭션의 예 1 : 계좌이체 트랜잭션 처리 순서는 중요하지 않지만 계좌이체 트랜잭션  두 개의 UPDATE 문이 모두 정상적으로 실행되어야 함  계좌이체 전의 계좌이체 후의 데이터베이스 상태 데이터베이스 상태 INSERT 문과  ▶ 트랜잭션의 예 (2) UPDATE 문이  « 트랜잭션의 예 2 : 상품주문 트랜잭션 모두 정상적으로 실행되어야 상품주문 트랜잭션 상품주문 트랜잭션이 성공적으로 수행됨 상품주문 전의 상품주문 후의 데이터베이스 상태 데이터베이스 상태 2. 트랜잭션의 특성 ▶ 트랜잭션의 특성(ACID 특성) « 트랜잭션의 특성 트랜잭션의 특성 원자성 일관성 격리성 지속성 ▶ 트랜잭션의 특성 ­ 원자성(atomicity) ­ 트랜잭션의  연산들이  모두  정상적으로  실행되거나  하나도  실행되지  않아야  하는  all
-or
-nothing 방식을 의미
Ÿ 만약 트랜잭션 수행 도중 장애가 발생한다면? 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 142 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 지금까지 실행한 연산들 모두 처리를 취소하고 데이터베이스를 트랜잭션 작업 전 상태로  되돌려야 함 ­ 원자성 보장을 위해 장애 발생 시 회복 기능이 필요 ▶ 트랜잭션의 특성 ­ 원자성 « 트랜잭션의 수행 성공 예 계좌이체 트랜잭션 모두 실행 계좌이체 전의 계좌이체 후의 데이터베이스 상태 데이터베이스 상태 « 트랜잭션의 수행 실패 예 계좌이체 트랜잭션 장애 발생 계좌이체 전 데이터베이스 상태 작업취소 ▶ 트랜잭션의 특성 ­ 일관성(consistency) ­ 트랜잭션이  성공적으로  수행된  후에도  데이터베이스가  일관성  있는  상태를  유지해야  함을  의미 « 트랜잭션의 일관성을 만족하는 예 계좌이체 전의 계좌이체 후의 데이터베이스 상태 데이터베이스 상태 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 143 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 트랜잭션의 일관성을 만족하지 않는 예 계좌이체 전의 계좌이체 후의 데이터베이스 상태 데이터베이스 상태 ▶ 트랜잭션의 특성 ­ 격리성(isolation) ­ 수행 중인 트랜잭션이 완료될 때까지 다른 트랜잭션들이 중간 연산 결과에 접근할 수 없음 을 의미 ­ 여러 트랜잭션이 동시에 수행되더라도 마치 순서대로 하나씩 수행되는 것처럼 정확하고 일 관된 결과를 얻을 수 있도록 제어하는 기능이 필요 « 트랜잭션의 격리성이 만족되지 않는 예 계좌이체 트랜잭션 계좌입금 트랜잭션 모든 트랜잭션이 완료된 후  은경이 계좌의 잔액은 얼마일까? 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 144 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 트랜잭션의 격리성이 만족되는 경우의 예 ▶ 트랜잭션의 특성 ­ 지속성(durability) ­ 트랜잭션이  성공적으로  완료된  후  데이터베이스에  반영한  수행  결과는  영구적이어야  함을  의미 ­ 지속성의 보장을 위해서는 장애 발생 시 회복 기능이 필요  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 145 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 트랜잭션과 장애와 회복 12주차  수업목표   트랜잭션의 기능과 데이터베이스 장애에 대해 설명할 수 있다. 2교시  1. 트랜잭션의 기능 세부내용  2. 데이터베이스 장애 1. 트랜잭션의 기능 ▶ 트랜잭션의 4가지 특성을 보장하기 위해 필요한 기능 « 트랜잭션의 특성과 DBMS의 기능 트랜잭션의 특성 DBMS의 기능 원자성 회복 기능 일관성 병행 제어 기능 격리성 병행 제어 기능 지속성 회복 기능 ▶ 트랜잭션의 주요 연산 « 트랜잭션의 연산 commit 연산 트랜잭션이 성공적으로 수행되었음을 선언(작업 완료) 트랜잭션의 연산 rollback 연산 트랜잭션이 수행을 실패했음을 선언(작업 취소) ▶ 트랜잭션의 주요 연산 ­ commit 연산 ­ 트랜잭션의 수행이 성공적으로 완료되었음을 선언하는 연산 ­ commit 연산이 실행되면 트랜잭션의 수행 결과가 데이터베이스에 반영되고 일관된 상태를  지속적으로 유지하게 됨  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 146 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « commit 연산을 실행한 예 계좌이체 트랜잭션 트랜잭션 수행 전의 트랜잭션 수행 후의 데이터베이스 상태 데이터베이스 상태 ▶ 트랜잭션의 주요 연산 ­ rollback 연산 ­ 트랜잭션의 수행이 실패했음을 선언하는 연산 ­ rollback 연산이 실행되면 지금까지 트랜잭션이 실행한 연산의 결과가 취소되고 데이터베이 스가 트랜잭션 수행 전의 일관된 상태로 되돌아감 « rollback 연산을 수행한 예 계좌이체 트랜잭션 장애 트랜잭션 수행 전의 발생 데이터베이스 상태 지금까지 실행한 연산 결과를 취소하고  트랜잭션 수행 전의 데이터베이스 상태로 되돌림 ▶ 트랜잭션의 상태 « 트랜잭션의 다섯 가지 상태 트랜잭션 수행 시작 활동 부분 완료 실패 commit 연산 rollback 연산 완료 철회 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 147 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

1) 활동(active) 상태 ­ 트랜잭션이 수행을 시작하여 현재 수행 중인 상태
2) 부분 완료(partially committed) 상태 ­ 트랜잭션의 마지막 연산이 실행을 끝낸 직후의 상태
3) 완료(committed) 상태 ­ 트랜잭션이 성공적으로 완료되어 commit 연산을 실행한 상태 ­ 트랜잭션이  수행한  최종  결과를  데이터베이스에  반영하고  데이터베이스가  새로운  일관된  상태가 되면서 트랜잭션이 종료됨
4) 실패(failed) 상태 ­ 장애가 발생하여 트랜잭션의 수행이 중단된 상태
5) 철회(aborted) 상태 ­ 트랜잭션의 수행 실패로 rollback 연산을 실행한 상태 ­ 지금까지  실행한  트랜잭션의  연산을  모두  취소하고  트랜잭션이  수행되기  전의  데이터베이 스 상태로 되돌리면서 트랜잭션이 종료됨 ­ 철회 상태로 종료된 트랜잭션은 상황에 따라 다시 수행되거나 폐기됨 2. 데이터베이스 장애 ▶ 장애(failure) ­ 시스템이 제대로 동작하지 않는 상태 « 장애의 유형 연산자 설명 트랜잭션  수행  중  오류가  발생하여  정상적으로  수행을  계속할  의미 트랜잭션 수 없는 상태  장애 트랜잭션의  논리적  오류,  잘못된  데이터  입력,  시스템  자원의  원인  과다 사용 요구, 처리 대상 데이터의 부재 등 의미 하드웨어의 결함으로 정상적으로 수행을 계속할 수 없는 상태 시스템 하드웨어  이상으로  메인  메모리에  저장된  정보가  손실되거나  장애 원인 교착 상태가 발생한 경우 등 디스크 장치의 결함으로 디스크에 저장된 데이터베이스의 일부  미디어 의미 혹은 전체가 손상된 상태 장애 원인  디스크 헤드의 손상이나 고장 등 ▶ 데이터베이스를 저장하는 저장 장치의 종류 « 저장 장치의 종류 저장장치 설명 휘발성 의미 장애가 발생하면 저장된 데이터가 손실됨 (volatile)  저장 장치 예 메인 메모리 등 (소멸성) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 148 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 비휘발성 장애가 발생해도 저장된 데이터가 손실되지 않음 (nonvolatile) 의미 단,  디스크  헤더  손상같은  저장장치  자체에  이상이  발생하 저장 장치 면 데이터가 손실될 수 있음 (비소멸성) 예 디스크, 자기 테이프, CD/DVD 등 비휘발성  저장  장치를  이용해  여러  개  복사본을  만드는  방 안정(stable) 의미 법으로,  어떤  장애가  발생해도  데이터가  손실되지  않고  데 저장 장치 이터를 영구적으로 저장할 수 있음 ▶ 트랜잭션의 수행을 위해 필요한 데이터 이동 연산
Ÿ 디스크와 메인 메인 메모리 간의 데이터 이동 연산 ­ input / output
Ÿ 메인 메모리와 프로그램 변수 간의 데이터 이동 연산 ­ read / write « 응용 프로그램이 실행한 트랜잭션의 수행을 위해 필요한 데이터 이동 연산  read(A) input(A) 변수 write(B) output(B) 응용 프로그램 메인 메모리 디스크 ▶ 디스크와 메인 메모리 간의 데이터 이동 연산의 필요성 ­ 일반적으로 데이터베이스는 비휘발성 저장 장치인 디스크에 상주 ­ 트랜잭션이  데이터베이스의 데이터를  처리하기  위해서는  데이터를  디스크에서  메인  메모리 로 가져와 처리한 다음 그 결과를 디스크로 보내는 작업이 필요함 « 디스크와 메인 메모리 간의 데이터 이동 연산 input(A) 메모리 디스크 블록 output(B) 메인 메모리 디스크 ▶ 디스크와 메인 메모리 간의 데이터 이동 연산 ­ input 연산 / output 연산 ­ 블록(block) 단위로 수행됨
Ÿ 디스크 블록 : 디스크에 있는 블록
Ÿ 버퍼 블록 : 메인 메모리에 있는 블록 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 149 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 디스크와 메인 메모리 간의 데이터 이동 연산 ⋅ 디스크  블록에  저장되어  있는  데이터  X를  input(X) 메인 메모리 버퍼 블록으로 이동시키는 연산 ⋅ 메인  메모리  버퍼  블록에  있는  데이터  X를  output(X) 디스크 블록으로 이동시키는 연산 ▶ 메인 메모리와 변수 간의 데이터 이동 연산 ­ read 연산 / write 연산 ­ 응용  프로그램에서  트랜잭션의  수행을  지시하면  메인  메모리  버퍼  블록에  있는  데이터를  프로그램의  변수로  가져오고  데이터를  처리한  결과를  저장하고  있는  변수  값을  메인  메모 리 버퍼 블록으로 옮기는 작업이 필요 « 메인 메모리와 버퍼 블록과 프로그램 변수 간의 데이터 이동 연산 ⋅ 메인  메모리  버퍼  블록에  저장되어  있는  데 read(X) 이터 X를 프로그램의 변수로 읽어오는 연산 ⋅ 프로그램의  변수  값을  메인  메모리  버퍼  write(X) 블록에 있는 데이터 X에 기록하는 연산 ▶ 트랜잭션을 데이터 이동 연산을 포함한 프로그램으로 표현한 예 « 데이터 이동 연산을 포함한 계좌이체 트랜잭션 표현의 예 계좌이체 트랜잭션 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 150 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 장애와 회복 12주차  수업목표   데이터베이스 회복의 개념과 기법을 설명할 수 있다. 3교시  세부내용  1. 데이터베이스 회복 1. 데이터베이스 회복 ▶ 회복(recovery) ­ 장애가 발생했을 때 데이터베이스를 장애가 발생하기 전의 일관된 상태로 복구시키는 것 ­ 트랜잭션의 특성을 보장하고, 데이터베이스를 일관된 상태로 유지하기 위해 필수적인 기능 ­ 회복 관리자(recovery manager)가 담당 ⋅ 장애 발생을 탐지하고, 장애가 탐지되면 데이터베이스를 복구하는 기능을 제공 ▶ 회복을 위해 데이터베이스 복사본을 만드는 방법 ­ 데이터베이스 핵심 원리는 데이터 중복 « 회복을 위해 복사본을 만드는 방법 덤프 ⋅ 데이터베이스  전체를  다른  저장  장치에  (dump) 주기적으로 복사하는 방법 ⋅ 데이터베이스에서  변경  연산이  실행될  때마다  로그 데이터를 변경하기 이전 값과 변경한 이후의 값 (log) 을 별도의 파일에 기록하는 방법  ▶ 로그를 이용한 회복 연산 « 회복 연산 ⋅ 가장  최근에  저장한  데이터베이스  복사본을  가져온  후  로그를  이용해  복사본이  만들어진  redo 이후에  실행된  모든  변경  연산을  재실행하여  (재실행) 장애가 발생하기 직전의  데이터베이스 상태로  복구(전반적으로 손상된 경우에 주로 사용) ⋅ 로그를 이용해 지금까지 실행된 모든 변경 연 undo 산을 취소하여  데이터베이스를  원래의 상태로  (취소) 복구(변경 중이었거나 이미 변경된 내용만  신 뢰성을 잃은 경우에 주로 사용) ▶ 로그 파일 ­ 데이터를 변경하기 이전의 값과 변경한 이후의 값을 기록한 파일 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 151 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 레코드 단위로 트랜잭션 수행과 함께 기록됨 « 로그 레코드의 종류 로그 레코드 설명 의미 트랜잭션 T 가 수행을 시작했음을 기록 <T , start> i i 예 <T , start>  트랜잭션  T 가 데이터 X를 이전 값(old＿value)에서  <T , X, i i 의미 새로운 값(new＿value)으로 변경하는 연산을 실행했 old＿value, 음을 기록 new＿value> 예 <T , X, 10000, 5000>  의미 트랜잭션 T 가 성공적으로 완료되었음을 기록 <T , commit> i i 예 <T , commit>  의미 트랜잭션 T 가 철회되었음을 기록 <T , abort> i i 예 <T , abort>  ▶ 로그 기록 예 « 계좌이체 트랜잭션이 수행되면서 기록된 로그 예 계좌이체 트랜잭션 : T  로그 파일에 기록된 로그 레코드 ▶ 회복 기법 « 데이터베이스 회복 기법의 분류 데이터베이스 회복 기법 로그 회복 기법 검사 시점 회복 기법 미디어 회복 기법 즉시 갱신 회복 기법 지연 갱신 회복 기법 ▶ 로그 회복 기법 ­ 즉시 갱신(immediate update) 회복 기법 ­ 트랜잭션 수행 중에 데이터 변경 연산의 결과를 데이터베이스에 즉시 반영 ­ 장애 발생에 대비하기 위해 데이터 변경에 관한 내용을 로그 파일에 기록 ⋅ 데이터 변경 연산이 실행되면 로그 파일에 로그 레코드를 먼저 기록한 다음 데이터베이 스에 변경 연산을 반영 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 152 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 장애 발생 시점에 따라 redo나 undo 연산을 실행해 데이터베이스를 복구 ▶ 로그 회복 기법 ­ 즉시 갱신 회복 기법 « 계좌이체 트랜잭션 수행 중 로그 작성 및 데이터베이스 반영 순서 계좌이체 트랜잭션 : T  로그 파일에 기록된 로그레코드 데이터베이스 트랜잭션이 수행되기 전 원래의 계좌 잔액 첫 번째 변경 연산을 실행한 후의 x계좌 잔액 두 번째 변경 연산을 실행한 후의 y계좌 잔액 « 즉시 갱신 회복 기법의 데이터베이스 회복 전략 트랜잭션이 완료되기 전 장애가 발생한 경우 로그 파일에 <T , start> 로그 레코드는 존재하지만 i undo 연산 <T , commit> 로그 레코드는 존재하지 않는 상태 i 트랜잭션이 완료된 후 장애가 발생한 경우 로그 파일에 <T , start> 로그 레코드와  i redo 연산 <T , commit> 로그 레코드가 모두 존재하는 상태 i 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 153 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 로그 회복 기법 ­ 즉시 갱신 회복 기법 적용 예 « 순차적으로 수행되는 두 트랜잭션의 예 계좌이체 트랜잭션 : T  계좌이체 트랜잭션 : T  « 순차적으로 수행되는 두 트랜잭션의 로그 파일 내용과 데이터베이스 반영 결과 로그 파일에 기록된 로그 레코드 데이터베이스
①에서 장애 발생 시 : undo(T ) 
②에서 장애 발생 시 : undo(T ), redo(T )   ▶ 로그 회복 기법 ­ 지연 갱신(deferred update) 회복 기법 ­ 트랜잭션 수행 중에 데이터 변경 연산의 결과를 로그에만 기록해두고, 트랜잭션이 부분 완 료된 후에 로그에 기록된 내용을 이용해 데이터베이스에 한번에 반영 ­ 트랜잭션 수행 중에 장애가 발생하면 로그에 기록된 내용을 버리기만 하면 데이터베이스가  원래 상태를 그대로 유지하게 됨 ⋅ undo 연산은 필요없고 redo 연산만 사용 ⋅ 로그 레코드에는 변경 이후 값만 기록하면 됨 : <T , X, new＿value> 형식  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 154 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 로그 회복 기법 ­ 지연 갱신 회복 기법 « 지연 갱신 회복 기법의 데이터베이스 회복 전략 트랜잭션이 완료되기 전에 장애가 발생한 경우  로그 내용을 로그 파일에 <T , start> 로그 레코드만 존재하고 i 무시하고 <T i , commit> 로그 레코드는 존재하지 않는 상태 버림 트랜잭션이 완료된 후에 장애가 발생한 경우 로그 파일에 <T , start> 로그 레코드와 redo 연산 i 실행 <T , commit> 로그 레코드가 모두 존재하는 상태 i ▶ 로그 회복 기법 ­ 지연 갱신 회복 기법 적용 예 « 순차적으로 수행되는 두 트랜잭션의 로그 파일 내용과 데이터베이스 반영 결과 로그 파일에 기록된 로그 레코드 데이터베이스
①에서 장애 발생 시 : 로그 기록을  무시하고 별다른 회복  조치를 하지 않음
②에서 장애 발생 시 : redo(T )  ▶ 검사 시점 회복 기법 ­ 로그 기록을 이용하되, 일정 시간 간격으로 검사 시점(checkpoint)를 만듦 ⋅ 검사 시점이 되면 모든 로그 레코드를 로그 파일에 기록하고 데이터 변경 내용을 데이 터베이스에 반영한 후 검사 시점을 표시하는 <checkpoint  L> 로그 레코드를 로그 파 일에 기록함 ­ <checkpoint  L>에서 L은 현재 실행되고 있는 트랜잭션의 리스트 ­ 장애 발생 시 가장 최근 검사 시점 이후의 트랜잭션에만 회복 작업 수행 ⋅ 가장 최근의 <checkpoint  L> 로그 레코드 이후 기록에 대해서만 회복 작업 수행 ­ 회복 작업은 즉시 갱신 회복 기법이나 지연 갱신 회복  기법을 이용해 수행 ­ 로그 전체를 대상으로 회복 기법을 적용할 때 발생할 수 있는 비효율성의 문제를 해결 ⋅ 검사 시점으로 작업 범위가 정해지므로 불필요한 회복 작업이 없어 시간이 단축됨 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 155 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 미디어 회복 기법 ­ 디스크에 발생할 수 있는 장애에 대비한 회복 기법 ­ 덤프(복사본) 이용 ⋅ 전체 데이터베이스의 내용을 일정 주기마다 다른 안전한 저장 장치에 복사 ­ 디스크  장애가  발생하면  가장  최근에  복사해둔  덤프를  이용해  장애  발생  이전의  데이터베 이스 상태로 복구하고 필요에 따라 redo 연산을 수행 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 156 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 병행수행과 병행제어 1. 병행수행과 병행제어에 대해 설명할 수 있다. 13주차  수업목표   2. 병행수행 시 발생할 수 있는 문제점에 대해 설명할 수 있다. 1교시  1. 병행수행과 병행제어 세부내용  2. 병행수행 시 발생할 수 있는 문제점 1. 병행 수행과 병행 제어 ▶ 병행 수행과 병행 제어

1) 데이터베이스 시스템의 주요 목표 
Ÿ 공용성(sharability) ­ 여러 사용자가 데이터베이스를 이용 가능 ­ 단일 사용자 DBMS vs 복수 사용자 DBMS(병행 데이터베이스)
Ÿ 정확성(accuracy) ­ 공용된 데이터베이스를 정확히 유지

2) 동시 공용(Concurrent Sharing)의 이점 ­ 공용도(sharability)의 증가 ­ 응답 시간(response time)의 단축 ­ 시스템 활용도(system utilization) 증대
3) 복수 사용자 시스템  ­ 병행 접근 ­ 다중 프로그래밍(multiprogramming) ⋅ 인터리브된(interleaved) 실행 : 하나의 CPU 사용 ⋅ 동시적 병렬 처리(parallel processing) : 복수의 CPU 사용
4) 병행 수행(concurrency) ­ 여러  사용자가  데이터베이스를  동시  공유할  수  있도록  여러  개의  트랜잭션을  동시에  수행 하는 것을 의미 ­ 여러 트랜잭션들이 차례로 번갈아 수행되는 인터리빙(interleaving) 방식으로 진행됨
5) 병행 제어(concurrency control) 또는 동시성 제어 ­ 병행 수행 시 같은 데이터에 접근하여 연산을 실행해도 문제가 발생하지 않고 정확한 수행  결과를 얻을 수 있도록 트랜잭션의 수행을 제어하는 것을 의미
Ÿ 트랜잭션이  동시에 수행될  때,  일관성을 해치지  않도록  트랜잭션의  데이터 접근을  제어하 는 DBMS의 기능을 동시성 제어(concurrency control)라고 함 « 트랜잭션의 읽기(read)/쓰기(write) 시나리오 트랜잭션1 트랜잭션2 발생문제 동시접근 읽음(읽기만 하면  [상황1] 읽기  읽기  허용 아무 문제가 없음)  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 157 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 오손 읽기,  허용 혹은 불가  [상황2] 읽기 쓰기 반복불가능 읽기, 선택 유령데이터 읽기 갱신손실(절대  허용불가 [상황3] 쓰기 쓰기 허용하면 안 됨) (LOCK을 사용) 2. 병행 수행 시 발생할 수 있는 문제점 ▶ 병행 수행의 문제점

1) 병행 수행(concurrency)의 정의 ­ 몇 개의 트랜잭션들을 동시에 수행시키는 것 ­ 처리의 시작과 종료가 서로 중복
2) 병행 수행이 제어되지 않을 때의 문제점
① 갱신 분실(lost update)
② 모순성(inconsistency)
③ 연쇄 복귀(cascading rollback) ▶ 병행 수행 시 발생할 수 있는 문제점

1) 갱신 분실(lost update) ­ 하나의  트랜잭션이  수행한  데이터  변경  연산의  결과를  다른  트랜잭션이  덮어써  변경  연산 이 무효화되는 것 ­ 여러 트랜잭션이 동시에 수행되더라도 갱신 분실 문제가 발생하지 않고 마치 트랜잭션들을  순차적으로 수행한 것과 같은 결과 값을 얻을 수 있어야 함 « 두 트랜잭션의 병행 수행으로 발생한 갱신 분실의 예  트랜잭션 T 에 대해 갱신 분실이 발생함  (T 의 변경 연산 결과가 데이터베이스에 반영되지 않음)  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 158 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 트랜잭션 T 을 수행한 후 트랜잭션 T 를 수행한 결과    트랜잭션을 순차적으로 수행함으로써  갱신 분실 문제가 발생하지 않는 경우 ­ 갱신손실  문제를  해결하려면  상대방  트랜잭션이  데이터를  사용하는지  여부를  알  수  있는  규칙이 필요함 ­ 즉  자신이  데이터를  수정  중이라는  사실을  알리면  됨.  알리는  방법으로  락(lock)이라는  잠 금장치를 사용함
2) 모순성(inconsistency) ­ 하나의 트랜잭션이 여러 개 데이터 변경 연산을 실행할 때 일관성 없는 상태의 데이터베이 스에서 데이터를 가져와 연산함으로써 모순된 결과가 발생하는 것 ­ 여러 트랜잭션이 동시에 수행되더라도 모순성 문제가 발생하지 않고 마치 트랜잭션들을 순 차적으로 수행한 것과 같은 결과 값을 얻을 수 있어야 함 « 두 트랜잭션의 병행 수행으로 발생한 모순성의 예  트랜잭션 T 이 데이터 X와 Y를 서로 다른 상태의   데이터베이스에서 가져와 연산을 실행하는 모순이 발생 X값은 트랜잭션 T 이 수행되기 전   상태의 데이터베이스에서 가져왔지만,  Y값은 트랜잭션 T 에 의해 예상치   못하게 변경된 후에 가져옴 → 모순 발생 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 159 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 트랜잭션 T 을 수행한 후 트랜잭션 T 를 수행한 결과     트랜잭션을 순차적으로 수행함으로써  모순성 문제가 발생하지 않는 경우 트랜잭션 수행 전의 일관된 상태  T 수행이  완료된  후의   일관된 상태 T 수행이  완료된  후의   일관된 상태 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 160 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 병행제어와 트랜잭션 스케줄(1) 13주차  수업목표   병행제어와 트랜잭션 스케줄을 설명할 수 있다. 2교시  1. 병행수행 시 발생할 수 있는 문제점 세부내용  2. 트랜잭션 스케줄 1. 병행 수행 시 발생할 수 있는 문제점 ▶ 병행 수행 시 발생할 수 있는 문제점
1) 연쇄 복귀(cascading rollback) ­ 트랜잭션이  완료되기  전  장애가  발생하여  rollback  연산을  수행하게  되면  장애  발생  전에  이  트랜잭션이  변경한  데이터를  가져가서  변경  연산을  실행한 다른  트랜잭션에도 rollback  연산을 연쇄적으로 실행해야 한다는 것 ­ 여러 트랜잭션이 동시에 수행되더라도 연쇄 복귀 문제가 발생하지 않고 마치 트랜잭션들을  순차적으로 수행한 것과 같은 결과 값을 얻을 수 있어야 함 « 두 트랜잭션의 병행 수행으로 발생한 연쇄 복귀 트랜잭션 T 이 변경한 데이터 X를 가져가 연산을 수행한 트랜잭션 T 도    rollback 연산이 연쇄적으로 실행되어야 하지만 이미 완료된 상태라  rollback 연산을 실행할 수 없는 문제가 발생 트랜잭션 T 이 rollback되면 트랜잭션 T 도 rollback되어야 하는데    T 가 이미 완료된 트랜잭션이라 rollback울 할 수 없음  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 161 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 트랜잭션 T 을 수행한 후 트랜잭션 T 를 수행한 결과   트랜잭션을 순차적으로 수행함으로써 연쇄 복귀 문제가 발생하지 않는 경우 2. 트랜잭션 스케줄 ▶ 트랜잭션 스케줄 ­ 트랜잭션에 포함되어 있는 연산들을 수행하는 순서 « 트랜잭션 스케줄의 유형 트랜잭션 스케줄 의미 인터리빙  방식을  이용하지  않고  각  트랜잭션별로  직렬 스케줄  연산들을 순차적으로 실행시키는 것 인터리빙 방식을 이용하여 트랜잭션들을 병행해서  비직렬 스케줄  수행시키는 것 직렬 스케줄과 같이 정확한 결과를 생성하는 비직 직렬 가능 스케줄 렬 스케줄 ▶ 직렬 스케줄(serial schedule)
Ÿ 의미  ­ 인터리빙 방식을 이용하지 않고 각 트랜잭션별로 연산들을 순차적으로 실행시키는 것
Ÿ 특징  ­ 직렬 스케줄에 따라 트랜잭션을 수행하면 다른 트랜잭션의 방해를 받지 않고 독립적으로  수행되므로 항상 모순이 없는 정확한 결과를 얻게 됨 ­ 다양한  직렬  스케줄이  만들어질  수  있고,  직렬  스케줄마다  데이터베이스에  반영되는  최 종 결과가 다를 수 있지만 직렬 스케줄의 결과는 모두 정확함 ­ 각 트랜잭션을 독립적으로 수행하기 때문에 병행 수행으로 볼 수 없음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 162 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 직렬 스케줄 예 « 트랜잭션  T 을  수행한  후에  트랜잭션  T 를  수행하는  직렬  스케줄의  예  :  T 수행  →  T     수행 트랜잭션 T , T  를 대상으로 하는 첫 번째 직렬 스케줄   트랜잭션 수행 전 T  수행이 완료된 후  T  수행이 완료된 후  « 트랜잭션  T 을  수행한  후에  트랜잭션  T 를  수행하는  직렬  스케줄의  예  :  T 수행  →  T     수행 트랜잭션 T , T  를 대상으로 하는 두 번째 직렬 스케줄   트랜잭션 수행 전 T  수행이 완료된 후  T  수행이 완료된 후  ▶ 비직렬 스케줄(nonserial schedule)
Ÿ 의미  ­ 인터리빙 방식을 이용하여 트랜잭션을 병행 수행하는 것
Ÿ 특징  ­ 트랜잭션이 번갈아 연산을 실행하기 때문에 하나의 트랜잭션이 완료되기 전에 다른 트랜 잭션의 연산이 실행될 수 있음 ­ 비직렬 스케줄에 따라 병행 수행하면 갱신 분실, 모순성, 연쇄 복귀 등의 문제가 발생할  수 있어 결과의 정확성을 보장할 수 없음 ­ 다양한 비직렬 스케줄이 만들어질 수 있고 그 중에는 잘못된 결과를 생성하는 것도 있음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 163 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 비직렬 스케줄 예 « 트랜잭션 T 와  T 에 대한 비직렬 스케줄의 예1 : 정확한 결과 생성   트랜잭션 T , T 를 대상으로 하는 첫 번째 비직렬 스케줄   (병행 수행에 성공하여 정확한 트랜잭션 수행 결과를 생성) « 트랜잭션 T 와  T 에 대한  비직렬 스케줄의 예2 : 잘못된 결과 생성   트랜잭션 T , T 를 대상으로 하는 첫 번째 비직렬 스케줄   (병행 수행에 실패하여 잘못된 트랜잭션 수행 결과를 생성) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 164 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 병행제어와 트랜잭션 스케줄(2) 13주차  수업목표   트랜잭션 스케줄과 로킹기법을 설명할 수 있다. 3교시  1. 트랜잭션 스케줄  세부내용  2. 로킹기법 1. 트랜잭션 스케줄  ▶ 직렬 가능 스케줄(serializable schedule)
Ÿ 의미 ­ 직렬 스케줄에 따라 수행한 것과 같이 정확한 결과를 생성하는 비직렬 스케줄 ­ 비직렬 스케줄 중에서 수행 결과가 동일한 직렬 스케줄이 있는 것
Ÿ 특징 ­ 인터리빙 방식으로 병행 수행하면서도 정확한 결과를 얻을 수 있음 ­ 직렬 가능 스케줄인지를 판단하는 것은 간단한 작업이 아니므로 직렬 가능성을 보장하는  병행 제어 기법을 사용하는 것이 일반적임 ▶ 직렬 가능 스케줄 예 « 트랜잭션 T 와  T 에 대한 비직렬 스케줄의 예1 : 정확한 결과 생성   트랜잭션 T , T 를 대상으로 하는 비직렬 스케줄이면서    정확한 수행 결과를 생성하기 때문에 직렬 가능 스케줄임  ▶ 병행 제어 기법
Ÿ 의미 ­ 병행 수행하면서도 직렬 가능성을 보장하기 위한 기법 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 165 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ 방법 ­ 모든  트랜잭션이  준수하면  직렬  가능성이  보장되는  규약을  정의하고,  트랜잭션들이  이  규약을 따르도록 함
Ÿ 대표적인 병행 제어 기법 ­ 로킹 기법 2. 로킹기법  ▶ 로킹(locking) 기법

1) 기본 원리 ­ 한 트랜잭션이 먼저 접근한 데이터에 대한 연산을 끝낼 때까지는 다른 트랜잭션이 그 데이 터에 접근하지 못하도록 상호 배제(mutual exclusion)함
2) 방법 ­ 병행 수행되는 트랜잭션들이 같은 데이터에 동시에 접근하지 못하도록 lock과 unlock 연산 을 이용해 제어 ⋅ lock : 트랜잭션이 데이터에 대한 독점권을 요청하는 연산 ⋅ unlock : 트랜잭션이 데이터에 대한 독점권을 반환하는 연산
3) 기본 로킹 규약 ­ 트랜잭션은 데이터에 접근하기 위해 먼저 lock 연산을 실행해 독점권을 획득함 ⋅ read 또는 write 연산을 실행하기 전 lock 연산을 실행 ­ 다른 트랜잭션에 의해 이미 lock 연산이 실행된 데이터에 대해 다시 lock 연산을 실행시킬  수 없음 ­ 독점권을  획득한 데이터에 대한  모든  연산의  수행이 끝나면  트랜잭션은 unlock 연산을  실 행해서 독점권을 반납함
4) 로킹 단위 ­ lock 연산을 실행하는 대상 데이터의 크기 ­ 전체 데이터베이스부터 릴레이션, 투플, 속성까지도 가능함  ­ 로킹 단위가 커질수록 병행성은 낮아지지만 제어가 쉬움 ­ 로킹 단위가 작아질수록 제어가 어렵지만 병행성은 높아짐 ▶ 기본 로킹 규약의 효율성을 높이기 위한 방법 ­ 트랜잭션들이 같은 데이터에 대해 동시에 read 연산을 실행하는 것을 허용 ⋅ lock 연산을 두 가지 종류로 구분하여 사용 « lock 연산 연산 설명 트랜잭션이 데이터에 대해 공용 lock 연산을 실행하면, 해당  공용(shared lock) 데이터에 read 연산을 실행할 수 있지만 write 연산은 실행  할  수  없음.  그리고  해당  데이터에  다른  트랜잭션도  공용  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 166 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr lock  연산을  동시에  실행  할  수  있음(데이터에  대한  사용권 을 여러 트랜잭션이 함께 가질 수 있음) 트랜잭션이 데이터에 대해 공용 lock 연산을 실행하면, 해당  데이터에 read 연산과 write 연산을 모두 실행 할 수 있음.  전용(exclusive lock) 그러나  해당  데이터에  다른  트랜잭션은  공용이든  전용이든  어떤 lock 연산도 실행 할 수 없음(전용 lock 연산을 실행한  트랜잭션만 해당 데이터에 대한 독점권을 가질 수 있음) « lock 연산의 양립성 연산 공용 lock 전용 lock 공용 lock 가능 불가능 전용 lock 불가능 불가능 ⋅ 서로 다른 트랜잭션이 같은 데이터에 공용 lock 연산을  동시에 실행시킬 수 있음 ⋅ 다른 트랜잭션이 전용 lock 연산을 실행한 데이터는 공 용 lock, 전용 lock을 모두 실행 불가 ▶ 기본 로킹 규약으로 직렬 가능성이 보장되지 않는 스케줄 예 트랜잭션 T 이 데이터 X에   너무 빨리 unlock 연산을  실행하여 트랜잭션 T 가   일관성 없는 데이터에  접근했기 때문 [해결책 : 2단계 로킹 규약] ▶ 2단계 로킹 규약(2PLP; 2 Phase Locking Protocol) ­ 기본  로킹  규약의  문제를  해결하고  트랜잭션의  직렬  가능성을  보장하기  위해  lock과  unlock 연산의 수행 시점에 대한 새로운 규약을 추가한 것
Ÿ 방법 ­ 트랜잭션이 lock과 unlock 연산을 확장 단계와 축소 단계로 나누어 수행 ⋅ 트랜잭션이 처음 수행되면 확장 단계로 들어가 lock 연산만 실행 가능 ⋅ unlock 연산을 실행하면 축소 단계로 들어가 unlock 연산만 실행 가능 ⋅ 트랜잭션은 첫 번째 unlock 연산 실행 전에 필요한 모든 lock 연산을 실행해야 함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 167 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 2단계 로킹 규약의 전략 ⋅ 트랜잭션이  lock  연산만  실행할  수  있고,  확장 단계 unlock 연산은 실행할 수 없는 단계  ⋅ 트랜잭션이  unlock  연산만  실행할  수  있고,  축소 단계 lock 연산은 실행할 수 없는 단계  « 2단계 로킹 규약으로 직렬 가능성이 보장된 스케줄 2단계 로킹 규약을 준수하여 직렬 가능성이 보장된 스케줄 예 ▶ 교착 상태(deadlock) ­ 트랜잭션들이  상대가  독점하고  있는  데이터에  unlock  연산이  실행되기를  서로  기다리면서  트랜잭션의 수행을 중단하고 있는 상태 ­ 처음부터 교착 상태가 발생하지 않도록 예방하거나, 발생 시 빨리  탐지하여 필요한 조치를  취해야 함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 168 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스 보안과 권한 14주차  수업목표   데이터베이스 보안과 권한을 설명할 수 있다. 1교시  1. 데이터베이스 보안 세부내용  2. 데이터베이스 권한 관리  1. 데이터베이스 보안  ▶ 데이터베이스 보안의 목표 ­ 조직에서 허가한 사용자만 데이터베이스에 접근할 수 있도록 통제하여 보안을 유지하는 것 « 데이터베이스 보안의 유형 물리적 환경에 대한 보안 자연 재해 등으로부터 보호 데이터베이스 보안 권한 관리를 통한 보안 권한이 없는 사용자로부터 보호 운영 관리를 통한 보안 권한이 있는 사용자로부터 보호 ▶ 데이터베이스 보안

1) 물리적 환경에 대한 보안 ­ 자연  재해처럼 데이터베이스에  물리적 손실을  발생시키는  위험으로부터  데이터베이스를  보 호
2) 권한 관리를 통한 보안 ­ 접근이 허락된 사용자만 권한 내에서 데이터베이스를 사용하도록 보호 ­ 계정이  발급된  사용자만  데이터베이스에  접근할  수  있도록  통제하고  각  사용자마다  사용  범위와 수행 가능한 작업 내용을 제한
3) 운영 관리를 통한 보안 ­ 접근이 허락된 사용자가 부여된 권한 내에서 데이터베이스를 사용하는 동안 데이터 무결성 을 유지하도록 제약조건을 정의하고 위반하지 않도록 통제 2. 데이터베이스 권한 관리  ▶ 권한 관리의 개념
1) 접근 제어(access control) ­ 계정이 발급된 사용자가 로그인에 성공했을 경우에만 데이터베이스에 접근 허용 ­ 사용자 계정 관리는 데이터베이스 관리자가 담당
2) 각 사용자는 허용된 권한 내에서만 데이터베이스를 사용 ­ 로그인에 성공한 사용자도 데이터베이스 사용 범위와 수행 가능한 작업이 제한됨 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 169 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ⋅ 보안을 위한 데이터 단위는 데이터베이스 전체부터 특정 테이블의 특정 행과 열 위치에  있는 특정 데이터 값까지 다양함
3) 데이터베이스의 모든 객체는 객체를 생성한 사용자만 사용 권한을 가짐 ­ 데이터베이스  객체의  소유자는  필요에  따라  SQL  문을  이용해  다른  사용자에게  사용  권한 을 부여하거나 취소할 수 있음 « 로그인과 데이터베이스 접근 권한 DBMS DB 사용자1 테이블1 허가 사용자2 거부 테이블2 거부 ❶로그인 ❷권한 확인 ▶ 권한 관리를 통한 보안 « 권한 관리를 통한 보안 권한 부여 GRANT 객체 권한 권한 취소 REVOKE 권한 관리를 통한  보안 역할 생성 CREATE ROLE 역할 역할에 대한 권한 부여 GRANT 역할 부여 ▶ 객체 권한 부여 : GRANT 문 ­ 객체의 소유자가 다른 사용자에게 객체에 대한 사용 권한을 부여 GRANT  권한  ON  객체  TO  사용자  [WITH GRANT OPTION]; ­ 부여 가능한 주요 권한 ⋅ NSERT, DELETE, UPDATE, SELECT, REex)ERENCES ­ REex)ERENCES : 외래키 제약조건을 정의할 수 있는 권한 ­ PDATE나 SELECT는 테이블의 일부 속성에 대한 권한  부여도 가능  ⋅ 여러 권한을 한번에 동시에 부여하는 것도 가능 ­ 기본적으로 GRANT 문으로 부여받은 권한은 다른 사용자에게 부여할 수 없음
Ÿ PUBLIC ­ 모든 사용자에게 권한을  똑같이 부여하고  싶다면 특정 사용자를  지정하는 대신 PUBLIC  키워드를 이용하여 작성 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 170 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr
Ÿ WITH GRANT OPTION ­ 권한을 부여받은 사용자가 자신이 부여받은 권한을 다른 사용자에게도 부여할 수 있도록  함 ◼ 예제 11
-1 ­ 고객 테이블에 대한 검색 권한을 사용자 Hong에게 부여해보자. GRANT  SELECT  ON  고객  TO  Hong; ◼ 예제 11
-2 ­ 고객 테이블에 대한 삽입과 삭제 권한을 모든 사용자에게 부여해보자. GRANT  INSERT,  DELETE  ON  고객  TO  PUBLIC; ◼ 예제 11
-3 ­ 고객  테이블을  구성하는  속성  중  등급과  적립금  속성에  대한  수정  권한을  사용자  Park 에게 부여해보자. GRANT  UPDATE(등급, 적립금)  ON  고객  TO  Park; ◼ 예제 11
-4 ­ 고객  테이블에  대한  검색  권한을  WITH  GRANT  OPTION을  포함하여  사용자  Lee에게  부여해보자. GRANT  SELECT  ON  고객  TO  Lee  WITH  GRANT OPTION; ▶ 시스템 권한 부여 : GRANT 문 ­ 시스템 권한은 데이터베이스 관리자가 부여함 ⋅ 시스템 권한 : 데이터베이스 관리와 관련된 작업에 대한 권한 ­ CREATE TABLE, CREATE VIEW 등 데이터 정의어(DDL)와 관련된 권한들 ­ 시스템 권한을 부여할 때는 객체를 지정할 필요가 없음 ◼ 예제 11
-5 ­ 테이블을 생성할 수 있는 시스템 권한을 사용자 Song에게 부여해보자. GRANT  CREATE  TABLE  TO  Song; ◼ 예제 11
-6 ­ 뷰를 생성할 수 있는 시스템 권한을 사용자 Shin에게 부여해보자. GRANT  CREATE  VIEW  TO  Shin; ▶ 객체 권한 취소 : REVOKE 문 ­ 객체 소유자가 다른 사용자에게 부여한 객체의 사용 권한을 취소 REVOKE  권한  ON  객체  ex)ROM  사용자  CASCADE ╎ RESTRICT;
Ÿ CASCADE 옵션 ­ 권한을 취소할 사용자가 다른 사용자에게 부여한 권한도 연쇄적으로 함께 취소
Ÿ RESTRICT 옵션 ­ 권한을 취소할 사용자가 다른 사용자에게 부여한 권한은 취소되지 않도록 함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 171 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 세 사용자의 권한 부여 예 사용자 “Kim”이 “Hong”에게  사용자 kim 부여한 고객 테이블에 대한  GRANT SELECT ON 고객 TO Hong WITH GRANT OPTION  검색 권한을 취소한다면  “Park”에게 부여된 검색  권한은 어떻게 처리될까? 사용자 Hong 선택 가능 (CASCADE 또는 RESTRICT) GRANT SELECT ON 고객 TO Park 사용자 Park ◼ 예제 11
-7 ­ [그림  ‘세  사용자의  권한  부여  예’]와  같이  권한이  부여된  상황에서,  Kim이  Hong에게  부여한  고객  테이블에  대한  검색  권한을  취소하면서  Hong이  다른  사용자에게  부여한  고객 테이블에 대한 검색 권한도 함께 취소하도록 해보자. REVOKE  SELECT  ON  고객  ex)ROM  Hong  CASCADE; ◼ 예제 11
-8 ­ [그림  ‘세  사용자의  권한 부여  예’]와  같이  권한이  부여된  상황에서,  Hong이  다른  사용 자에게  권한을  부여한  적이  없는  경우에만  Kim이  Hong에게  부여한  고객  테이블에  대 한 검색 권한을 취소하도록 해보자. REVOKE  SELECT  ON  고객  ex)ROM  Hong  RESTRICT; ▶ 시스템 권한 취소 : REVOKE 문 ­ 데이터베이스 관리자가 다른 사용자에게 부여한 시스템 권한을 취소 ­ 특정 객체에 대한 권한 취소가 아니므로 객체를 지정할 필요 없음 ◼ 예제 11
-9 ­ Hong에게 부여한 테이블 생성 권한을 취소해보자. REVOKE  CREATE  TABLE  ex)ROM  Hong; ▶ 권한 목록 ­ 권한 부여에 관한 내용을 기록한 것 ⋅ 사용자들에게  어떤 권한을  부여했는지,  WITH  GRANT OPTION을 포함하여 권한을  부 여했는지 등 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 172 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 고객 테이블에 대한 각 사용자의 권한 목록      권한 고객 테이블에 대한 권한 사용자 Kim 소유자 Hong INSERT/DELETE/SELECT Park INSERT/DELETE/UPDATE(등급, 적립금) Lee INSERT/DELETE/SELECT(WITH GRANT OPTION) 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 173 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 데이터베이스 역할과 객체지향 데이터베이스 14주차  수업목표   데이터베이스 역할과 객체지향 데이터베이스를 설명할 수 있다. 2교시  1. 데이터베이스 역할 세부내용  2. 객체지향 데이터베이스 ※ 학습목표 객체지향 데이터베이스 새로운 모델 적용 객체관계 데이터베이스 데이터베이스 응용 기술 분산 데이터베이스 멀티미디어 데이터베이스 응용 기술 웹 데이터베이스  데이터 웨어하우스 빅 데이터 1. 데이터베이스 역할  ▶ 역할(role)의 개념 ­ 여러 권한들을 그룹으로 묶어 놓은 것 ⋅ 권한들을 넣어둔 바구니 « 권한과 역할 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 174 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 역할의 필요성 « 세 개의 권한을 사용자 세 명에게 부여하는 예 사용자 “Kim”이 자신의 고객 테이블에 대한 검색, 삽입, 삭제 권한을  “Hong”, “Park”, “Lee”에게 모두 부여하려면 작업이 번거로움 ⇨ 역할을 이용하면 훨씬 수월하게 작업할 수 있음 GRANT SELECT ON 고객 TO Hong; GRANT INSERT ON 고객 TO Hong; GRANT DELETE ON 고객 TO Hong; GRANT SELECT ON 고객 TO Park; GRANT INSERT ON 고객 TO Park; GRANT DELETE ON 고객 TO Park; GRANT SELECT ON 고객 TO Lee; GRANT INSERT ON 고객 TO Lee; Hong Park Lee GRANT DELETE ON 고객 TO Lee; ­ 여러  사용자에게  동일한  권한들을  부여하고  취소하는  작업을  편리하게  수행할  수  있도록  함 ⋅ 사용자에게 부여하고 싶은 여러 권한들을 역할에 미리 넣어두고 필요할 때 역할을 부여 하면 여러 권한을 한번에 부여할 수 있음 ⋅ 사용자에게 부여한 역할을 취소하면 한번에 여러 권한들을 취소할 수 있음 ­ 권한 관리가 쉬워짐 ⋅ 새로운 권한의 추가, 기존 권한의 취소 등 역할에 변화가 생기면 해당 역할을 부여받은  모든 사용자에게 변화가 그대로 반영됨  ▶ 역할 생성 : CREATE ROLE 문 ­ 새로운 역할의 생성은 데이터베이스 관리자가 담당 CREATE  ROLE  롤이름; ◼ 예제 11
-10 ­ role_1이라는 이름의 역할을 생성해보자. CREATE  ROLE  role_1; ▶ 역할에 권한 추가 : GRANT 문 ­ 객체와 관련된 권한을 역할에 추가하는 작업은 객체의 소유자가 담당 GRANT  권한  ON  객체  TO  롤이름; ◼ 예제 11
-11 ­ 고객  테이블에 대한 검색·삽입·삭제 권한을  [예제 11
-10]에서 생성한 role_1 역할에 넣 어보자. GRANT  SELECT,  INSERT,  DELETE  ON  고객  TO  role_1;   학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 175 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 역할 부여 : GRANT 문 ­ 역할을 사용자에게 부여하는 것은 데이터베이스 관리자가 담당 GRANT  롤이름  TO  사용자; ◼ 예제 11
-12 ­ 고객  테이블에  대한  검색·삽입·삭제  권한을 포함하고 있는 role_1  역할을 사용자  Hong 에게 부여해보자. GRANT  role_1  TO  Hong;   ▶ 역할을 이용한 예 « 역할을 이용해 세 개의 권한을 세 명의 사용자에게 부여하는 예 역할을 이용하면 사용자 “Kim”이 자신의 고객 테이블에 대한 검색, 삽입,  삭제 권한을 “Hong”, “Park”, “Lee”에게 손쉽게 부여할 수 있고 새로운  권한의 추가도 간편하게 수행됨 GRANT role_1 TO Hong ; GRANT role_1 TO Prak ; GRANT role_1 TO Lee ; Hong Park Lee ▶ 역할 취소 : REVOKE 문 ­ 사용자에게 부여한 역할의 취소는 데이터베이스 관리자가 담당 REVOKE  롤이름  ex)ROM  사용자; ◼ 예제 11
-13 ­ 사용자 Hong에게 부여한 role_1 역할을 취소해보자. REVOKE  role_1  ex)ROM  Hong; ▶ 역할 제거 : DROP ROLE 문 ­ 역할을  제거하면  제거된  역할을  부여받은  모든  사용자들에  대해  역할에  속해  있던  권한이  모두 취소됨 ­ 역할 제거는 데이터베이스 관리자가 담당 DROP  ROLE  롤이름; ◼ 예제 11
-14 ­ [예제 11
-10]에서 생성한 role_1 역할을 제거해보자. DROP  ROLE  role_1; 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 176 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 2. 객체지향 데이터베이스 ▶ 객체지향 데이터 모델 ­ 객체지향 개념에 기반을 둔 데이터 모델 ⋅ 객체와 객체 식별자, 속성과 메소드, 클래스, 클래스 계층 및 상속, 복합 객체 등을 지 원 ­ 다양한 응용 분야의 데이터 모델링을 위한 새로운 요구 사항을 지원 ­ 의미적으로 관계가 있는 데이터베이스 구조를 표현하기 위한 강력한 설계 기능 제공 ­ 특수한 몇몇 분야에서 사용됨 ▶ 객체지향 데이터 모델 ­ 객체(object) ­ 현실 세계에 존재하는 개체를 추상적으로 표현한 것 ­ 객체지향 데이터 모델을 구성하는 기본 요소 ­ 각 객체는 시스템 전체에서 유일하게 식별될 수 있는 객체 식별자(OID; Object Identifier) 를 가짐 ­ 객체 간의 관계는 객체 식별자를 사용해 참조할 수 있음 ­ 객체는 상태를 의미하는 속성과 상태를 조작하는 메소드로 구성 ▶ 객체지향 데이터 모델 ­ 속성(attribute) ­ 관계 데이터 모델의 속성과 같은 의미 ­ 관계  데이터  모델의  속성은  기본으로  제공되는  데이터  타입을  도메인으로  하는  단일  값만  가질 수 있지만, 객체지향 데이터 모델의 속성은 값을 여러 개 가질 수 있음 ­ 사용자가 정의한 클래스뿐만 아니라 해당 클래스의 하위 클래스도 도메인으로 정의 가능 ▶ 객체지향 데이터 모델 ­ 메소드(method) ­ 객체에 수행할 수 있는 연산 ­ 객체의 속성 값을 검색하거나 추가, 삭제, 수정하는 데 주로 사용 ­ 프로그래밍 언어의 함수와 유사한 개념 ▶ 객체지향 데이터 모델 ­ 메시지(message) ­ 객체에 접근하기 위한 공용 인터페이스 역할 담당 ­ 특정 객체의 속성과 메소드에 접근하려면 메시지를 사용해야 함 예) 객체의 속성 값을 수정하려면 그에 해당하는 메소드를 실행시키는 메시지를 해당 객체       에 보내야 함   ▶ 객체지향 데이터 모델 ­ 클래스(class) ­ 속성과 메소드를 공유하는 유사한 성질의 객체들을 하나로 그룹화한 것 ­ 객체는 클래스의 구성원 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 177 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ⋅ 객체 = 클래스 인스턴스(class instance) 또는 객체 인스턴스(object instance) ­ 클래스 내부에 해당 클래스의 객체를 위한 데이터 구조와 메소드 구현의 세부 사항을 기술 ▶ 객체지향 데이터 모델 ­ 클래스와 객체 « 사원 클래스와 객체 인스턴스 속성 메소드 객체 인스턴스 ▶ 객체지향 데이터 모델 ­ 클래스 계층(class hierarchy) ­ 클래스를 세분화(specialization)하면 클래스 간의 계층 관계가 발생하여 결과적으로 클래스  계층이 형성됨 ­ 상위클래스와 하위클래스
Ÿ 상위클래스(superclass)  ­ 클래스 계층에서 상위에 위치하는 클래스
Ÿ 하위클래스(subclass)  ­ 클래스 계층에서 하위에 위치하는 클래스 ⇨ 상위클래스와 하위클래스는 일반적으로 IS
-A 관계가 성립 « 클래스 계층의 예 운동선수 축구선수 야구선수 공격수 수비수 골기퍼 투수 포수 타자 ▶ 객체지향 데이터 모델 ­ 상속(inheritance) ­ 상위클래스의 속성과 메소드를 자신의 모든 하위클래스에 물려주는 개념 ­ 단일 상속 vs. 다중 상속
Ÿ 단일 상속  ­ 하위클래스가 단 하나의 상위클래스로부터 상속받는 것
Ÿ 다중 상속 ­ 하위 클래스가 여러 개의 상위클래스로부터 상속받는 것 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 178 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr « 다중 상속의 예 컴퓨터 휴대전화 스마트폰  학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 179 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr 객체관계 및 분산 데이터베이스 14주차  수업목표   객체관계 데이터베이스와 분산 데이터베이스를 설명할 수 있다. 3교시  1. 객체관계 데이터베이스 세부내용  2. 분산 데이터베이스 1. 객체관계 데이터베이스  ▶ 객체관계 데이터 모델 ­ 객체지향 개념과 관계 데이터 모델의 개념을 통합한 것 ⋅ 릴레이션, 객체, 메소드, 클래스, 상속, 캡슐화, 복합 객체 등을 모두 지원 ­ SQL을 표준 질의어로 채택하여 계속 발전시킴 ⋅ 1999년  발표된 SQL3부터는 객체지향 개념을 지원하기 때문에 객체관계 데이터베이스 에 적용 가능 ⋅ 기본  질의  기능과  함께  사용자  정의  타입,  객체,  객체  식별자,  메소드  등과  같은  객체 지향 특성도 가지고 있음 ▶ 객체지향 데이터베이스 vs. 객체관계 데이터베이스 ­ 기능적 유사성은 많지만, 기본 철학과 구현 방식이 달라 데이터베이스의  설계나 조작  방법  등에 차이가 있음
Ÿ 객체지향 데이터베이스 ­ 객체지향  프로그래밍  개념에  기반을  두고  데이터베이스의  기능을  추가하는데  목적을  두 고 있음
Ÿ 객체관계 데이터베이스 ­ 관계 데이터베이스에 기반을 두고 사용자가 다양한 데이터 타입을 추가할 수 있도록 하 는데 목적을 두고 있음 2. 분산 데이터베이스  ▶ 분산 데이터베이스 

1) 중앙 집중식 데이터베이스 시스템 ­ 데이터베이스 시스템을 물리적으로 한 장소에 설치하여 운영하는 것
2) 분산 데이터베이스 시스템(distributed database system) ­ 물리적으로  분산된  데이터베이스  시스템을  네트워크로  연결해 사용자가  논리적으로는 하나 의 중앙 집중식 데이터베이스 시스템처럼 사용할 수 있도록 한 것 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 180 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 분산 데이터베이스 시스템의 구성 « 분산 데이터베이스 시스템의 구성            ▶ 분산 데이터베이스 시스템의 주요 구성 요소 
1) 분산 처리기(distributed processor) ­ 지역별로 필요한 데이터를 처리할 수 있는 지역 컴퓨터(local computer) ­ 각 지역의 데이터베이스를 자체적으로 관리하는 DBMS를 별도로 가지고 있음
2) 분산 데이터베이스(distributed database) ­ 물리적으로 분산된 지역 데이터베이스(local database) ­ 해당 지역에서 가장 많이 사용하는 데이터를 저장
3) 통신 네트워크 ­ 분산 처리기는 통신 네트워크를 통해 자원을 공유 ­ 통신 네트워크에 있는 모든 분산 처리기는 특정 통신 규약에 따라 데이터를 전송하고 수신 함 ▶ 데이터베이스 분산 저장 방법
① 데이터가 중복되지 않게 분할하여 지역의 분산 데이터베이스에 저장
② 지역의 분산 데이터베이스에 데이터를 중복해서 저장(주로 이용) « 데이터 중복의 장단점 구분 내용 ⋅ 한 지역에서 문제가 발생해도 동일한 데이터가 저장되어 있는 다른 지역에서  작업을 계속 수행할 수 있으므로 신뢰성과 가용성이 높아짐 ⋅ 동일한 데이터가 저장된 여러 지역에서 병렬 처리를 수행할 수 있어 데이터  장점 처리 성능이 향상됨 ⋅ 데이터 처리 요청이 한 지역에 집중되지 않고 여러 지역에 분산되므로 처리  부담을 줄일 수 있음 ⋅ 동일한 데이터를 중복 저장하므로 저장 공간을 많이 사용함 단점 ⋅ 데이터를 변경하려면 중복 저장된 데이터를 모두 함께 변경해야 하므로 비용 이 증가하고, 변경 도중에 문제가 생겨 데이터 불일치가 발생할 수도 있음 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 181 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ▶ 단편화(fragmentation)
Ÿ 의미 ­ 하나의 릴레이션을 더 작은 조각(단편)으로 나누고 각 조각을 별개의 릴레이션으로 처리 하는 것
Ÿ 장점 ­ 각 조각이  전체  릴레이션의 일부가  되기  때문에 저장 공간을  적게 사용하고,  관리할 데 이터도 줄어듦 ­ 데이터 중복의 장점은 그대로 취하면서 데이터 중복의 단점을 보완할 수 있음 ▶ 분산 데이터베이스 시스템의 주요 목표 

1) 분산 데이터 독립성(distributed data independency) ­ 데이터베이스가 분산되어 있음을 사용자가 인식하지 못하게 하는 것 ­ 분산 투명성(distribution transparency)이 보장되어야 함 ⋅ 위치 투명성 ⋅ 중복 투명성 ⋅ 단편화 투명성 ⋅ 병행 투명성 ⋅ 장애 투명성 ▶ 분산 데이터베이스 
1) 분산 투명성 
- 위치 투명성(location transparency) ­ 사용자가  접근하려는  데이터의  실제  저장  위치를  알  필요  없이  논리적  이름만으로  데이터 에 접근할 수 있음 ­ 시스템 카탈로그에서 데이터의 모든 위치 정보를 관리하다가 데이터 접근 요구가 발생하면  이 위치 정보를 통해 데이터를 제공함 ­ 다른 지역에 있는 데이터에 대한 접근 요청을 처리하는 방법 ⋅ 다른 지역에 있는 데이터를 가져와 처리함 ⋅ 데이터 접근 요청을 한 트랜잭션을 데이터가 있는 지역으로 보내 처리한 후, 결과 데이 터만 가져옴 ⋅ 두 가지 방법을 모두 사용해서 처리함

2) 분산 투명성 
- 중복 투명성(replication transparency) ­ 동일한 데이터가 여러 지역에 중복 저장되더라도 사용자가 중복을 인식하지 못하고, 하나의  데이터베이스 시스템에 데이터가 저장된 것처럼 사용하는 것 ­ 데이터를 중복 저장하는 방법
Ÿ 완전 중복 ­ 동일한 데이터를 둘 이상 지역의 분산 데이터베이스에 저장하는 것
Ÿ 부분 중복 ­ 일부 데이터만 중복하여 저장하는 것 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 182 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr

3) 분산 투명성 
- 단편화 투명성(fragmentation transparency) ­ 단편화된 데이터를 여러 지역에 나누어 저장하지만 사용자는 데이터가 단편화되지 않은 것 처럼 사용할 수 있음

4) 분산 투명성 
- 병행 투명성(concurrency transparency) ­ 분산  데이터베이스와  관련된  트랜잭션들이  동시에  수행되더라도  결과는  항상  일관성을  유 지하는 것

5) 분산 투명성 
- 장애 투명성(failure transparency) ­ 특정 지역에서 문제가 발생하더라도 전체 시스템이 작업을 계속 수행할 수 있는 것 ▶ 분산 데이터베이스의 기본 구조  « 분산 데이터베이스의 일반 구조 전역 개념 스키마 단편화 스키마 할당 스키마 지역 스키마 지역 스키마 지역 스키마 데이터베이스 관리 시스템 데이터베이스 관리 시스템 데이터베이스 관리 시스템 데이터베이스  데이터베이스  데이터베이스  지역1 지역2 지역3

1) 전역 개념 스키마(global conceptual schema) ­ 분산 데이터베이스에 저장할 모든 데이터 구조와 제약조건을 정의 ⋅ 데이터베이스 안에 존재하는 모든 릴레이션 스키마의 집합 ­ 데이터 분산은 고려하지 않고 정의함
2) 단편화 스키마(fragmentation schema) ­ 전역 개념 스키마를 논리적으로 분할하는 방법인 단편화를 정의 ­ 전역 개념 스키마와 각 조각 스키마의 대응 관계도 정의
3) 할당 스키마(allocation schema) ­ 각 조각 스키마의 인스턴스를 물리적으로 저장해야 되는 지역을 정의
4) 지역 스키마(local schema) ­ 지역별로 저장하고 있는 데이터 구조와 제약조건을 정의 ▶ 분산 데이터베이스 시스템의 장점 
Ÿ 신뢰성과 가용성 증대 ­ 장애가 발생하면 다른 지역의 데이터베이스를 이용해 작업을 계속 수행할 수 있음
Ÿ 지역 자치성과 효율성 증대 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 183 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다. 데이터베이스 www.smart.ac.kr ­ 데이터베이스를 지역별로 독립적으로 관리 ­ 데이터 요청에 대한 응답 시간을 줄이고 통신 비용도 절약됨
Ÿ 확장성 증대 ­ 처리할 데이터 양이 증가하면 새로운 지역에 데이터베이스를 설치하여 운영하면 됨 ▶ 분산 데이터베이스 시스템의 단점  ­ 중앙 집중식 시스템에 비해 설계 및 구축 비용이 많이 발생함 ­ 여러 지역에 대한 관리가 복잡하고 비용도 많이 발생함 ­ 중앙 집중식 시스템에 비해 추가적인 통신 비용이나 처리 비용이 발생함 학습자님의 학습 편의 향상을 위하여 제공되는 이 자료에 대한 저작권은 숭실원격평생교육원에 있습니다. 184 해당 자료의 재편집 및 무단 복제가 이루어질 경우 법적 책임이 발생할 수 있습니다.
